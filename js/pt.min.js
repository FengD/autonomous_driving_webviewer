'use strict';var _slicedToArray=function(){function S(T,P){var C=[],E=!0,k=!1,L=void 0;try{for(var A=T[Symbol.iterator](),M;!(E=(M=A.next()).done)&&(C.push(M.value),!(P&&C.length===P));E=!0);}catch(B){k=!0,L=B}finally{try{!E&&A['return']&&A['return']()}finally{if(k)throw L}}return C}return function(T,P){if(Array.isArray(T))return T;if(Symbol.iterator in Object(T))return S(T,P);throw new TypeError('Invalid attempt to destructure non-iterable instance')}}(),_typeof='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(S){return typeof S}:function(S){return S&&'function'==typeof Symbol&&S.constructor===Symbol&&S!==Symbol.prototype?'symbol':typeof S},_createClass=function(){function S(T,P){for(var C=0,E;C<P.length;C++)E=P[C],E.enumerable=E.enumerable||!1,E.configurable=!0,'value'in E&&(E.writable=!0),Object.defineProperty(T,E.key,E)}return function(T,P,C){return P&&S(T.prototype,P),C&&S(T,C),T}}();function _possibleConstructorReturn(S,T){if(!S)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return T&&('object'==typeof T||'function'==typeof T)?T:S}function _inherits(S,T){if('function'!=typeof T&&null!==T)throw new TypeError('Super expression must either be null or a function, not '+typeof T);S.prototype=Object.create(T&&T.prototype,{constructor:{value:S,enumerable:!1,writable:!0,configurable:!0}}),T&&(Object.setPrototypeOf?Object.setPrototypeOf(S,T):S.__proto__=T)}function _toConsumableArray(S){if(Array.isArray(S)){for(var T=0,P=Array(S.length);T<S.length;T++)P[T]=S[T];return P}return Array.from(S)}function _classCallCheck(S,T){if(!(S instanceof T))throw new TypeError('Cannot call a class as a function')}Potree.KeyCodes={DELETE:46};THREE.EventDispatcher.prototype.removeEventListeners=function(type){if(this._listeners===undefined){return;}if(this._listeners[type]){delete this._listeners[type];}};THREE.PerspectiveCamera.prototype.zoomTo=function(node,factor){if(!node.geometry&&!node.boundingSphere&&!node.boundingBox){return;}if(node.geometry&&node.geometry.boundingSphere===null){node.geometry.computeBoundingSphere();}node.updateMatrixWorld();var bs=void 0;if(node.boundingSphere){bs=node.boundingSphere;}else if(node.geometry&&node.geometry.boundingSphere){bs=node.geometry.boundingSphere;}else{bs=node.boundingBox.getBoundingSphere();}var _factor=factor||1;bs=bs.clone().applyMatrix4(node.matrixWorld);var radius=bs.radius;var fovr=this.fov*Math.PI/180;if(this.aspect<1){fovr=fovr*this.aspect;}var distanceFactor=Math.abs(radius/Math.sin(fovr/2))*_factor;var offset=this.getWorldDirection().multiplyScalar(-distanceFactor);this.position.copy(bs.center.clone().add(offset));};THREE.OrthographicCamera.prototype.zoomTo=function(node){var factor=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!node.geometry&&!node.boundingBox){return;}// TODO
//let minWS = new THREE.Vector4(node.boundingBox.min.x, node.boundingBox.min.y, node.boundingBox.min.z, 1);
//let minVS = minWS.applyMatrix4(this.matrixWorldInverse);
//let right = node.boundingBox.max.x;
//let bottom	= node.boundingBox.min.y;
//let top = node.boundingBox.max.y;
    this.updateProjectionMatrix();};THREE.Ray.prototype.distanceToPlaneWithNegative=function(plane){var denominator=plane.normal.dot(this.direction);if(denominator===0){// line is coplanar, return origin
    if(plane.distanceToPoint(this.origin)===0){return 0;}// Null is preferable to undefined since undefined means.... it is undefined
    return null;}var t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;return t;};function Potree(){}Potree.version={major:1,minor:6,suffix:''};console.log('Potree '+Potree.version.major+'.'+Potree.version.minor+Potree.version.suffix);Potree.pointBudget=1*1000*1000;Potree.framenumber=0;Potree.numNodesLoading=0;Potree.maxNodesLoading=4;Potree.Shaders={};Potree.webgl={shaders:{},vaos:{},vbos:{}};Potree.debug={};Potree.scriptPath=null;if(document.currentScript.src){Potree.scriptPath=new URL(document.currentScript.src+'/..').href;if(Potree.scriptPath.slice(-1)==='/'){Potree.scriptPath=Potree.scriptPath.slice(0,-1);}}else{console.error('Potree was unable to find its script path using document.currentScript. Is Potree included with a script tag? Does your browser support this function?');}Potree.resourcePath=Potree.scriptPath+'/resources';var EnumItem=function(){function EnumItem(object){_classCallCheck(this,EnumItem);var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=Object.keys(object)[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var key=_step.value;this[key]=object[key];}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}}_createClass(EnumItem,[{key:'inspect',value:function inspect(){return'Enum('+this.name+': '+this.value+')';}}]);return EnumItem;}();;var Enum=function(){function Enum(object){_classCallCheck(this,Enum);this.object=object;var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=Object.keys(object)[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var key=_step2.value;var value=object[key];if((typeof value==='undefined'?'undefined':_typeof(value))==="object"){value.name=key;}else{value={name:key,value:value};}this[key]=new EnumItem(value);}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}}_createClass(Enum,[{key:'fromValue',value:function fromValue(value){var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=Object.keys(this.object)[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var key=_step3.value;if(this[key].value===value){return this[key];}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}throw new Error('No enum for value: '+value);}}]);return Enum;}();;Potree.CameraMode={ORTHOGRAPHIC:0,PERSPECTIVE:1};Potree.ClipTask={NONE:0,HIGHLIGHT:1,SHOW_INSIDE:2,SHOW_OUTSIDE:3};Potree.ClipMethod={INSIDE_ANY:0,INSIDE_ALL:1};Potree.MOUSE={LEFT:1,RIGHT:2,MIDDLE:4};Potree.timerQueries={};Potree.measureTimings=false;Potree.startQuery=function(name,gl){var ext=gl.getExtension('EXT_disjoint_timer_query');if(!ext){return;}if(Potree.timerQueries[name]===undefined){Potree.timerQueries[name]=[];}var query=ext.createQueryEXT();ext.beginQueryEXT(ext.TIME_ELAPSED_EXT,query);Potree.timerQueries[name].push(query);return query;};Potree.endQuery=function(query,gl){var ext=gl.getExtension('EXT_disjoint_timer_query');if(!ext){return;}ext.endQueryEXT(ext.TIME_ELAPSED_EXT);};Potree.resolveQueries=function(gl){var ext=gl.getExtension('EXT_disjoint_timer_query');var resolved=new Map();for(var name in Potree.timerQueries){var queries=Potree.timerQueries[name];var remainingQueries=[];var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=queries[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var query=_step4.value;var available=ext.getQueryObjectEXT(query,ext.QUERY_RESULT_AVAILABLE_EXT);var disjoint=gl.getParameter(ext.GPU_DISJOINT_EXT);if(available&&!disjoint){// See how much time the rendering of the object took in nanoseconds.
    var timeElapsed=ext.getQueryObjectEXT(query,ext.QUERY_RESULT_EXT);var miliseconds=timeElapsed/(1000*1000);if(!resolved.get(name)){resolved.set(name,[]);}resolved.get(name).push(miliseconds);}else{remainingQueries.push(query);}}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}if(remainingQueries.length===0){delete Potree.timerQueries[name];}else{Potree.timerQueries[name]=remainingQueries;}}return resolved;};Potree.toMaterialID=function(materialName){if(materialName==='RGB'){return Potree.PointColorType.RGB;}else if(materialName==='Color'){return Potree.PointColorType.COLOR;}else if(materialName==='Elevation'){return Potree.PointColorType.HEIGHT;}else if(materialName==='Intensity'){return Potree.PointColorType.INTENSITY;}else if(materialName==='Intensity Gradient'){return Potree.PointColorType.INTENSITY_GRADIENT;}else if(materialName==='Classification'){return Potree.PointColorType.CLASSIFICATION;}else if(materialName==='Return Number'){return Potree.PointColorType.RETURN_NUMBER;}else if(materialName==='Source'){return Potree.PointColorType.SOURCE;}else if(materialName==='Level of Detail'){return Potree.PointColorType.LOD;}else if(materialName==='Point Index'){return Potree.PointColorType.POINT_INDEX;}else if(materialName==='Normal'){return Potree.PointColorType.NORMAL;}else if(materialName==='Phong'){return Potree.PointColorType.PHONG;}else if(materialName==='Index'){return Potree.PointColorType.POINT_INDEX;}else if(materialName==='RGB and Elevation'){return Potree.PointColorType.RGB_HEIGHT;}else if(materialName==='Composite'){return Potree.PointColorType.COMPOSITE;}};Potree.toMaterialName=function(materialID){if(materialID===Potree.PointColorType.RGB){return'RGB';}else if(materialID===Potree.PointColorType.COLOR){return'Color';}else if(materialID===Potree.PointColorType.HEIGHT){return'Elevation';}else if(materialID===Potree.PointColorType.INTENSITY){return'Intensity';}else if(materialID===Potree.PointColorType.INTENSITY_GRADIENT){return'Intensity Gradient';}else if(materialID===Potree.PointColorType.CLASSIFICATION){return'Classification';}else if(materialID===Potree.PointColorType.RETURN_NUMBER){return'Return Number';}else if(materialID===Potree.PointColorType.SOURCE){return'Source';}else if(materialID===Potree.PointColorType.LOD){return'Level of Detail';}else if(materialID===Potree.PointColorType.NORMAL){return'Normal';}else if(materialID===Potree.PointColorType.PHONG){return'Phong';}else if(materialID===Potree.PointColorType.POINT_INDEX){return'Index';}else if(materialID===Potree.PointColorType.RGB_HEIGHT){return'RGB and Elevation';}else if(materialID===Potree.PointColorType.COMPOSITE){return'Composite';}};Potree.getMeasurementIcon=function(measurement){if(measurement instanceof Potree.Measure){if(measurement.showDistances&&!measurement.showArea&&!measurement.showAngles){return Potree.resourcePath+'/icons/distance.svg';}else if(measurement.showDistances&&measurement.showArea&&!measurement.showAngles){return Potree.resourcePath+'/icons/area.svg';}else if(measurement.maxMarkers===1){return Potree.resourcePath+'/icons/point.svg';}else if(!measurement.showDistances&&!measurement.showArea&&measurement.showAngles){return Potree.resourcePath+'/icons/angle.png';}else if(measurement.showHeight){return Potree.resourcePath+'/icons/height.svg';}else{return Potree.resourcePath+'/icons/distance.svg';}}else if(measurement instanceof Potree.Profile){return Potree.resourcePath+'/icons/profile.svg';}else if(measurement instanceof Potree.Volume){return Potree.resourcePath+'/icons/volume.svg';}else if(measurement instanceof Potree.PolygonClipVolume){return Potree.resourcePath+'/icons/clip-polygon.svg';}};Potree.Points=function(){function Points(){_classCallCheck(this,Points);this.boundingBox=new THREE.Box3();this.numPoints=0;this.data={};}_createClass(Points,[{key:'add',value:function add(points){var currentSize=this.numPoints;var additionalSize=points.numPoints;var newSize=currentSize+additionalSize;var thisAttributes=Object.keys(this.data);var otherAttributes=Object.keys(points.data);var attributes=new Set([].concat(_toConsumableArray(thisAttributes),_toConsumableArray(otherAttributes)));var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=attributes[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var attribute=_step5.value;if(thisAttributes.includes(attribute)&&otherAttributes.includes(attribute)){// attribute in both, merge
        var Type=this.data[attribute].constructor;var merged=new Type(this.data[attribute].length+points.data[attribute].length);merged.set(this.data[attribute],0);merged.set(points.data[attribute],this.data[attribute].length);this.data[attribute]=merged;}else if(thisAttributes.includes(attribute)&&!otherAttributes.includes(attribute)){// attribute only in this; take over this and expand to new size
        var elementsPerPoint=this.data[attribute].length/this.numPoints;var _Type=this.data[attribute].constructor;var expanded=new _Type(elementsPerPoint*newSize);expanded.set(this.data[attribute],0);this.data[attribute]=expanded;}else if(!thisAttributes.includes(attribute)&&otherAttributes.includes(attribute)){// attribute only in points to be added; take over new points and expand to new size
        var _elementsPerPoint=points.data[attribute].length/points.numPoints;var _Type2=points.data[attribute].constructor;var _expanded=new _Type2(_elementsPerPoint*newSize);_expanded.set(points.data[attribute],_elementsPerPoint*currentSize);this.data[attribute]=_expanded;}}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}this.numPoints=newSize;this.boundingBox.union(points.boundingBox);}}]);return Points;}();/* eslint-disable standard/no-callback-literal */Potree.loadPointCloud=function(path,name,callback){var loaded=function loaded(pointcloud){pointcloud.name=name;callback({type:'pointcloud_loaded',pointcloud:pointcloud});};// load pointcloud
    if(!path){// TODO: callback? comment? Hello? Bueller? Anyone?
    }else if(path.indexOf('greyhound://')===0){// We check if the path string starts with 'greyhound:', if so we assume it's a greyhound server URL.
        Potree.GreyhoundLoader.load(path,function(geometry){if(!geometry){//callback({type: 'loading_failed'});
            console.error(new Error('failed to load point cloud from URL: '+path));}else{var pointcloud=new Potree.PointCloudOctree(geometry);loaded(pointcloud);}});}else if(path.indexOf('cloud.js')>0){Potree.POCLoader.load(path,function(geometry){if(!geometry){//callback({type: 'loading_failed'});
        console.error(new Error('failed to load point cloud from URL: '+path));}else{var pointcloud=new Potree.PointCloudOctree(geometry);loaded(pointcloud);}});}else if(path.indexOf('.vpc')>0){Potree.PointCloudArena4DGeometry.load(path,function(geometry){if(!geometry){//callback({type: 'loading_failed'});
        console.error(new Error('failed to load point cloud from URL: '+path));}else{var pointcloud=new Potree.PointCloudArena4D(geometry);loaded(pointcloud);}});}else{//callback({'type': 'loading_failed'});
        console.error(new Error('failed to load point cloud from URL: '+path));}};/* eslint-enable standard/no-callback-literal */Potree.updatePointClouds=function(pointclouds,camera,renderer){if(!Potree.lru){Potree.lru=new LRU();}var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=pointclouds[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var pointcloud=_step6.value;var start=performance.now();var _iteratorNormalCompletion8=true;var _didIteratorError8=false;var _iteratorError8=undefined;try{for(var _iterator8=pointcloud.profileRequests[Symbol.iterator](),_step8;!(_iteratorNormalCompletion8=(_step8=_iterator8.next()).done);_iteratorNormalCompletion8=true){var profileRequest=_step8.value;profileRequest.update();var _duration=performance.now()-start;if(_duration>5){break;}}}catch(err){_didIteratorError8=true;_iteratorError8=err;}finally{try{if(!_iteratorNormalCompletion8&&_iterator8.return){_iterator8.return();}}finally{if(_didIteratorError8){throw _iteratorError8;}}}var duration=performance.now()-start;}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}var result=Potree.updateVisibility(pointclouds,camera,renderer);var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=pointclouds[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var _pointcloud=_step7.value;_pointcloud.updateMaterial(_pointcloud.material,_pointcloud.visibleNodes,camera,renderer);_pointcloud.updateVisibleBounds();}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}Potree.getLRU().freeMemory();return result;};Potree.getLRU=function(){if(!Potree.lru){Potree.lru=new LRU();}return Potree.lru;};Potree.updateVisibilityStructures=function(pointclouds,camera,renderer){var frustums=[];var camObjPositions=[];var priorityQueue=new BinaryHeap(function(x){return 1/x.weight;});for(var _i=0;_i<pointclouds.length;_i++){var pointcloud=pointclouds[_i];if(!pointcloud.initialized()){continue;}pointcloud.numVisibleNodes=0;pointcloud.numVisiblePoints=0;pointcloud.deepestVisibleLevel=0;pointcloud.visibleNodes=[];pointcloud.visibleGeometry=[];// frustum in object space
    camera.updateMatrixWorld();var frustum=new THREE.Frustum();var viewI=camera.matrixWorldInverse;var world=pointcloud.matrixWorld;// use close near plane for frustum intersection
    var frustumCam=camera.clone();frustumCam.near=Math.min(camera.near,0.1);frustumCam.updateProjectionMatrix();var proj=camera.projectionMatrix;var fm=new THREE.Matrix4().multiply(proj).multiply(viewI).multiply(world);frustum.setFromMatrix(fm);frustums.push(frustum);// camera position in object space
    var view=camera.matrixWorld;var worldI=new THREE.Matrix4().getInverse(world);var camMatrixObject=new THREE.Matrix4().multiply(worldI).multiply(view);var camObjPos=new THREE.Vector3().setFromMatrixPosition(camMatrixObject);camObjPositions.push(camObjPos);if(pointcloud.visible&&pointcloud.root!==null){priorityQueue.push({pointcloud:_i,node:pointcloud.root,weight:Number.MAX_VALUE});}// hide all previously visible nodes
// if(pointcloud.root instanceof Potree.PointCloudOctreeNode){
//	pointcloud.hideDescendants(pointcloud.root.sceneNode);
// }
    if(pointcloud.root.isTreeNode()){pointcloud.hideDescendants(pointcloud.root.sceneNode);}for(var j=0;j<pointcloud.boundingBoxNodes.length;j++){pointcloud.boundingBoxNodes[j].visible=false;}}return{'frustums':frustums,'camObjPositions':camObjPositions,'priorityQueue':priorityQueue};};Potree.getDEMWorkerInstance=function(){if(!Potree.DEMWorkerInstance){var workerPath=Potree.scriptPath+'/workers/DEMWorker.js';Potree.DEMWorkerInstance=Potree.workerPool.getWorker(workerPath);}return Potree.DEMWorkerInstance;};Potree.updateVisibility=function(pointclouds,camera,renderer){var numVisibleNodes=0;var numVisiblePoints=0;var numVisiblePointsInPointclouds=new Map(pointclouds.map(function(pc){return[pc,0];}));var visibleNodes=[];var visibleGeometry=[];var unloadedGeometry=[];var lowestSpacing=Infinity;// calculate object space frustum and cam pos and setup priority queue
    var s=Potree.updateVisibilityStructures(pointclouds,camera,renderer);var frustums=s.frustums;var camObjPositions=s.camObjPositions;var priorityQueue=s.priorityQueue;var loadedToGPUThisFrame=0;var domWidth=renderer.domElement.clientWidth;var domHeight=renderer.domElement.clientHeight;// check if pointcloud has been transformed
// some code will only be executed if changes have been detected
    if(!Potree._pointcloudTransformVersion){Potree._pointcloudTransformVersion=new Map();}var pointcloudTransformVersion=Potree._pointcloudTransformVersion;var _iteratorNormalCompletion9=true;var _didIteratorError9=false;var _iteratorError9=undefined;try{for(var _iterator9=pointclouds[Symbol.iterator](),_step9;!(_iteratorNormalCompletion9=(_step9=_iterator9.next()).done);_iteratorNormalCompletion9=true){var _pointcloud3=_step9.value;if(!_pointcloud3.visible){continue;}_pointcloud3.updateMatrixWorld();if(!pointcloudTransformVersion.has(_pointcloud3)){pointcloudTransformVersion.set(_pointcloud3,{number:0,transform:_pointcloud3.matrixWorld.clone()});}else{var version=pointcloudTransformVersion.get(_pointcloud3);if(!version.transform.equals(_pointcloud3.matrixWorld)){version.number++;version.transform.copy(_pointcloud3.matrixWorld);_pointcloud3.dispatchEvent({type:"transformation_changed",target:_pointcloud3});}}}}catch(err){_didIteratorError9=true;_iteratorError9=err;}finally{try{if(!_iteratorNormalCompletion9&&_iterator9.return){_iterator9.return();}}finally{if(_didIteratorError9){throw _iteratorError9;}}}while(priorityQueue.size()>0){var element=priorityQueue.pop();var node=element.node;var parent=element.parent;var pointcloud=pointclouds[element.pointcloud];// { // restrict to certain nodes for debugging
//	let allowedNodes = ["r", "r0", "r4"];
//	if(!allowedNodes.includes(node.name)){
//		continue;
//	}
// }
        var box=node.getBoundingBox();var frustum=frustums[element.pointcloud];var camObjPos=camObjPositions[element.pointcloud];var insideFrustum=frustum.intersectsBox(box);var maxLevel=pointcloud.maxLevel||Infinity;var level=node.getLevel();var visible=insideFrustum;visible=visible&&!(numVisiblePoints+node.getNumPoints()>Potree.pointBudget);visible=visible&&!(numVisiblePointsInPointclouds.get(pointcloud)+node.getNumPoints()>pointcloud.pointBudget);visible=visible&&level<maxLevel;if(!window.warned125){console.log("TODO");window.warned125=true;}if(false&&pointcloud.material.clipBoxes.length>0){//node.debug = false;
            var numIntersecting=0;var numIntersectionVolumes=0;var _iteratorNormalCompletion10=true;var _didIteratorError10=false;var _iteratorError10=undefined;try{for(var _iterator10=pointcloud.material.clipBoxes[Symbol.iterator](),_step10;!(_iteratorNormalCompletion10=(_step10=_iterator10.next()).done);_iteratorNormalCompletion10=true){var clipBox=_step10.value;var pcWorldInverse=new THREE.Matrix4().getInverse(pointcloud.matrixWorld);var toPCObject=pcWorldInverse.multiply(clipBox.box.matrixWorld);var px=new THREE.Vector3(+1,0,0).applyMatrix4(toPCObject);var nx=new THREE.Vector3(-1,0,0).applyMatrix4(toPCObject);var py=new THREE.Vector3(0,+1,0).applyMatrix4(toPCObject);var ny=new THREE.Vector3(0,-1,0).applyMatrix4(toPCObject);var pz=new THREE.Vector3(0,0,+1).applyMatrix4(toPCObject);var nz=new THREE.Vector3(0,0,-1).applyMatrix4(toPCObject);var pxN=new THREE.Vector3().subVectors(nx,px).normalize();var nxN=pxN.clone().multiplyScalar(-1);var pyN=new THREE.Vector3().subVectors(ny,py).normalize();var nyN=pyN.clone().multiplyScalar(-1);var pzN=new THREE.Vector3().subVectors(nz,pz).normalize();var nzN=pzN.clone().multiplyScalar(-1);var pxPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(pxN,px);var nxPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(nxN,nx);var pyPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(pyN,py);var nyPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(nyN,ny);var pzPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(pzN,pz);var nzPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(nzN,nz);var _frustum=new THREE.Frustum(pxPlane,nxPlane,pyPlane,nyPlane,pzPlane,nzPlane);var intersects=_frustum.intersectsBox(box);if(intersects){numIntersecting++;}numIntersectionVolumes++;}}catch(err){_didIteratorError10=true;_iteratorError10=err;}finally{try{if(!_iteratorNormalCompletion10&&_iterator10.return){_iterator10.return();}}finally{if(_didIteratorError10){throw _iteratorError10;}}}var insideAny=numIntersecting>0;var insideAll=numIntersecting===numIntersectionVolumes;if(pointcloud.material.clipTask===Potree.ClipTask.SHOW_INSIDE){if(pointcloud.material.clipMethod===Potree.ClipMethod.INSIDE_ANY&&insideAny){//node.debug = true
            }else if(pointcloud.material.clipMethod===Potree.ClipMethod.INSIDE_ALL&&insideAll){//node.debug = true;
            }else{visible=false;}}}// visible = ["r", "r0", "r06", "r060"].includes(node.name);
// visible = ["r"].includes(node.name);
        if(node.spacing){lowestSpacing=Math.min(lowestSpacing,node.spacing);}else if(node.geometryNode&&node.geometryNode.spacing){lowestSpacing=Math.min(lowestSpacing,node.geometryNode.spacing);}if(numVisiblePoints+node.getNumPoints()>Potree.pointBudget){break;}if(!visible){continue;}// TODO: not used, same as the declaration?
// numVisibleNodes++;
        numVisiblePoints+=node.getNumPoints();var numVisiblePointsInPointcloud=numVisiblePointsInPointclouds.get(pointcloud);numVisiblePointsInPointclouds.set(pointcloud,numVisiblePointsInPointcloud+node.getNumPoints());pointcloud.numVisibleNodes++;pointcloud.numVisiblePoints+=node.getNumPoints();if(node.isGeometryNode()&&(!parent||parent.isTreeNode())){if(node.isLoaded()&&loadedToGPUThisFrame<2){node=pointcloud.toTreeNode(node,parent);loadedToGPUThisFrame++;}else{unloadedGeometry.push(node);visibleGeometry.push(node);}}if(node.isTreeNode()){Potree.getLRU().touch(node.geometryNode);node.sceneNode.visible=true;node.sceneNode.material=pointcloud.material;visibleNodes.push(node);pointcloud.visibleNodes.push(node);if(node._transformVersion===undefined){node._transformVersion=-1;}var transformVersion=pointcloudTransformVersion.get(pointcloud);if(node._transformVersion!==transformVersion.number){node.sceneNode.updateMatrix();node.sceneNode.matrixWorld.multiplyMatrices(pointcloud.matrixWorld,node.sceneNode.matrix);node._transformVersion=transformVersion.number;}if(pointcloud.showBoundingBox&&!node.boundingBoxNode&&node.getBoundingBox){var boxHelper=new Potree.Box3Helper(node.getBoundingBox());boxHelper.matrixAutoUpdate=false;pointcloud.boundingBoxNodes.push(boxHelper);node.boundingBoxNode=boxHelper;node.boundingBoxNode.matrix.copy(pointcloud.matrixWorld);}else if(pointcloud.showBoundingBox){node.boundingBoxNode.visible=true;node.boundingBoxNode.matrix.copy(pointcloud.matrixWorld);}else if(!pointcloud.showBoundingBox&&node.boundingBoxNode){node.boundingBoxNode.visible=false;}}// add child nodes to priorityQueue
        var children=node.getChildren();for(var _i2=0;_i2<children.length;_i2++){var child=children[_i2];var weight=0;if(camera.isPerspectiveCamera){var sphere=child.getBoundingSphere();var center=sphere.center;//let distance = sphere.center.distanceTo(camObjPos);
            var dx=camObjPos.x-center.x;var dy=camObjPos.y-center.y;var dz=camObjPos.z-center.z;var dd=dx*dx+dy*dy+dz*dz;var distance=Math.sqrt(dd);var radius=sphere.radius;var fov=camera.fov*Math.PI/180;var slope=Math.tan(fov/2);var projFactor=0.5*domHeight/(slope*distance);var screenPixelRadius=radius*projFactor;if(screenPixelRadius<pointcloud.minimumNodePixelSize){continue;}weight=screenPixelRadius;if(distance-radius<0){weight=Number.MAX_VALUE;}}else{// TODO ortho visibility
            var bb=child.getBoundingBox();var _distance2=child.getBoundingSphere().center.distanceTo(camObjPos);var diagonal=bb.max.clone().sub(bb.min).length();weight=diagonal/_distance2;}priorityQueue.push({pointcloud:element.pointcloud,node:child,parent:node,weight:weight});}}// end priority queue loop
    {(function(){// update DEM
        var maxDEMLevel=4;var candidates=pointclouds.filter(function(p){return p.generateDEM&&p.dem instanceof Potree.DEM;});var _iteratorNormalCompletion11=true;var _didIteratorError11=false;var _iteratorError11=undefined;try{for(var _iterator11=candidates[Symbol.iterator](),_step11;!(_iteratorNormalCompletion11=(_step11=_iterator11.next()).done);_iteratorNormalCompletion11=true){var _pointcloud2=_step11.value;var updatingNodes=_pointcloud2.visibleNodes.filter(function(n){return n.getLevel()<=maxDEMLevel;});_pointcloud2.dem.update(updatingNodes);}}catch(err){_didIteratorError11=true;_iteratorError11=err;}finally{try{if(!_iteratorNormalCompletion11&&_iterator11.return){_iterator11.return();}}finally{if(_didIteratorError11){throw _iteratorError11;}}}})();}for(var _i3=0;_i3<Math.min(Potree.maxNodesLoading,unloadedGeometry.length);_i3++){unloadedGeometry[_i3].load();}//console.log("Points:",numVisiblePoints);
//console.log("Nodes:",visibleNodes.length);
    return{visibleNodes:visibleNodes,numVisiblePoints:numVisiblePoints,lowestSpacing:lowestSpacing};};Potree.XHRFactory={config:{withCredentials:false,customHeaders:[{header:null,value:null}]},createXMLHttpRequest:function createXMLHttpRequest(){var xhr=new XMLHttpRequest();if(this.config.customHeaders&&Array.isArray(this.config.customHeaders)&&this.config.customHeaders.length>0){var baseOpen=xhr.open;var customHeaders=this.config.customHeaders;xhr.open=function(){baseOpen.apply(this,[].slice.call(arguments));customHeaders.forEach(function(customHeader){if(!!customHeader.header&&!!customHeader.value){xhr.setRequestHeader(customHeader.header,customHeader.value);}});};}return xhr;}};(function($){$.fn.extend({selectgroup:function selectgroup(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var elGroup=$(this);var rootID=elGroup.prop("id");var groupID=''+rootID;var groupTitle=args.title!==undefined?args.title:"";var elButtons=[];elGroup.find("option").each(function(index,value){var buttonID=$(value).prop("id");var label=$(value).html();var optionValue=$(value).prop("value");var elButton=$('\n\t\t\t\t\t<span style="flex-grow: 1; display: inherit">\n\t\t\t\t\t<label for="'+buttonID+'" class="ui-button" style="width: 100%; padding: .4em .1em">'+label+'</label>\n\t\t\t\t\t<input type="radio" name="'+groupID+'" id="'+buttonID+'" value="'+optionValue+'" style="display: none"/>\n\t\t\t\t\t</span>\n\t\t\t\t');var elLabel=elButton.find("label");var elInput=elButton.find("input");elInput.change(function(){elGroup.find("label").removeClass("ui-state-active");elGroup.find("label").addClass("ui-state-default");if(elInput.is(":checked")){elLabel.addClass("ui-state-active");}else{//elLabel.addClass("ui-state-default");
    }});elButtons.push(elButton);});var elFieldset=$('\n\t\t\t\t<fieldset style="border: none; margin: 0px; padding: 0px">\n\t\t\t\t\t<legend>'+groupTitle+'</legend>\n\t\t\t\t\t<span style="display: flex">\n\n\t\t\t\t\t</span>\n\t\t\t\t</fieldset>\n\t\t\t');var elButtonContainer=elFieldset.find("span");var _iteratorNormalCompletion12=true;var _didIteratorError12=false;var _iteratorError12=undefined;try{for(var _iterator12=elButtons[Symbol.iterator](),_step12;!(_iteratorNormalCompletion12=(_step12=_iterator12.next()).done);_iteratorNormalCompletion12=true){var elButton=_step12.value;elButtonContainer.append(elButton);}}catch(err){_didIteratorError12=true;_iteratorError12=err;}finally{try{if(!_iteratorNormalCompletion12&&_iterator12.return){_iterator12.return();}}finally{if(_didIteratorError12){throw _iteratorError12;}}}elButtonContainer.find("label").each(function(index,value){$(value).css("margin","0px");$(value).css("border-radius","0px");$(value).css("border","1px solid black");$(value).css("border-left","none");});elButtonContainer.find("label:first").each(function(index,value){$(value).css("border-radius","4px 0px 0px 4px");});elButtonContainer.find("label:last").each(function(index,value){$(value).css("border-radius","0px 4px 4px 0px");$(value).css("border-left","none");});elGroup.empty();elGroup.append(elFieldset);}});})(jQuery);// Copied from three.js: WebGLRenderer.js
Potree.paramThreeToGL=function paramThreeToGL(_gl,p){var extension=void 0;if(p===THREE.RepeatWrapping)return _gl.REPEAT;if(p===THREE.ClampToEdgeWrapping)return _gl.CLAMP_TO_EDGE;if(p===THREE.MirroredRepeatWrapping)return _gl.MIRRORED_REPEAT;if(p===THREE.NearestFilter)return _gl.NEAREST;if(p===THREE.NearestMipMapNearestFilter)return _gl.NEAREST_MIPMAP_NEAREST;if(p===THREE.NearestMipMapLinearFilter)return _gl.NEAREST_MIPMAP_LINEAR;if(p===THREE.LinearFilter)return _gl.LINEAR;if(p===THREE.LinearMipMapNearestFilter)return _gl.LINEAR_MIPMAP_NEAREST;if(p===THREE.LinearMipMapLinearFilter)return _gl.LINEAR_MIPMAP_LINEAR;if(p===THREE.UnsignedByteType)return _gl.UNSIGNED_BYTE;if(p===THREE.UnsignedShort4444Type)return _gl.UNSIGNED_SHORT_4_4_4_4;if(p===THREE.UnsignedShort5551Type)return _gl.UNSIGNED_SHORT_5_5_5_1;if(p===THREE.UnsignedShort565Type)return _gl.UNSIGNED_SHORT_5_6_5;if(p===THREE.ByteType)return _gl.BYTE;if(p===THREE.ShortType)return _gl.SHORT;if(p===THREE.UnsignedShortType)return _gl.UNSIGNED_SHORT;if(p===THREE.IntType)return _gl.INT;if(p===THREE.UnsignedIntType)return _gl.UNSIGNED_INT;if(p===THREE.FloatType)return _gl.FLOAT;if(p===THREE.HalfFloatType){extension=extensions.get('OES_texture_half_float');if(extension!==null)return extension.HALF_FLOAT_OES;}if(p===THREE.AlphaFormat)return _gl.ALPHA;if(p===THREE.RGBFormat)return _gl.RGB;if(p===THREE.RGBAFormat)return _gl.RGBA;if(p===THREE.LuminanceFormat)return _gl.LUMINANCE;if(p===THREE.LuminanceAlphaFormat)return _gl.LUMINANCE_ALPHA;if(p===THREE.DepthFormat)return _gl.DEPTH_COMPONENT;if(p===THREE.DepthStencilFormat)return _gl.DEPTH_STENCIL;if(p===THREE.AddEquation)return _gl.FUNC_ADD;if(p===THREE.SubtractEquation)return _gl.FUNC_SUBTRACT;if(p===THREE.ReverseSubtractEquation)return _gl.FUNC_REVERSE_SUBTRACT;if(p===THREE.ZeroFactor)return _gl.ZERO;if(p===THREE.OneFactor)return _gl.ONE;if(p===THREE.SrcColorFactor)return _gl.SRC_COLOR;if(p===THREE.OneMinusSrcColorFactor)return _gl.ONE_MINUS_SRC_COLOR;if(p===THREE.SrcAlphaFactor)return _gl.SRC_ALPHA;if(p===THREE.OneMinusSrcAlphaFactor)return _gl.ONE_MINUS_SRC_ALPHA;if(p===THREE.DstAlphaFactor)return _gl.DST_ALPHA;if(p===THREE.OneMinusDstAlphaFactor)return _gl.ONE_MINUS_DST_ALPHA;if(p===THREE.DstColorFactor)return _gl.DST_COLOR;if(p===THREE.OneMinusDstColorFactor)return _gl.ONE_MINUS_DST_COLOR;if(p===THREE.SrcAlphaSaturateFactor)return _gl.SRC_ALPHA_SATURATE;if(p===THREE.RGB_S3TC_DXT1_Format||p===RGBA_S3TC_DXT1_Format||p===THREE.RGBA_S3TC_DXT3_Format||p===RGBA_S3TC_DXT5_Format){extension=extensions.get('WEBGL_compressed_texture_s3tc');if(extension!==null){if(p===THREE.RGB_S3TC_DXT1_Format)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===THREE.RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===THREE.RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===THREE.RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;}}if(p===THREE.RGB_PVRTC_4BPPV1_Format||p===THREE.RGB_PVRTC_2BPPV1_Format||p===THREE.RGBA_PVRTC_4BPPV1_Format||p===THREE.RGBA_PVRTC_2BPPV1_Format){extension=extensions.get('WEBGL_compressed_texture_pvrtc');if(extension!==null){if(p===THREE.RGB_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===THREE.RGB_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===THREE.RGBA_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===THREE.RGBA_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;}}if(p===THREE.RGB_ETC1_Format){extension=extensions.get('WEBGL_compressed_texture_etc1');if(extension!==null)return extension.COMPRESSED_RGB_ETC1_WEBGL;}if(p===THREE.MinEquation||p===THREE.MaxEquation){extension=extensions.get('EXT_blend_minmax');if(extension!==null){if(p===THREE.MinEquation)return extension.MIN_EXT;if(p===THREE.MaxEquation)return extension.MAX_EXT;}}if(p===UnsignedInt248Type){extension=extensions.get('WEBGL_depth_texture');if(extension!==null)return extension.UNSIGNED_INT_24_8_WEBGL;}return 0;};Potree.attributeLocations={"position":0,"color":1,"intensity":2,"classification":3,"returnNumber":4,"numberOfReturns":5,"pointSourceID":6,"indices":7,"normal":8,"spacing":9};Potree.Shader=function(){function Shader(gl,name,vsSource,fsSource){_classCallCheck(this,Shader);this.gl=gl;this.name=name;this.vsSource=vsSource;this.fsSource=fsSource;this.cache=new Map();this.vs=null;this.fs=null;this.program=null;this.uniformLocations={};this.attributeLocations={};this.update(vsSource,fsSource);}_createClass(Shader,[{key:'update',value:function update(vsSource,fsSource){this.vsSource=vsSource;this.fsSource=fsSource;this.linkProgram();}},{key:'compileShader',value:function compileShader(shader,source){var gl=this.gl;gl.shaderSource(shader,source);gl.compileShader(shader);var success=gl.getShaderParameter(shader,gl.COMPILE_STATUS);if(!success){var info=gl.getShaderInfoLog(shader);var numberedSource=source.split("\n").map(function(a,i){return(''+(i+1)).padEnd(5)+a;}).join("\n");throw'could not compile shader '+this.name+': '+info+', \n'+numberedSource;}}},{key:'linkProgram',value:function linkProgram(){var gl=this.gl;this.uniformLocations={};this.attributeLocations={};gl.useProgram(null);var cached=this.cache.get(this.vsSource+', '+this.fsSource);if(cached){this.program=cached.program;this.vs=cached.vs;this.fs=cached.fs;this.attributeLocations=cached.attributeLocations;this.uniformLocations=cached.uniformLocations;return;}else{this.vs=gl.createShader(gl.VERTEX_SHADER);this.fs=gl.createShader(gl.FRAGMENT_SHADER);this.program=gl.createProgram();var _iteratorNormalCompletion13=true;var _didIteratorError13=false;var _iteratorError13=undefined;try{for(var _iterator13=Object.keys(Potree.attributeLocations)[Symbol.iterator](),_step13;!(_iteratorNormalCompletion13=(_step13=_iterator13.next()).done);_iteratorNormalCompletion13=true){var name=_step13.value;var _location2=Potree.attributeLocations[name];gl.bindAttribLocation(this.program,_location2,name);}}catch(err){_didIteratorError13=true;_iteratorError13=err;}finally{try{if(!_iteratorNormalCompletion13&&_iterator13.return){_iterator13.return();}}finally{if(_didIteratorError13){throw _iteratorError13;}}}this.compileShader(this.vs,this.vsSource);this.compileShader(this.fs,this.fsSource);var program=this.program;gl.attachShader(program,this.vs);gl.attachShader(program,this.fs);gl.linkProgram(program);gl.detachShader(program,this.vs);gl.detachShader(program,this.fs);var success=gl.getProgramParameter(program,gl.LINK_STATUS);if(!success){var info=gl.getProgramInfoLog(program);throw'could not link program '+this.name+': '+info;}{// attribute locations
        var numAttributes=gl.getProgramParameter(program,gl.ACTIVE_ATTRIBUTES);for(var _i4=0;_i4<numAttributes;_i4++){var attribute=gl.getActiveAttrib(program,_i4);var location=gl.getAttribLocation(program,attribute.name);this.attributeLocations[attribute.name]=location;}}{// uniform locations
        var numUniforms=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS);for(var _i5=0;_i5<numUniforms;_i5++){var uniform=gl.getActiveUniform(program,_i5);var _location=gl.getUniformLocation(program,uniform.name);this.uniformLocations[uniform.name]=_location;}}var _cached={program:this.program,vs:this.vs,fs:this.fs,attributeLocations:this.attributeLocations,uniformLocations:this.uniformLocations};this.cache.set(this.vsSource+', '+this.fsSource,_cached);}}},{key:'setUniformMatrix4',value:function setUniformMatrix4(name,value){var gl=this.gl;var location=this.uniformLocations[name];if(location==null){return;}var tmp=new Float32Array(value.elements);gl.uniformMatrix4fv(location,false,tmp);}},{key:'setUniform1f',value:function setUniform1f(name,value){var gl=this.gl;var location=this.uniformLocations[name];if(location==null){return;}gl.uniform1f(location,value);}},{key:'setUniformBoolean',value:function setUniformBoolean(name,value){var gl=this.gl;var location=this.uniformLocations[name];if(location==null){return;}gl.uniform1i(location,value);}},{key:'setUniformTexture',value:function setUniformTexture(name,value){var gl=this.gl;var location=this.uniformLocations[name];if(location==null){return;}gl.uniform1i(location,value);}},{key:'setUniform2f',value:function setUniform2f(name,value){var gl=this.gl;var location=this.uniformLocations[name];if(location==null){return;}gl.uniform2f(location,value[0],value[1]);}},{key:'setUniform3f',value:function setUniform3f(name,value){var gl=this.gl;var location=this.uniformLocations[name];if(location==null){return;}gl.uniform3f(location,value[0],value[1],value[2]);}},{key:'setUniform',value:function setUniform(name,value){if(value.constructor===THREE.Matrix4){this.setUniformMatrix4(name,value);}else if(typeof value==="number"){this.setUniform1f(name,value);}else if(typeof value==="boolean"){this.setUniformBoolean(name,value);}else if(value instanceof Potree.WebGLTexture){this.setUniformTexture(name,value);}else if(value instanceof Array){if(value.length===2){this.setUniform2f(name,value);}else if(value.length===3){this.setUniform3f(name,value);}}else{console.error("unhandled uniform type: ",name,value);}}},{key:'setUniform1i',value:function setUniform1i(name,value){var gl=this.gl;var location=this.uniformLocations[name];if(location==null){return;}gl.uniform1i(location,value);}}]);return Shader;}();Potree.WebGLTexture=function(){function WebGLTexture(gl,texture){_classCallCheck(this,WebGLTexture);this.gl=gl;this.texture=texture;this.id=gl.createTexture();this.target=gl.TEXTURE_2D;this.version=-1;this.update(texture);}_createClass(WebGLTexture,[{key:'update',value:function update(){if(!this.texture.image){this.version=this.texture.version;return;}var gl=this.gl;var texture=this.texture;if(this.version===texture.version){return;}this.target=gl.TEXTURE_2D;gl.bindTexture(this.target,this.id);var level=0;var internalFormat=Potree.paramThreeToGL(gl,texture.format);var width=texture.image.width;var height=texture.image.height;var border=0;var srcFormat=internalFormat;var srcType=Potree.paramThreeToGL(gl,texture.type);var data=void 0;gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,texture.flipY);gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,texture.premultiplyAlpha);gl.pixelStorei(gl.UNPACK_ALIGNMENT,texture.unpackAlignment);if(texture instanceof THREE.DataTexture){data=texture.image.data;gl.texParameteri(this.target,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(this.target,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texParameteri(this.target,gl.TEXTURE_MAG_FILTER,Potree.paramThreeToGL(gl,texture.magFilter));gl.texParameteri(this.target,gl.TEXTURE_MIN_FILTER,Potree.paramThreeToGL(gl,texture.minFilter));gl.texImage2D(this.target,level,internalFormat,width,height,border,srcFormat,srcType,data);}else if(texture instanceof THREE.CanvasTexture){data=texture.image;gl.texParameteri(this.target,gl.TEXTURE_WRAP_S,Potree.paramThreeToGL(gl,texture.wrapS));gl.texParameteri(this.target,gl.TEXTURE_WRAP_T,Potree.paramThreeToGL(gl,texture.wrapT));gl.texParameteri(this.target,gl.TEXTURE_MAG_FILTER,Potree.paramThreeToGL(gl,texture.magFilter));gl.texParameteri(this.target,gl.TEXTURE_MIN_FILTER,Potree.paramThreeToGL(gl,texture.minFilter));gl.texImage2D(this.target,level,internalFormat,internalFormat,srcType,data);}gl.bindTexture(this.target,null);this.version=texture.version;}}]);return WebGLTexture;}();Potree.WebGLBuffer=function WebGLBuffer(){_classCallCheck(this,WebGLBuffer);this.numElements=0;this.vao=null;this.vbos=new Map();};Potree.Renderer=function(){function Renderer(threeRenderer){_classCallCheck(this,Renderer);this.threeRenderer=threeRenderer;this.gl=this.threeRenderer.context;this.buffers=new Map();this.shaders=new Map();this.textures=new Map();this.glTypeMapping=new Map();this.glTypeMapping.set(Float32Array,this.gl.FLOAT);this.glTypeMapping.set(Uint8Array,this.gl.UNSIGNED_BYTE);this.glTypeMapping.set(Uint16Array,this.gl.UNSIGNED_SHORT);this.toggle=0;}_createClass(Renderer,[{key:'createBuffer',value:function createBuffer(geometry){var gl=this.gl;var webglBuffer=new Potree.WebGLBuffer();webglBuffer.vao=gl.createVertexArray();webglBuffer.numElements=geometry.attributes.position.count;gl.bindVertexArray(webglBuffer.vao);for(var attributeName in geometry.attributes){var bufferAttribute=geometry.attributes[attributeName];var vbo=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,vbo);gl.bufferData(gl.ARRAY_BUFFER,bufferAttribute.array,gl.STATIC_DRAW);var attributeLocation=Potree.attributeLocations[attributeName];var normalized=bufferAttribute.normalized;var type=this.glTypeMapping.get(bufferAttribute.array.constructor);gl.vertexAttribPointer(attributeLocation,bufferAttribute.itemSize,type,normalized,0,0);gl.enableVertexAttribArray(attributeLocation);webglBuffer.vbos.set(attributeName,{handle:vbo,name:attributeName,count:bufferAttribute.count,itemSize:bufferAttribute.itemSize,type:geometry.attributes.position.array.constructor,version:0});}gl.bindBuffer(gl.ARRAY_BUFFER,null);gl.bindVertexArray(null);return webglBuffer;}},{key:'updateBuffer',value:function updateBuffer(geometry){var gl=this.gl;var webglBuffer=this.buffers.get(geometry);gl.bindVertexArray(webglBuffer.vao);for(var attributeName in geometry.attributes){var bufferAttribute=geometry.attributes[attributeName];var attributeLocation=Potree.attributeLocations[attributeName];var normalized=bufferAttribute.normalized;var type=this.glTypeMapping.get(bufferAttribute.array.constructor);var vbo=null;if(!webglBuffer.vbos.has(attributeName)){vbo=gl.createBuffer();webglBuffer.vbos.set(attributeName,{handle:vbo,name:attributeName,count:bufferAttribute.count,itemSize:bufferAttribute.itemSize,type:geometry.attributes.position.array.constructor,version:bufferAttribute.version});}else{vbo=webglBuffer.vbos.get(attributeName).handle;webglBuffer.vbos.get(attributeName).version=bufferAttribute.version;}gl.bindBuffer(gl.ARRAY_BUFFER,vbo);gl.bufferData(gl.ARRAY_BUFFER,bufferAttribute.array,gl.STATIC_DRAW);gl.vertexAttribPointer(attributeLocation,bufferAttribute.itemSize,type,normalized,0,0);gl.enableVertexAttribArray(attributeLocation);}gl.bindBuffer(gl.ARRAY_BUFFER,null);gl.bindVertexArray(null);}},{key:'traverse',value:function traverse(scene){var octrees=[];var stack=[scene];while(stack.length>0){var node=stack.pop();if(node instanceof Potree.PointCloudTree){octrees.push(node);continue;}var visibleChildren=node.children.filter(function(c){return c.visible;});stack.push.apply(stack,_toConsumableArray(visibleChildren));}var result={octrees:octrees};return result;}},{key:'renderNodes',value:function renderNodes(octree,nodes,visibilityTextureData,camera,target,shader,params){var _this2=this;if(Potree.measureTimings)performance.mark("renderNodes-start");var gl=this.gl;var material=params.material?params.material:octree.material;var shadowMaps=params.shadowMaps==null?[]:params.shadowMaps;var view=camera.matrixWorldInverse;var worldView=new THREE.Matrix4();var mat4holder=new Float32Array(16);var i=0;var _iteratorNormalCompletion14=true;var _didIteratorError14=false;var _iteratorError14=undefined;try{var _loop=function _loop(){var node=_step14.value;if(Potree.debug.allowedNodes!==undefined){if(!Potree.debug.allowedNodes.includes(node.name)){return'continue';}}//if(![
//	"r42006420226",
//	]
//	.includes(node.name)){
//	continue;
//}
        var world=node.sceneNode.matrixWorld;worldView.multiplyMatrices(view,world);//this.multiplyViewWithScaleTrans(view, world, worldView);
        if(visibilityTextureData){var vnStart=visibilityTextureData.offsets.get(node);shader.setUniform1f("uVNStart",vnStart);}var level=node.getLevel();if(node.debug){shader.setUniform("uDebug",true);}else{shader.setUniform("uDebug",false);}var isLeaf=void 0;if(node instanceof Potree.PointCloudOctreeNode){isLeaf=Object.keys(node.children).length===0;}else if(node instanceof Potree.PointCloudArena4DNode){isLeaf=node.geometryNode.isLeaf;}shader.setUniform("uIsLeafNode",isLeaf);// TODO consider passing matrices in an array to avoid uniformMatrix4fv overhead
        var lModel=shader.uniformLocations["modelMatrix"];if(lModel){mat4holder.set(world.elements);gl.uniformMatrix4fv(lModel,false,mat4holder);}var lModelView=shader.uniformLocations["modelViewMatrix"];//mat4holder.set(worldView.elements);
// faster then set in chrome 63
        for(var j=0;j<16;j++){mat4holder[j]=worldView.elements[j];}gl.uniformMatrix4fv(lModelView,false,mat4holder);{// Clip Polygons
            if(material.clipPolygons&&material.clipPolygons.length>0){var _ref;var clipPolygonVCount=[];var worldViewProjMatrices=[];var _iteratorNormalCompletion15=true;var _didIteratorError15=false;var _iteratorError15=undefined;try{for(var _iterator15=material.clipPolygons[Symbol.iterator](),_step15;!(_iteratorNormalCompletion15=(_step15=_iterator15.next()).done);_iteratorNormalCompletion15=true){var _clipPolygon=_step15.value;var _view=_clipPolygon.viewMatrix;var proj=_clipPolygon.projMatrix;var worldViewProj=proj.clone().multiply(_view).multiply(world);clipPolygonVCount.push(_clipPolygon.markers.length);worldViewProjMatrices.push(worldViewProj);}}catch(err){_didIteratorError15=true;_iteratorError15=err;}finally{try{if(!_iteratorNormalCompletion15&&_iterator15.return){_iterator15.return();}}finally{if(_didIteratorError15){throw _iteratorError15;}}}var flattenedMatrices=(_ref=[]).concat.apply(_ref,_toConsumableArray(worldViewProjMatrices.map(function(m){return m.elements;})));var flattenedVertices=new Array(8*3*material.clipPolygons.length);for(var _i6=0;_i6<material.clipPolygons.length;_i6++){var clipPolygon=material.clipPolygons[_i6];for(var _j=0;_j<clipPolygon.markers.length;_j++){flattenedVertices[_i6*24+(_j*3+0)]=clipPolygon.markers[_j].position.x;flattenedVertices[_i6*24+(_j*3+1)]=clipPolygon.markers[_j].position.y;flattenedVertices[_i6*24+(_j*3+2)]=clipPolygon.markers[_j].position.z;}}var lClipPolygonVCount=shader.uniformLocations["uClipPolygonVCount[0]"];gl.uniform1iv(lClipPolygonVCount,clipPolygonVCount);var lClipPolygonVP=shader.uniformLocations["uClipPolygonWVP[0]"];gl.uniformMatrix4fv(lClipPolygonVP,false,flattenedMatrices);var lClipPolygons=shader.uniformLocations["uClipPolygonVertices[0]"];gl.uniform3fv(lClipPolygons,flattenedVertices);}}//shader.setUniformMatrix4("modelMatrix", world);
//shader.setUniformMatrix4("modelViewMatrix", worldView);
        shader.setUniform1f("uLevel",level);shader.setUniform1f("uNodeSpacing",node.geometryNode.estimatedSpacing);shader.setUniform1f("uPCIndex",i);// uBBSize
        if(shadowMaps.length>0){var lShadowMap=shader.uniformLocations["uShadowMap[0]"];shader.setUniform3f("uShadowColor",material.uniforms.uShadowColor.value);var bindingStart=5;var bindingPoints=new Array(shadowMaps.length).fill(bindingStart).map(function(a,i){return a+i;});gl.uniform1iv(lShadowMap,bindingPoints);for(var _i7=0;_i7<shadowMaps.length;_i7++){var shadowMap=shadowMaps[_i7];var bindingPoint=bindingPoints[_i7];var glTexture=_this2.threeRenderer.properties.get(shadowMap.target.texture).__webglTexture;gl.activeTexture(gl['TEXTURE'+bindingPoint]);gl.bindTexture(gl.TEXTURE_2D,glTexture);}{var _ref2;var worldViewMatrices=shadowMaps.map(function(sm){return sm.camera.matrixWorldInverse;}).map(function(view){return new THREE.Matrix4().multiplyMatrices(view,world);});var _flattenedMatrices=(_ref2=[]).concat.apply(_ref2,_toConsumableArray(worldViewMatrices.map(function(c){return c.elements;})));var lWorldView=shader.uniformLocations["uShadowWorldView[0]"];gl.uniformMatrix4fv(lWorldView,false,_flattenedMatrices);}{var _ref3;var _flattenedMatrices2=(_ref3=[]).concat.apply(_ref3,_toConsumableArray(shadowMaps.map(function(sm){return sm.camera.projectionMatrix.elements;})));var lProj=shader.uniformLocations["uShadowProj[0]"];gl.uniformMatrix4fv(lProj,false,_flattenedMatrices2);}}var geometry=node.geometryNode.geometry;var webglBuffer=null;if(!_this2.buffers.has(geometry)){webglBuffer=_this2.createBuffer(geometry);_this2.buffers.set(geometry,webglBuffer);}else{webglBuffer=_this2.buffers.get(geometry);for(var attributeName in geometry.attributes){var attribute=geometry.attributes[attributeName];if(attribute.version>webglBuffer.vbos.get(attributeName).version){_this2.updateBuffer(geometry);}}}gl.bindVertexArray(webglBuffer.vao);var numPoints=webglBuffer.numElements;gl.drawArrays(gl.POINTS,0,numPoints);i++;};for(var _iterator14=nodes[Symbol.iterator](),_step14;!(_iteratorNormalCompletion14=(_step14=_iterator14.next()).done);_iteratorNormalCompletion14=true){var _ret2=_loop();if(_ret2==='continue')continue;}}catch(err){_didIteratorError14=true;_iteratorError14=err;}finally{try{if(!_iteratorNormalCompletion14&&_iterator14.return){_iterator14.return();}}finally{if(_didIteratorError14){throw _iteratorError14;}}}gl.bindVertexArray(null);if(Potree.measureTimings){performance.mark("renderNodes-end");performance.measure("render.renderNodes","renderNodes-start","renderNodes-end");}}},{key:'renderOctree',value:function renderOctree(octree,nodes,camera,target){var params=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var gl=this.gl;var material=params.material?params.material:octree.material;var shadowMaps=params.shadowMaps==null?[]:params.shadowMaps;var view=camera.matrixWorldInverse;var viewInv=camera.matrixWorld;var proj=camera.projectionMatrix;var projInv=new THREE.Matrix4().getInverse(proj);var worldView=new THREE.Matrix4();var shader=null;var visibilityTextureData=null;var currentTextureBindingPoint=0;//if(!["r", "r2", "r0", "r26", "r22", "r06", "r24", "r20", "r04", "r00", "r02"].includes(node.name)){
//	if(!["r", "r2", "r0"].includes(node.name)){
//		continue;
//	}
//nodes = nodes.filter(node => {
//	return ["r", "r6", "r66", "r664", "r6646", "r6644", "r64", "r646", "r4", "r66446", "r6642", "r660", "r62", "r2", "r6640"].includes(node.name)});
//nodes = nodes.filter(node => {
//	return [
//		//"r",
//		"r6",
//		"r2",
//		"r4",
//		"r64",
//		"r66",
//		"r62",
//		"r664",
//		"r646",
//		"r660",
//		"r6646",
//		//"r6644",
//		//"r6642",
//		//"r6640",
//		//"r66446",
//		].includes(node.name)});
        if(material.pointSizeType>=0){if(material.pointSizeType===Potree.PointSizeType.ADAPTIVE||material.pointColorType===Potree.PointColorType.LOD){var vnNodes=params.vnTextureNodes!=null?params.vnTextureNodes:nodes;visibilityTextureData=octree.computeVisibilityTextureData(vnNodes,camera);var vnt=material.visibleNodesTexture;var data=vnt.image.data;data.set(visibilityTextureData.data);vnt.needsUpdate=true;}}//nodes = nodes.filter(node => {
//	return [
//		"r",
//		"r6",
//		"r2",
//		"r4",
//		"r64",
//		"r66",
//		"r62",
//		"r664",
//		"r646",
//		"r660",
//		"r6646",
//		"r6644",
//		"r6642",
//		"r6640",
//		"r66446",
//		].includes(node.name)});
        {// UPDATE SHADER AND TEXTURES
            if(!this.shaders.has(material)){var _ref4=[material.vertexShader,material.fragmentShader],vs=_ref4[0],fs=_ref4[1];var _shader=new Potree.Shader(gl,"pointcloud",vs,fs);this.shaders.set(material,_shader);}shader=this.shaders.get(material);//if(material.needsUpdate){
            {var _ref5=[material.vertexShader,material.fragmentShader],_vs=_ref5[0],_fs=_ref5[1];var numSnapshots=material.snapEnabled?material.numSnapshots:0;var numClipBoxes=material.clipBoxes&&material.clipBoxes.length?material.clipBoxes.length:0;var numClipPolygons=material.clipPolygons&&material.clipPolygons.length?material.clipPolygons.length:0;var defines=['#define num_shadowmaps '+shadowMaps.length,'#define num_snapshots '+numSnapshots,'#define num_clipboxes '+numClipBoxes,'#define num_clippolygons '+numClipPolygons];//vs = `#define num_shadowmaps ${shadowMaps.length}\n` + vs;
//fs = `#define num_shadowmaps ${shadowMaps.length}\n` + fs;
                var definesString=defines.join("\n");_vs=definesString+'\n'+_vs;_fs=definesString+'\n'+_fs;shader.update(_vs,_fs);material.needsUpdate=false;}var _iteratorNormalCompletion16=true;var _didIteratorError16=false;var _iteratorError16=undefined;try{for(var _iterator16=Object.keys(material.uniforms)[Symbol.iterator](),_step16;!(_iteratorNormalCompletion16=(_step16=_iterator16.next()).done);_iteratorNormalCompletion16=true){var uniformName=_step16.value;var uniform=material.uniforms[uniformName];if(uniform.type=="t"){var texture=uniform.value;if(!texture){continue;}if(!this.textures.has(texture)){var webglTexture=new Potree.WebGLTexture(gl,texture);this.textures.set(texture,webglTexture);}var webGLTexture=this.textures.get(texture);webGLTexture.update();}}}catch(err){_didIteratorError16=true;_iteratorError16=err;}finally{try{if(!_iteratorNormalCompletion16&&_iterator16.return){_iterator16.return();}}finally{if(_didIteratorError16){throw _iteratorError16;}}}}gl.useProgram(shader.program);var transparent=false;if(params.transparent!==undefined){transparent=params.transparent&&material.opacity<1;}else{transparent=material.opacity<1;}if(transparent){gl.enable(gl.BLEND);gl.blendFunc(gl.SRC_ALPHA,gl.ONE);gl.depthMask(false);gl.disable(gl.DEPTH_TEST);}else{gl.disable(gl.BLEND);gl.depthMask(true);gl.enable(gl.DEPTH_TEST);}if(params.blendFunc!==undefined){gl.enable(gl.BLEND);gl.blendFunc.apply(gl,_toConsumableArray(params.blendFunc));}if(params.depthTest!==undefined){if(params.depthTest===true){gl.enable(gl.DEPTH_TEST);}else{gl.disable(gl.DEPTH_TEST);}}if(params.depthWrite!==undefined){if(params.depthWrite===true){gl.depthMask(true);}else{gl.depthMask(false);}}{// UPDATE UNIFORMS
            shader.setUniformMatrix4("projectionMatrix",proj);shader.setUniformMatrix4("viewMatrix",view);shader.setUniformMatrix4("uViewInv",viewInv);shader.setUniformMatrix4("uProjInv",projInv);var screenWidth=target?target.width:material.screenWidth;var screenHeight=target?target.height:material.screenHeight;shader.setUniform1f("uScreenWidth",screenWidth);shader.setUniform1f("uScreenHeight",screenHeight);shader.setUniform1f("fov",Math.PI*camera.fov/180);shader.setUniform1f("near",camera.near);shader.setUniform1f("far",camera.far);if(camera instanceof THREE.OrthographicCamera){shader.setUniform("uUseOrthographicCamera",true);shader.setUniform("uOrthoWidth",camera.right-camera.left);shader.setUniform("uOrthoHeight",camera.top-camera.bottom);}else{shader.setUniform("uUseOrthographicCamera",false);}if(material.clipBoxes.length+material.clipPolygons.length===0){shader.setUniform1i("clipTask",Potree.ClipTask.NONE);}else{shader.setUniform1i("clipTask",material.clipTask);}shader.setUniform1i("clipMethod",material.clipMethod);if(material.clipBoxes&&material.clipBoxes.length>0){var _ref6;var flattenedMatrices=(_ref6=[]).concat.apply(_ref6,_toConsumableArray(material.clipBoxes.map(function(c){return c.inverse.elements;})));var lClipBoxes=shader.uniformLocations["clipBoxes[0]"];gl.uniformMatrix4fv(lClipBoxes,false,flattenedMatrices);}shader.setUniform1f("size",material.size);shader.setUniform1f("maxSize",material.uniforms.maxSize.value);shader.setUniform1f("minSize",material.uniforms.minSize.value);// uniform float uPCIndex
            shader.setUniform1f("uOctreeSpacing",material.spacing);shader.setUniform("uOctreeSize",material.uniforms.octreeSize.value);//uniform vec3 uColor;
            shader.setUniform3f("uColor",material.color.toArray());//uniform float opacity;
            shader.setUniform1f("uOpacity",material.opacity);shader.setUniform2f("elevationRange",material.elevationRange);shader.setUniform2f("intensityRange",material.intensityRange);//uniform float intensityGamma;
//uniform float intensityContrast;
//uniform float intensityBrightness;
            shader.setUniform1f("intensityGamma",material.intensityGamma);shader.setUniform1f("intensityContrast",material.intensityContrast);shader.setUniform1f("intensityBrightness",material.intensityBrightness);shader.setUniform1f("rgbGamma",material.rgbGamma);shader.setUniform1f("rgbContrast",material.rgbContrast);shader.setUniform1f("rgbBrightness",material.rgbBrightness);shader.setUniform1f("uTransition",material.transition);shader.setUniform1f("wRGB",material.weightRGB);shader.setUniform1f("wIntensity",material.weightIntensity);shader.setUniform1f("wElevation",material.weightElevation);shader.setUniform1f("wClassification",material.weightClassification);shader.setUniform1f("wReturnNumber",material.weightReturnNumber);shader.setUniform1f("wSourceID",material.weightSourceID);var vnWebGLTexture=this.textures.get(material.visibleNodesTexture);shader.setUniform1i("visibleNodesTexture",currentTextureBindingPoint);gl.activeTexture(gl.TEXTURE0+currentTextureBindingPoint);gl.bindTexture(vnWebGLTexture.target,vnWebGLTexture.id);currentTextureBindingPoint++;var gradientTexture=this.textures.get(material.gradientTexture);shader.setUniform1i("gradient",currentTextureBindingPoint);gl.activeTexture(gl.TEXTURE0+currentTextureBindingPoint);gl.bindTexture(gradientTexture.target,gradientTexture.id);currentTextureBindingPoint++;var classificationTexture=this.textures.get(material.classificationTexture);shader.setUniform1i("classificationLUT",currentTextureBindingPoint);gl.activeTexture(gl.TEXTURE0+currentTextureBindingPoint);gl.bindTexture(classificationTexture.target,classificationTexture.id);currentTextureBindingPoint++;if(material.snapEnabled===true){{var lSnapshot=shader.uniformLocations["uSnapshot[0]"];var lSnapshotDepth=shader.uniformLocations["uSnapshotDepth[0]"];var bindingStart=currentTextureBindingPoint;var lSnapshotBindingPoints=new Array(5).fill(bindingStart).map(function(a,i){return a+i;});var lSnapshotDepthBindingPoints=new Array(5).fill(1+Math.max.apply(Math,_toConsumableArray(lSnapshotBindingPoints))).map(function(a,i){return a+i;});currentTextureBindingPoint=1+Math.max.apply(Math,_toConsumableArray(lSnapshotDepthBindingPoints));gl.uniform1iv(lSnapshot,lSnapshotBindingPoints);gl.uniform1iv(lSnapshotDepth,lSnapshotDepthBindingPoints);for(var _i8=0;_i8<5;_i8++){var _texture=material.uniforms['uSnapshot'].value[_i8];var textureDepth=material.uniforms['uSnapshotDepth'].value[_i8];if(!_texture){break;}var snapTexture=this.threeRenderer.properties.get(_texture).__webglTexture;var snapTextureDepth=this.threeRenderer.properties.get(textureDepth).__webglTexture;var bindingPoint=lSnapshotBindingPoints[_i8];var depthBindingPoint=lSnapshotDepthBindingPoints[_i8];gl.activeTexture(gl['TEXTURE'+bindingPoint]);gl.bindTexture(gl.TEXTURE_2D,snapTexture);gl.activeTexture(gl['TEXTURE'+depthBindingPoint]);gl.bindTexture(gl.TEXTURE_2D,snapTextureDepth);}}{var _ref7;var _flattenedMatrices3=(_ref7=[]).concat.apply(_ref7,_toConsumableArray(material.uniforms.uSnapView.value.map(function(c){return c.elements;})));var lSnapView=shader.uniformLocations["uSnapView[0]"];gl.uniformMatrix4fv(lSnapView,false,_flattenedMatrices3);}{var _ref8;var _flattenedMatrices4=(_ref8=[]).concat.apply(_ref8,_toConsumableArray(material.uniforms.uSnapProj.value.map(function(c){return c.elements;})));var lSnapProj=shader.uniformLocations["uSnapProj[0]"];gl.uniformMatrix4fv(lSnapProj,false,_flattenedMatrices4);}{var _ref9;var _flattenedMatrices5=(_ref9=[]).concat.apply(_ref9,_toConsumableArray(material.uniforms.uSnapProjInv.value.map(function(c){return c.elements;})));var lSnapProjInv=shader.uniformLocations["uSnapProjInv[0]"];gl.uniformMatrix4fv(lSnapProjInv,false,_flattenedMatrices5);}{var _ref10;var _flattenedMatrices6=(_ref10=[]).concat.apply(_ref10,_toConsumableArray(material.uniforms.uSnapViewInv.value.map(function(c){return c.elements;})));var lSnapViewInv=shader.uniformLocations["uSnapViewInv[0]"];gl.uniformMatrix4fv(lSnapViewInv,false,_flattenedMatrices6);}}}this.renderNodes(octree,nodes,visibilityTextureData,camera,target,shader,params);gl.activeTexture(gl.TEXTURE2);gl.bindTexture(gl.TEXTURE_2D,null);gl.activeTexture(gl.TEXTURE0);}},{key:'render',value:function render(scene,camera,target){var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var gl=this.gl;// PREPARE
        if(target!=null){this.threeRenderer.setRenderTarget(target);}camera.updateProjectionMatrix();var traversalResult=this.traverse(scene);// RENDER
        var _iteratorNormalCompletion17=true;var _didIteratorError17=false;var _iteratorError17=undefined;try{for(var _iterator17=traversalResult.octrees[Symbol.iterator](),_step17;!(_iteratorNormalCompletion17=(_step17=_iterator17.next()).done);_iteratorNormalCompletion17=true){var octree=_step17.value;var nodes=octree.visibleNodes;this.renderOctree(octree,nodes,camera,target,params);}// CLEANUP
        }catch(err){_didIteratorError17=true;_iteratorError17=err;}finally{try{if(!_iteratorNormalCompletion17&&_iterator17.return){_iterator17.return();}}finally{if(_didIteratorError17){throw _iteratorError17;}}}gl.activeTexture(gl.TEXTURE1);gl.bindTexture(gl.TEXTURE_2D,null);this.threeRenderer.resetGLState();}}]);return Renderer;}();//
// index is in order xyzxyzxyz
//
Potree.DEMNode=function(){function DEMNode(name,box,tileSize){_classCallCheck(this,DEMNode);this.name=name;this.box=box;this.tileSize=tileSize;this.level=this.name.length-1;this.data=new Float32Array(tileSize*tileSize);this.data.fill(-Infinity);this.children=[];this.mipMap=[this.data];this.mipMapNeedsUpdate=true;}_createClass(DEMNode,[{key:'createMipMap',value:function createMipMap(){this.mipMap=[this.data];var sourceSize=this.tileSize;var mipSize=parseInt(sourceSize/2);var mipSource=this.data;while(mipSize>1){var mipData=new Float32Array(mipSize*mipSize);for(var _i9=0;_i9<mipSize;_i9++){for(var j=0;j<mipSize;j++){var h00=mipSource[2*_i9+0+2*j*sourceSize];var h01=mipSource[2*_i9+0+2*j*sourceSize+sourceSize];var h10=mipSource[2*_i9+1+2*j*sourceSize];var h11=mipSource[2*_i9+1+2*j*sourceSize+sourceSize];var height=0,weight=0;if(isFinite(h00)){height+=h00;weight+=1;};if(isFinite(h01)){height+=h01;weight+=1;};if(isFinite(h10)){height+=h10;weight+=1;};if(isFinite(h11)){height+=h11;weight+=1;};height=height/weight;// let hs = [h00, h01, h10, h11].filter(h => isFinite(h));
// let height = hs.reduce( (a, v, i) => a + v, 0) / hs.length;
        mipData[_i9+j*mipSize]=height;}}this.mipMap.push(mipData);mipSource=mipData;sourceSize=mipSize;mipSize=parseInt(mipSize/2);}this.mipMapNeedsUpdate=false;}},{key:'uv',value:function uv(position){var boxSize=this.box.getSize();var u=(position.x-this.box.min.x)/boxSize.x;var v=(position.y-this.box.min.y)/boxSize.y;return[u,v];}},{key:'heightAtMipMapLevel',value:function heightAtMipMapLevel(position,mipMapLevel){var uv=this.uv(position);var tileSize=parseInt(this.tileSize/parseInt(Math.pow(2,mipMapLevel)));var data=this.mipMap[mipMapLevel];var i=Math.min(uv[0]*tileSize,tileSize-1);var j=Math.min(uv[1]*tileSize,tileSize-1);var a=i%1;var b=j%1;var _ref11=[Math.floor(i),Math.ceil(i)],i0=_ref11[0],i1=_ref11[1];var _ref12=[Math.floor(j),Math.ceil(j)],j0=_ref12[0],j1=_ref12[1];var h00=data[i0+tileSize*j0];var h01=data[i0+tileSize*j1];var h10=data[i1+tileSize*j0];var h11=data[i1+tileSize*j1];var wh00=isFinite(h00)?(1-a)*(1-b):0;var wh01=isFinite(h01)?(1-a)*b:0;var wh10=isFinite(h10)?a*(1-b):0;var wh11=isFinite(h11)?a*b:0;var wsum=wh00+wh01+wh10+wh11;wh00=wh00/wsum;wh01=wh01/wsum;wh10=wh10/wsum;wh11=wh11/wsum;if(wsum===0){return null;}var h=0;if(isFinite(h00))h+=h00*wh00;if(isFinite(h01))h+=h01*wh01;if(isFinite(h10))h+=h10*wh10;if(isFinite(h11))h+=h11*wh11;return h;}},{key:'height',value:function height(position){var h=null;for(var _i10=0;_i10<this.mipMap.length;_i10++){h=this.heightAtMipMapLevel(position,_i10);if(h!==null){return h;}}return h;}},{key:'traverse',value:function traverse(handler){var level=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;handler(this,level);var _iteratorNormalCompletion18=true;var _didIteratorError18=false;var _iteratorError18=undefined;try{for(var _iterator18=this.children.filter(function(c){return c!==undefined;})[Symbol.iterator](),_step18;!(_iteratorNormalCompletion18=(_step18=_iterator18.next()).done);_iteratorNormalCompletion18=true){var child=_step18.value;child.traverse(handler,level+1);}}catch(err){_didIteratorError18=true;_iteratorError18=err;}finally{try{if(!_iteratorNormalCompletion18&&_iterator18.return){_iterator18.return();}}finally{if(_didIteratorError18){throw _iteratorError18;}}}}}]);return DEMNode;}();Potree.DEM=function(){function DEM(pointcloud){_classCallCheck(this,DEM);this.pointcloud=pointcloud;this.matrix=null;this.boundingBox=null;this.tileSize=64;this.root=null;this.version=0;}// expands the tree to all nodes that intersect <box> at <level>
// returns the intersecting nodes at <level>
    _createClass(DEM,[{key:'expandAndFindByBox',value:function expandAndFindByBox(box,level){if(level===0){return[this.root];}var result=[];var stack=[this.root];while(stack.length>0){var _node=stack.pop();var nodeBoxSize=_node.box.getSize();// check which children intersect by transforming min/max to quadrants
            var min={x:(box.min.x-_node.box.min.x)/nodeBoxSize.x,y:(box.min.y-_node.box.min.y)/nodeBoxSize.y};var max={x:(box.max.x-_node.box.max.x)/nodeBoxSize.x,y:(box.max.y-_node.box.max.y)/nodeBoxSize.y};min.x=min.x<0.5?0:1;min.y=min.y<0.5?0:1;max.x=max.x<0.5?0:1;max.y=max.y<0.5?0:1;var childIndices=void 0;if(min.x===0&&min.y===0&&max.x===1&&max.y===1){childIndices=[0,1,2,3];}else if(min.x===max.x&&min.y===max.y){childIndices=[min.x<<1|min.y];}else{childIndices=[min.x<<1|min.y,max.x<<1|max.y];}var _iteratorNormalCompletion19=true;var _didIteratorError19=false;var _iteratorError19=undefined;try{for(var _iterator19=childIndices[Symbol.iterator](),_step19;!(_iteratorNormalCompletion19=(_step19=_iterator19.next()).done);_iteratorNormalCompletion19=true){var index=_step19.value;if(_node.children[index]===undefined){var childBox=_node.box.clone();if((index&2)>0){childBox.min.x+=nodeBoxSize.x/2.0;}else{childBox.max.x-=nodeBoxSize.x/2.0;}if((index&1)>0){childBox.min.y+=nodeBoxSize.y/2.0;}else{childBox.max.y-=nodeBoxSize.y/2.0;}var _child=new Potree.DEMNode(_node.name+index,childBox,this.tileSize);_node.children[index]=_child;}var child=_node.children[index];if(child.level<level){stack.push(child);}else{result.push(child);}}}catch(err){_didIteratorError19=true;_iteratorError19=err;}finally{try{if(!_iteratorNormalCompletion19&&_iterator19.return){_iterator19.return();}}finally{if(_didIteratorError19){throw _iteratorError19;}}}}return result;}},{key:'childIndex',value:function childIndex(uv){var _uv$map=uv.map(function(n){return n<0.5?0:1;}),_uv$map2=_slicedToArray(_uv$map,2),x=_uv$map2[0],y=_uv$map2[1];var index=x<<1|y;return index;}},{key:'height',value:function height(position){// return this.root.height(position);
            if(!this.root){return 0;}var height=null;var list=[this.root];while(true){var _node2=list[list.length-1];var currentHeight=_node2.height(position);if(currentHeight!==null){height=currentHeight;}var uv=_node2.uv(position);var childIndex=this.childIndex(uv);if(_node2.children[childIndex]){list.push(_node2.children[childIndex]);}else{break;}}return height+this.pointcloud.position.z;}},{key:'update',value:function update(visibleNodes){var _this3=this;if(Potree.getDEMWorkerInstance().working){return;}// check if point cloud transformation changed
            if(this.matrix===null||!this.matrix.equals(this.pointcloud.matrixWorld)){this.matrix=this.pointcloud.matrixWorld.clone();this.boundingBox=this.pointcloud.boundingBox.clone().applyMatrix4(this.matrix);this.root=new Potree.DEMNode('r',this.boundingBox,this.tileSize);this.version++;}// find node to update
            var node=null;var _iteratorNormalCompletion20=true;var _didIteratorError20=false;var _iteratorError20=undefined;try{for(var _iterator20=visibleNodes[Symbol.iterator](),_step20;!(_iteratorNormalCompletion20=(_step20=_iterator20.next()).done);_iteratorNormalCompletion20=true){var vn=_step20.value;if(vn.demVersion===undefined||vn.demVersion<this.version){node=vn;break;}}}catch(err){_didIteratorError20=true;_iteratorError20=err;}finally{try{if(!_iteratorNormalCompletion20&&_iterator20.return){_iterator20.return();}}finally{if(_didIteratorError20){throw _iteratorError20;}}}if(node===null){return;}// update node
            var projectedBox=node.getBoundingBox().clone().applyMatrix4(this.matrix);var projectedBoxSize=projectedBox.getSize();var targetNodes=this.expandAndFindByBox(projectedBox,node.getLevel());node.demVersion=this.version;Potree.getDEMWorkerInstance().onmessage=function(e){var data=new Float32Array(e.data.dem.data);var _iteratorNormalCompletion21=true;var _didIteratorError21=false;var _iteratorError21=undefined;try{for(var _iterator21=targetNodes[Symbol.iterator](),_step21;!(_iteratorNormalCompletion21=(_step21=_iterator21.next()).done);_iteratorNormalCompletion21=true){var demNode=_step21.value;var boxSize=demNode.box.getSize();for(var _i11=0;_i11<_this3.tileSize;_i11++){for(var j=0;j<_this3.tileSize;j++){var u=_i11/(_this3.tileSize-1);var v=j/(_this3.tileSize-1);var x=demNode.box.min.x+u*boxSize.x;var y=demNode.box.min.y+v*boxSize.y;var ix=_this3.tileSize*(x-projectedBox.min.x)/projectedBoxSize.x;var iy=_this3.tileSize*(y-projectedBox.min.y)/projectedBoxSize.y;if(ix<0||ix>_this3.tileSize){continue;}if(iy<0||iy>_this3.tileSize){continue;}ix=Math.min(Math.floor(ix),_this3.tileSize-1);iy=Math.min(Math.floor(iy),_this3.tileSize-1);demNode.data[_i11+_this3.tileSize*j]=data[ix+_this3.tileSize*iy];}}demNode.createMipMap();demNode.mipMapNeedsUpdate=true;Potree.getDEMWorkerInstance().working=false;}// TODO only works somewhat if there is no rotation to the point cloud
// let target = targetNodes[0];
// target.data = new Float32Array(data);
//
//
/// /node.dem = e.data.dem;
//
// Potree.getDEMWorkerInstance().working = false;
//
// { // create scene objects for debugging
//	//for(let demNode of targetNodes){
//		let bb = new Potree.Box3Helper(box);
//		viewer.scene.scene.add(bb);
//
//		createDEMMesh(this, target);
//	//}
//
// }
            }catch(err){_didIteratorError21=true;_iteratorError21=err;}finally{try{if(!_iteratorNormalCompletion21&&_iterator21.return){_iterator21.return();}}finally{if(_didIteratorError21){throw _iteratorError21;}}}};var position=node.geometryNode.geometry.attributes.position.array;var message={boundingBox:{min:node.getBoundingBox().min.toArray(),max:node.getBoundingBox().max.toArray()},position:new Float32Array(position).buffer};var transferables=[message.position];Potree.getDEMWorkerInstance().working=true;Potree.getDEMWorkerInstance().postMessage(message,transferables);}}]);return DEM;}();Potree.PointCloudTreeNode=function(){function _class(){_classCallCheck(this,_class);this.needsTransformUpdate=true;}_createClass(_class,[{key:'getChildren',value:function getChildren(){throw new Error('override function');}},{key:'getBoundingBox',value:function getBoundingBox(){throw new Error('override function');}},{key:'isLoaded',value:function isLoaded(){throw new Error('override function');}},{key:'isGeometryNode',value:function isGeometryNode(){throw new Error('override function');}},{key:'isTreeNode',value:function isTreeNode(){throw new Error('override function');}},{key:'getLevel',value:function getLevel(){throw new Error('override function');}},{key:'getBoundingSphere',value:function getBoundingSphere(){throw new Error('override function');}}]);return _class;}();Potree.PointCloudTree=function(_THREE$Object3D){_inherits(PointCloudTree,_THREE$Object3D);function PointCloudTree(){_classCallCheck(this,PointCloudTree);var _this4=_possibleConstructorReturn(this,(PointCloudTree.__proto__||Object.getPrototypeOf(PointCloudTree)).call(this));_this4.dem=new Potree.DEM(_this4);return _this4;}_createClass(PointCloudTree,[{key:'initialized',value:function initialized(){return this.root!==null;}}]);return PointCloudTree;}(THREE.Object3D);Potree.WorkerPool=function(){function WorkerPool(){_classCallCheck(this,WorkerPool);this.workers={};}_createClass(WorkerPool,[{key:'getWorker',value:function getWorker(url){if(!this.workers[url]){this.workers[url]=[];}if(this.workers[url].length===0){var _worker=new Worker(url);this.workers[url].push(_worker);}var worker=this.workers[url].pop();return worker;}},{key:'returnWorker',value:function returnWorker(url,worker){this.workers[url].push(worker);}}]);return WorkerPool;}();Potree.workerPool=new Potree.WorkerPool();Potree.Shaders["pointcloud.vs"]='\nprecision highp float;\nprecision highp int;\n\n#define max_clip_polygons 8\n#define PI 3.141592653589793\n\nattribute vec3 position;\nattribute vec3 color;\nattribute float intensity;\nattribute float classification;\nattribute float returnNumber;\nattribute float numberOfReturns;\nattribute float pointSourceID;\nattribute vec4 indices;\nattribute float spacing;\n\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\n\nuniform float uScreenWidth;\nuniform float uScreenHeight;\nuniform float fov;\nuniform float near;\nuniform float far;\n\nuniform bool uDebug;\n\nuniform bool uUseOrthographicCamera;\nuniform float uOrthoWidth;\nuniform float uOrthoHeight;\n\n\n#define CLIPTASK_NONE 0\n#define CLIPTASK_HIGHLIGHT 1\n#define CLIPTASK_SHOW_INSIDE 2\n#define CLIPTASK_SHOW_OUTSIDE 3\n\n#define CLIPMETHOD_INSIDE_ANY 0\n#define CLIPMETHOD_INSIDE_ALL 1\n\nuniform int clipTask;\nuniform int clipMethod;\n#if defined(num_clipboxes) && num_clipboxes > 0\n\tuniform mat4 clipBoxes[num_clipboxes];\n#endif\n\n#if defined(num_clippolygons) && num_clippolygons > 0\n\tuniform int uClipPolygonVCount[num_clippolygons];\n\tuniform vec3 uClipPolygonVertices[num_clippolygons * 8];\n\tuniform mat4 uClipPolygonWVP[num_clippolygons];\n#endif\n\nuniform float size;\nuniform float minSize;\nuniform float maxSize;\n\nuniform float uPCIndex;\nuniform float uOctreeSpacing;\nuniform float uNodeSpacing;\nuniform float uOctreeSize;\nuniform vec3 uBBSize;\nuniform float uLevel;\nuniform float uVNStart;\nuniform bool uIsLeafNode;\n\nuniform vec3 uColor;\nuniform float uOpacity;\n\nuniform vec2 elevationRange;\nuniform vec2 intensityRange;\nuniform float intensityGamma;\nuniform float intensityContrast;\nuniform float intensityBrightness;\nuniform float rgbGamma;\nuniform float rgbContrast;\nuniform float rgbBrightness;\nuniform float uTransition;\nuniform float wRGB;\nuniform float wIntensity;\nuniform float wElevation;\nuniform float wClassification;\nuniform float wReturnNumber;\nuniform float wSourceID;\n\nuniform vec3 uShadowColor;\n\nuniform sampler2D visibleNodes;\nuniform sampler2D gradient;\nuniform sampler2D classificationLUT;\n\n#if defined(num_shadowmaps) && num_shadowmaps > 0\nuniform sampler2D uShadowMap[num_shadowmaps];\nuniform mat4 uShadowWorldView[num_shadowmaps];\nuniform mat4 uShadowProj[num_shadowmaps];\n#endif\n\n#if defined(num_snapshots) && num_snapshots > 0\nuniform sampler2D uSnapshot[num_snapshots];\nuniform mat4 uSnapView[num_snapshots];\nuniform mat4 uSnapProj[num_snapshots];\nuniform mat4 uSnapScreenToCurrentView[num_snapshots];\n\nvarying float vSnapTextureID;\n#endif\n\nvarying vec4\tvColor;\nvarying float\tvLogDepth;\nvarying vec3\tvViewPosition;\nvarying float \tvRadius;\nvarying float \tvPointSize;\n\n\nfloat round(float number){\n\treturn floor(number + 0.5);\n}\n\n// \n//    ###    ########     ###    ########  ######## #### ##     ## ########     ######  #### ######## ########  ######  \n//   ## ##   ##     ##   ## ##   ##     ##    ##     ##  ##     ## ##          ##    ##  ##       ##  ##       ##    ## \n//  ##   ##  ##     ##  ##   ##  ##     ##    ##     ##  ##     ## ##          ##        ##      ##   ##       ##       \n// ##     ## ##     ## ##     ## ########     ##     ##  ##     ## ######       ######   ##     ##    ######    ######  \n// ######### ##     ## ######### ##           ##     ##   ##   ##  ##                ##  ##    ##     ##             ## \n// ##     ## ##     ## ##     ## ##           ##     ##    ## ##   ##          ##    ##  ##   ##      ##       ##    ## \n// ##     ## ########  ##     ## ##           ##    ####    ###    ########     ######  #### ######## ########  ######  \n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n\n// ---------------------\n// OCTREE\n// ---------------------\n\n#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_octree)\n/**\n * number of 1-bits up to inclusive index position\n * number is treated as if it were an integer in the range 0-255\n *\n */\nint numberOfOnes(int number, int index){\n\tint numOnes = 0;\n\tint tmp = 128;\n\tfor(int i = 7; i >= 0; i--){\n\t\t\n\t\tif(number >= tmp){\n\t\t\tnumber = number - tmp;\n\n\t\t\tif(i <= index){\n\t\t\t\tnumOnes++;\n\t\t\t}\n\t\t}\n\t\t\n\t\ttmp = tmp / 2;\n\t}\n\n\treturn numOnes;\n}\n\n\n/**\n * checks whether the bit at index is 1\n * number is treated as if it were an integer in the range 0-255\n *\n */\nbool isBitSet(int number, int index){\n\n\t// weird multi else if due to lack of proper array, int and bitwise support in WebGL 1.0\n\tint powi = 1;\n\tif(index == 0){\n\t\tpowi = 1;\n\t}else if(index == 1){\n\t\tpowi = 2;\n\t}else if(index == 2){\n\t\tpowi = 4;\n\t}else if(index == 3){\n\t\tpowi = 8;\n\t}else if(index == 4){\n\t\tpowi = 16;\n\t}else if(index == 5){\n\t\tpowi = 32;\n\t}else if(index == 6){\n\t\tpowi = 64;\n\t}else if(index == 7){\n\t\tpowi = 128;\n\t}else{\n\t\treturn false;\n\t}\n\n\tint ndp = number / powi;\n\n\treturn mod(float(ndp), 2.0) != 0.0;\n}\n\n\n/**\n * find the LOD at the point position\n */\nfloat getLOD(){\n\t\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tint iOffset = int(uVNStart);\n\tfloat depth = uLevel;\n\tfor(float i = 0.0; i <= 30.0; i++){\n\t\tfloat nodeSizeAtLevel = uOctreeSize  / pow(2.0, i + uLevel + 0.0);\n\t\t\n\t\tvec3 index3d = (position-offset) / nodeSizeAtLevel;\n\t\tindex3d = floor(index3d + 0.5);\n\t\tint index = int(round(4.0 * index3d.x + 2.0 * index3d.y + index3d.z));\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(float(iOffset) / 2048.0, 0.0));\n\t\tint mask = int(round(value.r * 255.0));\n\n\t\tif(isBitSet(mask, index)){\n\t\t\t// there are more visible child nodes at this position\n\t\t\tint advanceG = int(round(value.g * 255.0)) * 256;\n\t\t\tint advanceB = int(round(value.b * 255.0));\n\t\t\tint advanceChild = numberOfOnes(mask, index - 1);\n\t\t\tint advance = advanceG + advanceB + advanceChild;\n\n\t\t\tiOffset = iOffset + advance;\n\t\t\t\n\t\t\tdepth++;\n\t\t}else{\n\t\t\t// no more visible child nodes at this position\n\t\t\treturn value.a * 255.0;\n\t\t\t//return depth;\n\t\t}\n\t\t\n\t\toffset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;\n\t}\n\t\t\n\treturn depth;\n}\n\nfloat getSpacing(){\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tint iOffset = int(uVNStart);\n\tfloat depth = uLevel;\n\tfloat spacing = uNodeSpacing;\n\tfor(float i = 0.0; i <= 30.0; i++){\n\t\tfloat nodeSizeAtLevel = uOctreeSize  / pow(2.0, i + uLevel + 0.0);\n\t\t\n\t\tvec3 index3d = (position-offset) / nodeSizeAtLevel;\n\t\tindex3d = floor(index3d + 0.5);\n\t\tint index = int(round(4.0 * index3d.x + 2.0 * index3d.y + index3d.z));\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(float(iOffset) / 2048.0, 0.0));\n\t\tint mask = int(round(value.r * 255.0));\n\t\tfloat spacingFactor = value.a;\n\n\t\tif(i > 0.0){\n\t\t\tspacing = spacing / (255.0 * spacingFactor);\n\t\t}\n\t\t\n\n\t\tif(isBitSet(mask, index)){\n\t\t\t// there are more visible child nodes at this position\n\t\t\tint advanceG = int(round(value.g * 255.0)) * 256;\n\t\t\tint advanceB = int(round(value.b * 255.0));\n\t\t\tint advanceChild = numberOfOnes(mask, index - 1);\n\t\t\tint advance = advanceG + advanceB + advanceChild;\n\n\t\t\tiOffset = iOffset + advance;\n\n\t\t\t//spacing = spacing / (255.0 * spacingFactor);\n\t\t\t//spacing = spacing / 3.0;\n\t\t\t\n\t\t\tdepth++;\n\t\t}else{\n\t\t\t// no more visible child nodes at this position\n\t\t\treturn spacing;\n\t\t}\n\t\t\n\t\toffset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;\n\t}\n\t\t\n\treturn spacing;\n}\n\nfloat getPointSizeAttenuation(){\n\treturn pow(2.0, getLOD());\n}\n\n\n#endif\n\n\n// ---------------------\n// KD-TREE\n// ---------------------\n\n#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_kdtree)\n\nfloat getLOD(){\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tfloat iOffset = 0.0;\n\tfloat depth = 0.0;\n\t\t\n\t\t\n\tvec3 size = uBBSize;\t\n\tvec3 pos = position;\n\t\t\n\tfor(float i = 0.0; i <= 1000.0; i++){\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(iOffset / 2048.0, 0.0));\n\t\t\n\t\tint children = int(value.r * 255.0);\n\t\tfloat next = value.g * 255.0;\n\t\tint split = int(value.b * 255.0);\n\t\t\n\t\tif(next == 0.0){\n\t\t \treturn depth;\n\t\t}\n\t\t\n\t\tvec3 splitv = vec3(0.0, 0.0, 0.0);\n\t\tif(split == 1){\n\t\t\tsplitv.x = 1.0;\n\t\t}else if(split == 2){\n\t\t \tsplitv.y = 1.0;\n\t\t}else if(split == 4){\n\t\t \tsplitv.z = 1.0;\n\t\t}\n\t\t\n\t\tiOffset = iOffset + next;\n\t\t\n\t\tfloat factor = length(pos * splitv / size);\n\t\tif(factor < 0.5){\n\t\t\t// left\n\t\tif(children == 0 || children == 2){\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t}else{\n\t\t\t// right\n\t\t\tpos = pos - size * splitv * 0.5;\n\t\t\tif(children == 0 || children == 1){\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t\tif(children == 3){\n\t\t\t\tiOffset = iOffset + 1.0;\n\t\t\t}\n\t\t}\n\t\tsize = size * ((1.0 - (splitv + 1.0) / 2.0) + 0.5);\n\t\t\n\t\tdepth++;\n\t}\n\t\t\n\t\t\n\treturn depth;\t\n}\n\nfloat getPointSizeAttenuation(){\n\treturn 0.5 * pow(1.3, getLOD());\n}\n\n#endif\n\n\n\n// \n//    ###    ######## ######## ########  #### ########  ##     ## ######## ########  ######  \n//   ## ##      ##       ##    ##     ##  ##  ##     ## ##     ##    ##    ##       ##    ## \n//  ##   ##     ##       ##    ##     ##  ##  ##     ## ##     ##    ##    ##       ##       \n// ##     ##    ##       ##    ########   ##  ########  ##     ##    ##    ######    ######  \n// #########    ##       ##    ##   ##    ##  ##     ## ##     ##    ##    ##             ## \n// ##     ##    ##       ##    ##    ##   ##  ##     ## ##     ##    ##    ##       ##    ## \n// ##     ##    ##       ##    ##     ## #### ########   #######     ##    ########  ######                                                                               \n// \n\n\n\n// formula adapted from: http://www.dfstudios.co.uk/articles/programming/image-programming-algorithms/image-processing-algorithms-part-5-contrast-adjustment/\nfloat getContrastFactor(float contrast){\n\treturn (1.0158730158730156 * (contrast + 1.0)) / (1.0158730158730156 - contrast);\n}\n\nvec3 getRGB(){\n\tvec3 rgb = color;\n\t\n\trgb = pow(rgb, vec3(rgbGamma));\n\trgb = rgb + rgbBrightness;\n\t//rgb = (rgb - 0.5) * getContrastFactor(rgbContrast) + 0.5;\n\trgb = clamp(rgb, 0.0, 1.0);\n\n\t\t//rgb = indices.rgb;\n\t//rgb.b = pcIndex / 255.0;\n\t\n\t\n\treturn rgb;\n}\n\nfloat getIntensity(){\n\tfloat w = (intensity - intensityRange.x) / (intensityRange.y - intensityRange.x);\n\tw = pow(w, intensityGamma);\n\tw = w + intensityBrightness;\n\tw = (w - 0.5) * getContrastFactor(intensityContrast) + 0.5;\n\tw = clamp(w, 0.0, 1.0);\n\n\t//w = w + color.x * 0.0001;\n\t\n\t//float w = color.x * 0.001 + intensity / 1.0;\n\n\treturn w;\n}\n\nvec3 getElevation(){\n\tvec4 world = modelMatrix * vec4( position, 1.0 );\n\tfloat w = (world.z - elevationRange.x) / (elevationRange.y - elevationRange.x);\n\tif(world.z<=0.0){\n\t\tw=0.0;\n\t}else if(world.z >= 100.0){\n\t\tw=1.0;\n\t}else{\n\t\tw = world.z/80.0;\n\t}\n\tw = (world.z - elevationRange.x) / (elevationRange.y - elevationRange.x);\n\tvec3 cElevation = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t\n\treturn cElevation;\n}\n\nvec4 getClassification(){\n\tvec2 uv = vec2(classification / 255.0, 0.5);\n\tvec4 classColor = texture2D(classificationLUT, uv);\n\t\n\treturn classColor;\n}\n\nvec3 getReturnNumber(){\n\tif(numberOfReturns == 1.0){\n\t\treturn vec3(1.0, 1.0, 0.0);\n\t}else{\n\t\tif(returnNumber == 1.0){\n\t\t\treturn vec3(1.0, 0.0, 0.0);\n\t\t}else if(returnNumber == numberOfReturns){\n\t\t\treturn vec3(0.0, 0.0, 1.0);\n\t\t}else{\n\t\t\treturn vec3(0.0, 1.0, 0.0);\n\t\t}\n\t}\n}\n\nvec3 getSourceID(){\n\tfloat w = mod(pointSourceID, 10.0) / 10.0;\n\treturn texture2D(gradient, vec2(w,1.0 - w)).rgb;\n}\n\nvec3 getCompositeColor(){\n\tvec3 c;\n\tfloat w;\n\n\tc += wRGB * getRGB();\n\tw += wRGB;\n\t\n\tc += wIntensity * getIntensity() * vec3(1.0, 1.0, 1.0);\n\tw += wIntensity;\n\t\n\tc += wElevation * getElevation();\n\tw += wElevation;\n\t\n\tc += wReturnNumber * getReturnNumber();\n\tw += wReturnNumber;\n\t\n\tc += wSourceID * getSourceID();\n\tw += wSourceID;\n\t\n\tvec4 cl = wClassification * getClassification();\n    c += cl.a * cl.rgb;\n\tw += wClassification * cl.a;\n\n\tc = c / w;\n\t\n\tif(w == 0.0){\n\t\t//c = color;\n\t\tgl_Position = vec4(100.0, 100.0, 100.0, 0.0);\n\t}\n\t\n\treturn c;\n}\n\n\n// \n//  ######  ##       #### ########  ########  #### ##    ##  ######   \n// ##    ## ##        ##  ##     ## ##     ##  ##  ###   ## ##    ##  \n// ##       ##        ##  ##     ## ##     ##  ##  ####  ## ##        \n// ##       ##        ##  ########  ########   ##  ## ## ## ##   #### \n// ##       ##        ##  ##        ##         ##  ##  #### ##    ##  \n// ##    ## ##        ##  ##        ##         ##  ##   ### ##    ##  \n//  ######  ######## #### ##        ##        #### ##    ##  ######                                                          \n// \n\n\n\nvec3 getColor(){\n\tvec3 color;\n\t\n\t#ifdef color_type_rgb\n\t\tcolor = getRGB();\n\t#elif defined color_type_height\n\t\tcolor = getElevation();\n\t#elif defined color_type_rgb_height\n\t\tvec3 cHeight = getElevation();\n\t\tcolor = (1.0 - uTransition) * getRGB() + uTransition * cHeight;\n\t#elif defined color_type_depth\n\t\tfloat linearDepth = gl_Position.w;\n\t\tfloat expDepth = (gl_Position.z / gl_Position.w) * 0.5 + 0.5;\n\t\tcolor = vec3(linearDepth, expDepth, 0.0);\n\t#elif defined color_type_intensity\n\t\tfloat w = getIntensity();\n\t\tcolor = vec3(w, w, w);\n\t#elif defined color_type_intensity_gradient\n\t\tfloat w = getIntensity();\n\t\tcolor = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t#elif defined color_type_color\n\t\tcolor = uColor;\n\t#elif defined color_type_lod\n\t\tfloat depth = getLOD();\n\t\tfloat w = depth / 10.0;\n\t\tcolor = texture2D(gradient, vec2(w,1.0-w)).rgb;\n\t#elif defined color_type_point_index\n\t\tcolor = indices.rgb;\n\t#elif defined color_type_classification\n\t\tvec4 cl = getClassification(); \n\t\tcolor = cl.rgb;\n\t#elif defined color_type_return_number\n\t\tcolor = getReturnNumber();\n\t#elif defined color_type_source\n\t\tcolor = getSourceID();\n\t#elif defined color_type_normal\n\t\tcolor = (modelMatrix * vec4(normal, 0.0)).xyz;\n\t#elif defined color_type_phong\n\t\tcolor = color;\n\t#elif defined color_type_composite\n\t\tcolor = getCompositeColor();\n\t#endif\n\t\n\treturn color;\n}\n\nfloat getPointSize(){\n\tfloat pointSize = 1.0;\n\t\n\tfloat slope = tan(fov / 2.0);\n\tfloat projFactor = -0.5 * uScreenHeight / (slope * vViewPosition.z);\n\t\n\tfloat r = uOctreeSpacing * 1.7;\n\tvRadius = r;\n\t#if defined fixed_point_size\n\t\tpointSize = size;\n\t#elif defined attenuated_point_size\n\t\tif(uUseOrthographicCamera){\n\t\t\tpointSize = size;\n\t\t}else{\n\t\t\tpointSize = size * spacing * projFactor;\n\t\t\t//pointSize = pointSize * projFactor;\n\t\t}\n\t#elif defined adaptive_point_size\n\t\tif(uUseOrthographicCamera) {\n\t\t\tfloat worldSpaceSize = 1.0 * size * r / getPointSizeAttenuation();\n\t\t\tpointSize = (worldSpaceSize / uOrthoWidth) * uScreenWidth;\n\t\t} else {\n\n\t\t\tif(uIsLeafNode && false){\n\t\t\t\tpointSize = size * spacing * projFactor;\n\t\t\t}else{\n\t\t\t\tfloat worldSpaceSize = 1.0 * size * r / getPointSizeAttenuation();\n\t\t\t\tpointSize = worldSpaceSize * projFactor;\n\t\t\t}\n\t\t}\n\t#endif\n\n\tpointSize = max(minSize, pointSize);\n\tpointSize = min(maxSize, pointSize);\n\t\n\tvRadius = pointSize / projFactor;\n\n\treturn pointSize;\n}\n\n#if defined(num_clippolygons) && num_clippolygons > 0\nbool pointInClipPolygon(vec3 point, int polyIdx) {\n\n\tmat4 wvp = uClipPolygonWVP[polyIdx];\n\t//vec4 screenClipPos = uClipPolygonVP[polyIdx] * modelMatrix * vec4(point, 1.0);\n\t//screenClipPos.xy = screenClipPos.xy / screenClipPos.w * 0.5 + 0.5;\n\n\tvec4 pointNDC = wvp * vec4(point, 1.0);\n\tpointNDC.xy = pointNDC.xy / pointNDC.w;\n\n\tint j = uClipPolygonVCount[polyIdx] - 1;\n\tbool c = false;\n\tfor(int i = 0; i < 8; i++) {\n\t\tif(i == uClipPolygonVCount[polyIdx]) {\n\t\t\tbreak;\n\t\t}\n\n\t\t//vec4 verti = wvp * vec4(uClipPolygonVertices[polyIdx * 8 + i], 1);\n\t\t//vec4 vertj = wvp * vec4(uClipPolygonVertices[polyIdx * 8 + j], 1);\n\n\t\t//verti.xy = verti.xy / verti.w;\n\t\t//vertj.xy = vertj.xy / vertj.w;\n\n\t\t//verti.xy = verti.xy / verti.w * 0.5 + 0.5;\n\t\t//vertj.xy = vertj.xy / vertj.w * 0.5 + 0.5;\n\n\t\tvec3 verti = uClipPolygonVertices[polyIdx * 8 + i];\n\t\tvec3 vertj = uClipPolygonVertices[polyIdx * 8 + j];\n\n\t\tif( ((verti.y > pointNDC.y) != (vertj.y > pointNDC.y)) && \n\t\t\t(pointNDC.x < (vertj.x-verti.x) * (pointNDC.y-verti.y) / (vertj.y-verti.y) + verti.x) ) {\n\t\t\tc = !c;\n\t\t}\n\t\tj = i;\n\t}\n\n\treturn c;\n}\n#endif\n\nvoid doClipping(){\n\n\t#if !defined color_type_composite\n\t\tvec4 cl = getClassification(); \n\t\tif(cl.a == 0.0){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 0.0);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t#endif\n\n\tint clipVolumesCount = 0;\n\tint insideCount = 0;\n\n\t#if defined(num_clipboxes) && num_clipboxes > 0\n\t\tfor(int i = 0; i < num_clipboxes; i++){\n\t\t\tvec4 clipPosition = clipBoxes[i] * modelMatrix * vec4( position, 1.0 );\n\t\t\tbool inside = -0.5 <= clipPosition.x && clipPosition.x <= 0.5;\n\t\t\tinside = inside && -0.5 <= clipPosition.y && clipPosition.y <= 0.5;\n\t\t\tinside = inside && -0.5 <= clipPosition.z && clipPosition.z <= 0.5;\n\n\t\t\tinsideCount = insideCount + (inside ? 1 : 0);\n\t\t\tclipVolumesCount++;\n\t\t}\t\n\t#endif\n\n\t#if defined(num_clippolygons) && num_clippolygons > 0\n\t\tfor(int i = 0; i < num_clippolygons; i++) {\n\t\t\tbool inside = pointInClipPolygon(position, i);\n\n\t\t\tinsideCount = insideCount + (inside ? 1 : 0);\n\t\t\tclipVolumesCount++;\n\t\t}\n\t#endif\n\n\tbool insideAny = insideCount > 0;\n\tbool insideAll = (clipVolumesCount > 0) && (clipVolumesCount == insideCount);\n\n\tif(clipMethod == CLIPMETHOD_INSIDE_ANY){\n\t\tif(insideAny && clipTask == CLIPTASK_HIGHLIGHT){\n\t\t\tvColor.r += 0.5;\n\t\t}else if(!insideAny && clipTask == CLIPTASK_SHOW_INSIDE){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}else if(insideAny && clipTask == CLIPTASK_SHOW_OUTSIDE){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}\n\t}else if(clipMethod == CLIPMETHOD_INSIDE_ALL){\n\t\tif(insideAll && clipTask == CLIPTASK_HIGHLIGHT){\n\t\t\tvColor.r += 0.5;\n\t\t}else if(!insideAll && clipTask == CLIPTASK_SHOW_INSIDE){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}else if(insideAll && clipTask == CLIPTASK_SHOW_OUTSIDE){\n\t\t\tgl_Position = vec4(100.0, 100.0, 100.0, 1.0);\n\t\t}\n\t}\n}\n\n\n\n// \n// ##     ##    ###    #### ##    ## \n// ###   ###   ## ##    ##  ###   ## \n// #### ####  ##   ##   ##  ####  ## \n// ## ### ## ##     ##  ##  ## ## ## \n// ##     ## #########  ##  ##  #### \n// ##     ## ##     ##  ##  ##   ### \n// ##     ## ##     ## #### ##    ## \n//\n\nvoid main() {\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tvViewPosition = mvPosition.xyz;\n\tgl_Position = projectionMatrix * mvPosition;\n\tvLogDepth = log2(-mvPosition.z);\n\n\t// POINT SIZE\n\tfloat pointSize = getPointSize();\n\tgl_PointSize = pointSize;\n\tvPointSize = pointSize;\n\n\t// COLOR\n\t#if defined(color_type_composite) && defined(color_type_intensity)\n\t\tvColor = vec4(getColor(),getIntensity());\n\t#else\n\t\tvColor = vec4(getColor(),1.0);\n\t#endif\n\n\t#if defined hq_depth_pass\n\t\tfloat originalDepth = gl_Position.w;\n\t\tfloat adjustedDepth = originalDepth + 2.0 * vRadius;\n\t\tfloat adjust = adjustedDepth / originalDepth;\n\n\t\tmvPosition.xyz = mvPosition.xyz * adjust;\n\t\tgl_Position = projectionMatrix * mvPosition;\n\t#endif\n\n\n\t// CLIPPING\n\tdoClipping();\n\t\n\n\n\n\n\t//#if defined(num_snapshots) && num_snapshots > 0\n\n\t//\tfor(int i = 0; i < num_snapshots; i++){\n\t//\t\tvSnapProjected[i] = uSnapProj[i] * uSnapView[i] * modelMatrix * vec4(position, 1.0);\t\n\t//\t\tvSnapProjectedDistance[i] = -(uSnapView[i] * modelMatrix * vec4(position, 1.0)).z;\n\t//\t}\n\t//\t\n\t//#endif\n\n\t#if defined(num_shadowmaps) && num_shadowmaps > 0\n\n\t\tconst float sm_near = 0.1;\n\t\tconst float sm_far = 10000.0;\n\n\t\tfor(int i = 0; i < num_shadowmaps; i++){\n\t\t\tvec3 viewPos = (uShadowWorldView[i] * vec4(position, 1.0)).xyz;\n\t\t\tfloat distanceToLight = abs(viewPos.z);\n\t\t\t\n\t\t\tvec4 projPos = uShadowProj[i] * uShadowWorldView[i] * vec4(position, 1);\n\t\t\tvec3 nc = projPos.xyz / projPos.w;\n\t\t\t\n\t\t\tfloat u = nc.x * 0.5 + 0.5;\n\t\t\tfloat v = nc.y * 0.5 + 0.5;\n\n\t\t\tvec2 sampleStep = vec2(1.0 / (2.0*1024.0), 1.0 / (2.0*1024.0)) * 1.5;\n\t\t\tvec2 sampleLocations[9];\n\t\t\tsampleLocations[0] = vec2(0.0, 0.0);\n\t\t\tsampleLocations[1] = sampleStep;\n\t\t\tsampleLocations[2] = -sampleStep;\n\t\t\tsampleLocations[3] = vec2(sampleStep.x, -sampleStep.y);\n\t\t\tsampleLocations[4] = vec2(-sampleStep.x, sampleStep.y);\n\n\t\t\tsampleLocations[5] = vec2(0.0, sampleStep.y);\n\t\t\tsampleLocations[6] = vec2(0.0, -sampleStep.y);\n\t\t\tsampleLocations[7] = vec2(sampleStep.x, 0.0);\n\t\t\tsampleLocations[8] = vec2(-sampleStep.x, 0.0);\n\n\t\t\tfloat visibleSamples = 0.0;\n\t\t\tfloat numSamples = 0.0;\n\n\t\t\tfloat bias = vRadius * 2.0;\n\n\t\t\tfor(int j = 0; j < 9; j++){\n\t\t\t\tvec4 depthMapValue = texture2D(uShadowMap[i], vec2(u, v) + sampleLocations[j]);\n\n\t\t\t\tfloat linearDepthFromSM = depthMapValue.x + bias;\n\t\t\t\tfloat linearDepthFromViewer = distanceToLight;\n\n\t\t\t\tif(linearDepthFromSM > linearDepthFromViewer){\n\t\t\t\t\tvisibleSamples += 1.0;\n\t\t\t\t}\n\n\t\t\t\tnumSamples += 1.0;\n\t\t\t}\n\n\t\t\tfloat visibility = visibleSamples / numSamples;\n\n\t\t\tif(u < 0.0 || u > 1.0 || v < 0.0 || v > 1.0 || nc.x < -1.0 || nc.x > 1.0 || nc.y < -1.0 || nc.y > 1.0 || nc.z < -1.0 || nc.z > 1.0){\n\t\t\t\t//vColor = vec3(0.0, 0.0, 0.2);\n\t\t\t}else{\n\t\t\t\t//vColor = vec3(1.0, 1.0, 1.0) * visibility + vec3(1.0, 1.0, 1.0) * vec3(0.5, 0.0, 0.0) * (1.0 - visibility);\n\t\t\t\tvColor = vColor * visibility + vColor * uShadowColor * (1.0 - visibility);\n\t\t\t}\n\t\t}\n\n\t#endif\n\n\tif(uDebug){\n\t\tvColor.b = (vColor.r + vColor.g + vColor.b) / 3.0;\n\t\tvColor.r = 1.0;\n\t\tvColor.g = 1.0;\n\t}\n\n}\n';Potree.Shaders["pointcloud.fs"]='\n#if defined paraboloid_point_shape\n\t#extension GL_EXT_frag_depth : enable\n#endif\n\nprecision highp float;\nprecision highp int;\n\nuniform mat4 viewMatrix;\nuniform mat4 uViewInv;\nuniform mat4 uProjInv;\nuniform vec3 cameraPosition;\n\n\nuniform mat4 projectionMatrix;\nuniform float uOpacity;\n\nuniform float blendHardness;\nuniform float blendDepthSupplement;\nuniform float fov;\nuniform float uSpacing;\nuniform float near;\nuniform float far;\nuniform float uPCIndex;\nuniform float uScreenWidth;\nuniform float uScreenHeight;\n\nvarying vec4\tvColor;\nvarying float\tvLogDepth;\nvarying vec3\tvViewPosition;\nvarying float\tvRadius;\nvarying float \tvPointSize;\nvarying vec3 \tvPosition;\n\n#if defined(num_snapshots) && num_snapshots > 0\nuniform sampler2D uSnapshot[num_snapshots];\nuniform sampler2D uSnapshotDepth[num_snapshots];\nuniform mat4 uSnapView[num_snapshots];\nuniform mat4 uSnapProj[num_snapshots];\nuniform mat4 uSnapProjInv[num_snapshots];\nuniform mat4 uSnapViewInv[num_snapshots];\n\nvarying float vSnapTextureID;\n#endif\n\n\n\n\n\n\nfloat specularStrength = 1.0;\n\nvoid main() {\n\n\tvec4 color = vColor;\n\tfloat depth = gl_FragCoord.z;\n\n\n\t//#if defined(num_snapshots) && num_snapshots > 0\n\t//\tvec3 sRGB = vec3(0.0, 0.0, 0.0);\n\t//\tfloat sA = 0.0;\n\n\t//\tfor(int i = 0; i < num_snapshots; i++){\n\n\t//\t\tfloat snapLinearDistance = 0.0;\n\t//\t\tfloat currentLinearDistance = vSnapProjectedDistance[i];\n\t//\t\tvec2 uv;\n\n\t//\t\t{\n\t//\t\t\tvec2 pc = vec2(gl_PointCoord.x - 0.5, (1.0 - gl_PointCoord.y) - 0.5);\n\t//\t\t\tvec2 offset = (pc * vPointSize) / vec2(uScreenWidth, uScreenHeight);\n\t//\t\n\t//\t\t\tuv = 0.5 * (vSnapProjected[i].xy /vSnapProjected[i].w) + 0.5 + offset;\t\n\t//\t\t\t\n\t//\t\t\tvec4 td = texture2D(uSnapshotDepth[i], uv);\n\t//\t\t\tfloat d = td.r;\n\n\t//\t\t\t// TODO save linear distance in uSnapshotDepth!!!\n\t//\t\t\tvec4 snapViewPos = uSnapProjInv[i] * vec4(uv * 2.0 - 1.0, d * 2.0 - 1.0, 1.0);\n\t//\t\t\tsnapViewPos = snapViewPos / snapViewPos.w;\n\t//\t\t\tsnapLinearDistance = -snapViewPos.z;\n\n\t//\t\t}\n\n\t//\t\tif(abs(currentLinearDistance - snapLinearDistance) < vRadius * 1.0){\n\t//\t\t\tvec4 col = texture2D(uSnapshot[i], uv);\n\t//\t\t\t//vec4 col = vec4(0.5, 1.0, 0.0, 1.0);\n\t//\t\t\tsRGB += col.rgb;\n\n\t//\t\t\tif(col.a != 0.0){\n\t//\t\t\t\tsA = sA + 1.0;\n\t//\t\t\t}\n\t//\t\t}else{\n\t//\t\t\t//sRGB += vColor;\n\t//\t\t\t//sA += 1.0;\n\t//\t\t\t\n\t//\t\t}\n\n\t//\t}\n\n\n\t//\tcolor = sRGB / sA;\n\t//\tif(sA == 0.0){\n\t//\t\t//color = vColor;\n\t//\t\tdiscard;\n\t//\t}\n\t//\n\t//#endif\n\n\n\t#if defined(circle_point_shape) || defined(paraboloid_point_shape) \n\t\tfloat u = 2.0 * gl_PointCoord.x - 1.0;\n\t\tfloat v = 2.0 * gl_PointCoord.y - 1.0;\n\t#endif\n\t\n\t#if defined(circle_point_shape) \n\t\tfloat cc = u*u + v*v;\n\t\tif(cc > 1.0){\n\t\t\tdiscard;\n\t\t}\n\t#endif\n\t\t\n\t#if defined color_type_point_index\n\t\tgl_FragColor = vec4(color.rgb, uPCIndex / 255.0);\n\t#elif defined color_type_composite\n\t\tgl_FragColor = color;\n\t#else\n\t\tgl_FragColor = vec4(color.rgb,uOpacity);\n\t#endif\n\n\t#if defined paraboloid_point_shape\n\t\tfloat wi = 0.0 - ( u*u + v*v);\n\t\tvec4 pos = vec4(vViewPosition, 1.0);\n\t\tpos.z += wi * vRadius;\n\t\tfloat linearDepth = -pos.z;\n\t\tpos = projectionMatrix * pos;\n\t\tpos = pos / pos.w;\n\t\tfloat expDepth = pos.z;\n\t\tdepth = (pos.z + 1.0) / 2.0;\n\t\tgl_FragDepthEXT = depth;\n\t\t\n\t\t#if defined(color_type_depth)\n\t\t\tcolor.r = linearDepth;\n\t\t\tcolor.g = expDepth;\n\t\t#endif\n\t\t\n\t\t#if defined(use_edl)\n\t\t\tgl_FragColor.a = log2(linearDepth);\n\t\t#endif\n\t\t\n\t#else\n\t\t#if defined(use_edl)\n\t\t\tgl_FragColor.a = vLogDepth;\n\t\t#endif\n\t#endif\n\n\t#if defined(weighted_splats)\n\t\tfloat distance = 2.0 * length(gl_PointCoord.xy - 0.5);\n\t\tfloat weight = max(0.0, 1.0 - distance);\n\t\tweight = pow(weight, 1.5);\n\n\t\tgl_FragColor.a = weight;\n\t\tgl_FragColor.xyz = gl_FragColor.xyz * weight;\n\t#endif\n\t\n}\n\n\n';Potree.Shaders["pointcloud_sm.vs"]='\nprecision mediump float;\nprecision mediump int;\n\nattribute vec3 position;\nattribute vec3 color;\n\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\n\nuniform float uScreenWidth;\nuniform float uScreenHeight;\nuniform float near;\nuniform float far;\n\nuniform float uSpacing;\nuniform float uOctreeSize;\nuniform float uLevel;\nuniform float uVNStart;\n\nuniform sampler2D visibleNodes;\n\nvarying float vLinearDepth;\nvarying vec3 vColor;\n\n#define PI 3.141592653589793\n\n\n\n// ---------------------\n// OCTREE\n// ---------------------\n\n#if defined(adaptive_point_size)\n/**\n * number of 1-bits up to inclusive index position\n * number is treated as if it were an integer in the range 0-255\n *\n */\nfloat numberOfOnes(float number, float index){\n\tfloat tmp = mod(number, pow(2.0, index + 1.0));\n\tfloat numOnes = 0.0;\n\tfor(float i = 0.0; i < 8.0; i++){\n\t\tif(mod(tmp, 2.0) != 0.0){\n\t\t\tnumOnes++;\n\t\t}\n\t\ttmp = floor(tmp / 2.0);\n\t}\n\treturn numOnes;\n}\n\n\n/**\n * checks whether the bit at index is 1\n * number is treated as if it were an integer in the range 0-255\n *\n */\nbool isBitSet(float number, float index){\n\treturn mod(floor(number / pow(2.0, index)), 2.0) != 0.0;\n}\n\n\n/**\n * find the LOD at the point position\n */\nfloat getLOD(){\n\t\n\tvec3 offset = vec3(0.0, 0.0, 0.0);\n\tfloat iOffset = uVNStart;\n\tfloat depth = uLevel;\n\tfor(float i = 0.0; i <= 30.0; i++){\n\t\tfloat nodeSizeAtLevel = uOctreeSize  / pow(2.0, i + uLevel + 0.0);\n\t\t\n\t\tvec3 index3d = (position-offset) / nodeSizeAtLevel;\n\t\tindex3d = floor(index3d + 0.5);\n\t\tfloat index = 4.0 * index3d.x + 2.0 * index3d.y + index3d.z;\n\t\t\n\t\tvec4 value = texture2D(visibleNodes, vec2(iOffset / 2048.0, 0.0));\n\t\tfloat mask = value.r * 255.0;\n\t\tif(isBitSet(mask, index)){\n\t\t\t// there are more visible child nodes at this position\n\t\t\tiOffset = iOffset + value.g * 255.0 * 256.0 + value.b * 255.0 + numberOfOnes(mask, index - 1.0);\n\t\t\tdepth++;\n\t\t}else{\n\t\t\t// no more visible child nodes at this position\n\t\t\treturn depth;\n\t\t}\n\t\t\n\t\toffset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;\n\t}\n\t\t\n\treturn depth;\n}\n\n#endif\n\nfloat getPointSize(){\n\tfloat pointSize = 1.0;\n\t\n\tfloat slope = tan(fov / 2.0);\n\tfloat projFactor =  -0.5 * uScreenHeight / (slope * vViewPosition.z);\n\t\n\tfloat r = uOctreeSpacing * 1.5;\n\tvRadius = r;\n\t#if defined fixed_point_size\n\t\tpointSize = size;\n\t#elif defined attenuated_point_size\n\t\tif(uUseOrthographicCamera){\n\t\t\tpointSize = size;\t\t\t\n\t\t}else{\n\t\t\tpointSize = pointSize * projFactor;\n\t\t}\n\t#elif defined adaptive_point_size\n\t\tif(uUseOrthographicCamera) {\n\t\t\tfloat worldSpaceSize = 1.5 * size * r / getPointSizeAttenuation();\n\t\t\tpointSize = (worldSpaceSize / uOrthoWidth) * uScreenWidth;\n\t\t} else {\n\t\t\tfloat worldSpaceSize = 1.5 * size * r / getPointSizeAttenuation();\n\t\t\tpointSize = worldSpaceSize * projFactor;\n\t\t}\n\t#endif\n\n\tpointSize = max(minSize, pointSize);\n\tpointSize = min(maxSize, pointSize);\n\t\n\tvRadius = pointSize / projFactor;\n\n\treturn pointSize;\n}\n\n\nvoid main() {\n\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tvLinearDepth = gl_Position.w;\n\n\tfloat pointSize = getPointSize();\n\tgl_PointSize = pointSize;\n\n}\n';Potree.Shaders["pointcloud_sm.fs"]='\nprecision mediump float;\nprecision mediump int;\n\nvarying vec3 vColor;\nvarying float vLinearDepth;\n\nvoid main() {\n\n\t//gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n\t//gl_FragColor = vec4(vColor, 1.0);\n\t//gl_FragColor = vec4(vLinearDepth, pow(vLinearDepth, 2.0), 0.0, 1.0);\n\tgl_FragColor = vec4(vLinearDepth, vLinearDepth / 30.0, vLinearDepth / 30.0, 1.0);\n\t\n}\n\n\n';Potree.Shaders["normalize.vs"]='\nprecision mediump float;\nprecision mediump int;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 projectionMatrix;\nuniform mat4 modelViewMatrix;\n\nvarying vec2 vUv;\n\nvoid main() {\n\tvUv = uv;\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}';Potree.Shaders["normalize.fs"]='\n#extension GL_EXT_frag_depth : enable\n\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D uWeightMap;\nuniform sampler2D uDepthMap;\n\nvarying vec2 vUv;\n\nvoid main() {\n\tfloat depth = texture2D(uDepthMap, vUv).r;\n\t\n\tif(depth >= 1.0){\n\t\tdiscard;\n\t}\n\n\tgl_FragColor = vec4(depth, 1.0, 0.0, 1.0);\n\n\tvec4 color = texture2D(uWeightMap, vUv); \n\tcolor = color / color.w;\n\t\n\tgl_FragColor = vec4(color.xyz, 1.0); \n\t\n\tgl_FragDepthEXT = depth;\n\n\n}';Potree.Shaders["normalize_and_edl.fs"]='\n#extension GL_EXT_frag_depth : enable\n\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D uWeightMap;\nuniform sampler2D uEDLMap;\nuniform sampler2D uDepthMap;\n\nuniform float screenWidth;\nuniform float screenHeight;\nuniform vec2 neighbours[NEIGHBOUR_COUNT];\nuniform float edlStrength;\nuniform float radius;\n\nvarying vec2 vUv;\n\nfloat response(float depth){\n\tvec2 uvRadius = radius / vec2(screenWidth, screenHeight);\n\t\n\tfloat sum = 0.0;\n\t\n\tfor(int i = 0; i < NEIGHBOUR_COUNT; i++){\n\t\tvec2 uvNeighbor = vUv + uvRadius * neighbours[i];\n\t\t\n\t\tfloat neighbourDepth = texture2D(uEDLMap, uvNeighbor).a;\n\n\t\tif(neighbourDepth != 0.0){\n\t\t\tif(depth == 0.0){\n\t\t\t\tsum += 100.0;\n\t\t\t}else{\n\t\t\t\tsum += max(0.0, depth - neighbourDepth);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn sum / float(NEIGHBOUR_COUNT);\n}\n\nvoid main() {\n\n\tfloat edlDepth = texture2D(uEDLMap, vUv).a;\n\tfloat res = response(edlDepth);\n\tfloat shade = exp(-res * 300.0 * edlStrength);\n\n\tfloat depth = texture2D(uDepthMap, vUv).r;\n\tif(depth >= 1.0 && res == 0.0){\n\t\tdiscard;\n\t}\n\t\n\tvec4 color = texture2D(uWeightMap, vUv); \n\tcolor = color / color.w;\n\tcolor = color * shade;\n\n\tgl_FragColor = vec4(color.xyz, 1.0); \n\n\tgl_FragDepthEXT = depth;\n}';Potree.Shaders["edl.vs"]='\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\t\n\tvec4 mvPosition = modelViewMatrix * vec4(position,1.0);\n\n    gl_Position = projectionMatrix * mvPosition;\n}';Potree.Shaders["edl.fs"]='// \n// adapted from the EDL shader code from Christian Boucheny in cloud compare:\n// https://github.com/cloudcompare/trunk/tree/master/plugins/qEDL/shaders/EDL\n//\n\nuniform float screenWidth;\nuniform float screenHeight;\nuniform vec2 neighbours[NEIGHBOUR_COUNT];\nuniform float edlStrength;\nuniform float radius;\nuniform float opacity;\n\n//uniform sampler2D colorMap;\nuniform sampler2D uRegularColor;\nuniform sampler2D uRegularDepth;\nuniform sampler2D uEDLColor;\nuniform sampler2D uEDLDepth;\n\nvarying vec2 vUv;\n\nfloat response(float depth){\n\tvec2 uvRadius = radius / vec2(screenWidth, screenHeight);\n\t\n\tfloat sum = 0.0;\n\t\n\tfor(int i = 0; i < NEIGHBOUR_COUNT; i++){\n\t\tvec2 uvNeighbor = vUv + uvRadius * neighbours[i];\n\t\t\n\t\tfloat neighbourDepth = texture2D(uEDLColor, uvNeighbor).a;\n\t\tneighbourDepth = (neighbourDepth == 1.0) ? 0.0 : neighbourDepth;\n\n\t\tif(neighbourDepth != 0.0){\n\t\t\tif(depth == 0.0){\n\t\t\t\tsum += 100.0;\n\t\t\t}else{\n\t\t\t\tsum += max(0.0, depth - neighbourDepth);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn sum / float(NEIGHBOUR_COUNT);\n}\n\nvoid main(){\n\tvec4 cReg = texture2D(uRegularColor, vUv);\n\tvec4 cEDL = texture2D(uEDLColor, vUv);\n\t\n\tfloat depth = cEDL.a;\n\tdepth = (depth == 1.0) ? 0.0 : depth;\n\tfloat res = response(depth);\n\tfloat shade = exp(-res * 300.0 * edlStrength);\n\n\tfloat dReg = texture2D(uRegularDepth, vUv).r;\n\tfloat dEDL = texture2D(uEDLDepth, vUv).r;\n\n\tif(dEDL < dReg){\n\t\tgl_FragColor = vec4(cEDL.rgb * shade, opacity);\n\t}else{\n\t\tgl_FragColor = vec4(cReg.rgb * shade, cReg.a);\n\t}\n\n}\n';Potree.Shaders["blur.vs"]='\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n\n    gl_Position =   projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}';Potree.Shaders["blur.fs"]='\nuniform mat4 projectionMatrix;\n\nuniform float screenWidth;\nuniform float screenHeight;\nuniform float near;\nuniform float far;\n\nuniform sampler2D map;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n\tfloat dx = 1.0 / screenWidth;\n\tfloat dy = 1.0 / screenHeight;\n\n\tvec3 color = vec3(0.0, 0.0, 0.0);\n\tcolor += texture2D(map, vUv + vec2(-dx, -dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(  0, -dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(+dx, -dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(-dx,   0)).rgb;\n\tcolor += texture2D(map, vUv + vec2(  0,   0)).rgb;\n\tcolor += texture2D(map, vUv + vec2(+dx,   0)).rgb;\n\tcolor += texture2D(map, vUv + vec2(-dx,  dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(  0,  dy)).rgb;\n\tcolor += texture2D(map, vUv + vec2(+dx,  dy)).rgb;\n    \n\tcolor = color / 9.0;\n\t\n\tgl_FragColor = vec4(color, 1.0);\n\t\n\t\n}';/**
 * @class Loads mno files and returns a PointcloudOctree
 * for a description of the mno binary file format, read mnoFileFormat.txt
 *
 * @author Markus Schuetz
 */Potree.POCLoader=function(){};/**
 * @return a point cloud octree with the root node data loaded.
 * loading of descendants happens asynchronously when they're needed
 *
 * @param url
 * @param loadingFinishedListener executed after loading the binary has been finished
 */Potree.POCLoader.load=function load(url,callback){try{var pco=new Potree.PointCloudOctreeGeometry();pco.url=url;var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',url,true);xhr.onreadystatechange=function(){if(xhr.readyState===4&&(xhr.status===200||xhr.status===0)){var fMno=JSON.parse(xhr.responseText);var version=new Potree.Version(fMno.version);// assume octreeDir is absolute if it starts with http
    if(fMno.octreeDir.indexOf('http')===0){pco.octreeDir=fMno.octreeDir;}else{pco.octreeDir=url+'/../'+fMno.octreeDir;}pco.spacing=fMno.spacing;pco.hierarchyStepSize=fMno.hierarchyStepSize;pco.pointAttributes=fMno.pointAttributes;var min=new THREE.Vector3(fMno.boundingBox.lx,fMno.boundingBox.ly,fMno.boundingBox.lz);var max=new THREE.Vector3(fMno.boundingBox.ux,fMno.boundingBox.uy,fMno.boundingBox.uz);var boundingBox=new THREE.Box3(min,max);var tightBoundingBox=boundingBox.clone();if(fMno.tightBoundingBox){tightBoundingBox.min.copy(new THREE.Vector3(fMno.tightBoundingBox.lx,fMno.tightBoundingBox.ly,fMno.tightBoundingBox.lz));tightBoundingBox.max.copy(new THREE.Vector3(fMno.tightBoundingBox.ux,fMno.tightBoundingBox.uy,fMno.tightBoundingBox.uz));}var offset=min.clone();boundingBox.min.sub(offset);boundingBox.max.sub(offset);tightBoundingBox.min.sub(offset);tightBoundingBox.max.sub(offset);pco.projection=fMno.projection;pco.boundingBox=boundingBox;pco.tightBoundingBox=tightBoundingBox;pco.boundingSphere=boundingBox.getBoundingSphere();pco.tightBoundingSphere=tightBoundingBox.getBoundingSphere();pco.offset=offset;if(fMno.pointAttributes==='LAS'){pco.loader=new Potree.LasLazLoader(fMno.version);}else if(fMno.pointAttributes==='LAZ'){pco.loader=new Potree.LasLazLoader(fMno.version);}else{pco.loader=new Potree.BinaryLoader(fMno.version,boundingBox,fMno.scale);pco.pointAttributes=new Potree.PointAttributes(pco.pointAttributes);}var nodes={};{// load root
        var name='r';var root=new Potree.PointCloudOctreeGeometryNode(name,pco,boundingBox);root.level=0;root.hasChildren=true;root.spacing=pco.spacing;if(version.upTo('1.5')){root.numPoints=fMno.hierarchy[0][1];}else{root.numPoints=0;}pco.root=root;pco.root.load();nodes[name]=root;}// load remaining hierarchy
    if(version.upTo('1.4')){for(var _i12=1;_i12<fMno.hierarchy.length;_i12++){var _name=fMno.hierarchy[_i12][0];var numPoints=fMno.hierarchy[_i12][1];var index=parseInt(_name.charAt(_name.length-1));var parentName=_name.substring(0,_name.length-1);var parentNode=nodes[parentName];var level=_name.length-1;var _boundingBox2=Potree.POCLoader.createChildAABB(parentNode.boundingBox,index);var _node3=new Potree.PointCloudOctreeGeometryNode(_name,pco,_boundingBox2);_node3.level=level;_node3.numPoints=numPoints;_node3.spacing=pco.spacing/Math.pow(2,level);parentNode.addChild(_node3);nodes[_name]=_node3;}}pco.nodes=nodes;callback(pco);}};xhr.send(null);}catch(e){console.log("loading failed: '"+url+"'");console.log(e);callback();}};Potree.POCLoader.loadPointAttributes=function(mno){var fpa=mno.pointAttributes;var pa=new Potree.PointAttributes();for(var _i13=0;_i13<fpa.length;_i13++){var pointAttribute=Potree.PointAttribute[fpa[_i13]];pa.add(pointAttribute);}return pa;};Potree.POCLoader.createChildAABB=function(aabb,index){var min=aabb.min.clone();var max=aabb.max.clone();var size=new THREE.Vector3().subVectors(max,min);if((index&1)>0){min.z+=size.z/2;}else{max.z-=size.z/2;}if((index&2)>0){min.y+=size.y/2;}else{max.y-=size.y/2;}if((index&4)>0){min.x+=size.x/2;}else{max.x-=size.x/2;}return new THREE.Box3(min,max);};Potree.PointAttributeNames={};Potree.PointAttributeNames.POSITION_CARTESIAN=0;// float x, y, z;
Potree.PointAttributeNames.COLOR_PACKED=1;// byte r, g, b, a; 	I = [0,1]
Potree.PointAttributeNames.COLOR_FLOATS_1=2;// float r, g, b; 		I = [0,1]
Potree.PointAttributeNames.COLOR_FLOATS_255=3;// float r, g, b; 		I = [0,255]
Potree.PointAttributeNames.NORMAL_FLOATS=4;// float x, y, z;
Potree.PointAttributeNames.FILLER=5;Potree.PointAttributeNames.INTENSITY=6;Potree.PointAttributeNames.CLASSIFICATION=7;Potree.PointAttributeNames.NORMAL_SPHEREMAPPED=8;Potree.PointAttributeNames.NORMAL_OCT16=9;Potree.PointAttributeNames.NORMAL=10;Potree.PointAttributeNames.RETURN_NUMBER=11;Potree.PointAttributeNames.NUMBER_OF_RETURNS=12;Potree.PointAttributeNames.SOURCE_ID=13;Potree.PointAttributeNames.INDICES=14;Potree.PointAttributeNames.SPACING=15;/**
 * Some types of possible point attribute data formats
 *
 * @class
 */Potree.PointAttributeTypes={DATA_TYPE_DOUBLE:{ordinal:0,size:8},DATA_TYPE_FLOAT:{ordinal:1,size:4},DATA_TYPE_INT8:{ordinal:2,size:1},DATA_TYPE_UINT8:{ordinal:3,size:1},DATA_TYPE_INT16:{ordinal:4,size:2},DATA_TYPE_UINT16:{ordinal:5,size:2},DATA_TYPE_INT32:{ordinal:6,size:4},DATA_TYPE_UINT32:{ordinal:7,size:4},DATA_TYPE_INT64:{ordinal:8,size:8},DATA_TYPE_UINT64:{ordinal:9,size:8}};var i=0;for(var obj in Potree.PointAttributeTypes){Potree.PointAttributeTypes[i]=Potree.PointAttributeTypes[obj];i++;}/**
 * A single point attribute such as color/normal/.. and its data format/number of elements/...
 *
 * @class
 * @param name
 * @param type
 * @param size
 * @returns
 */Potree.PointAttribute=function(name,type,numElements){this.name=name;this.type=type;this.numElements=numElements;this.byteSize=this.numElements*this.type.size;};Potree.PointAttribute.POSITION_CARTESIAN=new Potree.PointAttribute(Potree.PointAttributeNames.POSITION_CARTESIAN,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3);Potree.PointAttribute.RGBA_PACKED=new Potree.PointAttribute(Potree.PointAttributeNames.COLOR_PACKED,Potree.PointAttributeTypes.DATA_TYPE_INT8,4);Potree.PointAttribute.COLOR_PACKED=Potree.PointAttribute.RGBA_PACKED;Potree.PointAttribute.RGB_PACKED=new Potree.PointAttribute(Potree.PointAttributeNames.COLOR_PACKED,Potree.PointAttributeTypes.DATA_TYPE_INT8,3);Potree.PointAttribute.NORMAL_FLOATS=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_FLOATS,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3);Potree.PointAttribute.FILLER_1B=new Potree.PointAttribute(Potree.PointAttributeNames.FILLER,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);Potree.PointAttribute.INTENSITY=new Potree.PointAttribute(Potree.PointAttributeNames.INTENSITY,Potree.PointAttributeTypes.DATA_TYPE_UINT16,1);Potree.PointAttribute.CLASSIFICATION=new Potree.PointAttribute(Potree.PointAttributeNames.CLASSIFICATION,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);Potree.PointAttribute.NORMAL_SPHEREMAPPED=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_SPHEREMAPPED,Potree.PointAttributeTypes.DATA_TYPE_UINT8,2);Potree.PointAttribute.NORMAL_OCT16=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL_OCT16,Potree.PointAttributeTypes.DATA_TYPE_UINT8,2);Potree.PointAttribute.NORMAL=new Potree.PointAttribute(Potree.PointAttributeNames.NORMAL,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,3);Potree.PointAttribute.RETURN_NUMBER=new Potree.PointAttribute(Potree.PointAttributeNames.RETURN_NUMBER,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);Potree.PointAttribute.NUMBER_OF_RETURNS=new Potree.PointAttribute(Potree.PointAttributeNames.NUMBER_OF_RETURNS,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);Potree.PointAttribute.SOURCE_ID=new Potree.PointAttribute(Potree.PointAttributeNames.SOURCE_ID,Potree.PointAttributeTypes.DATA_TYPE_UINT8,1);Potree.PointAttribute.INDICES=new Potree.PointAttribute(Potree.PointAttributeNames.INDICES,Potree.PointAttributeTypes.DATA_TYPE_UINT32,1);Potree.PointAttribute.SPACING=new Potree.PointAttribute(Potree.PointAttributeNames.SPACING,Potree.PointAttributeTypes.DATA_TYPE_FLOAT,1);/**
 * Ordered list of PointAttributes used to identify how points are aligned in a buffer.
 *
 * @class
 *
 */Potree.PointAttributes=function(pointAttributes){this.attributes=[];this.byteSize=0;this.size=0;if(pointAttributes!=null){for(var _i14=0;_i14<pointAttributes.length;_i14++){var pointAttributeName=pointAttributes[_i14];var pointAttribute=Potree.PointAttribute[pointAttributeName];this.attributes.push(pointAttribute);this.byteSize+=pointAttribute.byteSize;this.size++;}}};Potree.PointAttributes.prototype.add=function(pointAttribute){this.attributes.push(pointAttribute);this.byteSize+=pointAttribute.byteSize;this.size++;};Potree.PointAttributes.prototype.hasColors=function(){for(var name in this.attributes){var pointAttribute=this.attributes[name];if(pointAttribute.name===Potree.PointAttributeNames.COLOR_PACKED){return true;}}return false;};Potree.PointAttributes.prototype.hasNormals=function(){for(var name in this.attributes){var pointAttribute=this.attributes[name];if(pointAttribute===Potree.PointAttribute.NORMAL_SPHEREMAPPED||pointAttribute===Potree.PointAttribute.NORMAL_FLOATS||pointAttribute===Potree.PointAttribute.NORMAL||pointAttribute===Potree.PointAttribute.NORMAL_OCT16){return true;}}return false;};Potree.BinaryLoader=function(){function BinaryLoader(version,boundingBox,scale){_classCallCheck(this,BinaryLoader);if(typeof version==='string'){this.version=new Potree.Version(version);}else{this.version=version;}this.boundingBox=boundingBox;this.scale=scale;}_createClass(BinaryLoader,[{key:'load',value:function load(node){var _this5=this;if(node.loaded){return;}var url=node.getURL();if(this.version.equalOrHigher('1.4')){url+='.bin';}var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.onreadystatechange=function(){if(xhr.readyState===4){if((xhr.status===200||xhr.status===0)&&xhr.response!==null){var buffer=xhr.response;_this5.parse(node,buffer);}else{throw new Error('Failed to load file! HTTP status: '+xhr.status+', file: '+url);}}};try{xhr.send(null);}catch(e){console.log('fehler beim laden der punktwolke: '+e);}}},{key:'parse',value:function parse(node,buffer){var pointAttributes=node.pcoGeometry.pointAttributes;var numPoints=buffer.byteLength/node.pcoGeometry.pointAttributes.byteSize;if(this.version.upTo('1.5')){node.numPoints=numPoints;}var workerPath=Potree.scriptPath+'/workers/BinaryDecoderWorker.js';var worker=Potree.workerPool.getWorker(workerPath);worker.onmessage=function(e){var data=e.data;var buffers=data.attributeBuffers;var tightBoundingBox=new THREE.Box3(new THREE.Vector3().fromArray(data.tightBoundingBox.min),new THREE.Vector3().fromArray(data.tightBoundingBox.max));Potree.workerPool.returnWorker(workerPath,worker);var geometry=new THREE.BufferGeometry();for(var property in buffers){var _buffer=buffers[property].buffer;if(parseInt(property)===Potree.PointAttributeNames.POSITION_CARTESIAN){geometry.addAttribute('position',new THREE.BufferAttribute(new Float32Array(_buffer),3));}else if(parseInt(property)===Potree.PointAttributeNames.COLOR_PACKED){geometry.addAttribute('color',new THREE.BufferAttribute(new Uint8Array(_buffer),4,true));}else if(parseInt(property)===Potree.PointAttributeNames.INTENSITY){geometry.addAttribute('intensity',new THREE.BufferAttribute(new Float32Array(_buffer),1));}else if(parseInt(property)===Potree.PointAttributeNames.CLASSIFICATION){geometry.addAttribute('classification',new THREE.BufferAttribute(new Uint8Array(_buffer),1));}else if(parseInt(property)===Potree.PointAttributeNames.NORMAL_SPHEREMAPPED){geometry.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(_buffer),3));}else if(parseInt(property)===Potree.PointAttributeNames.NORMAL_OCT16){geometry.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(_buffer),3));}else if(parseInt(property)===Potree.PointAttributeNames.NORMAL){geometry.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(_buffer),3));}else if(parseInt(property)===Potree.PointAttributeNames.INDICES){var bufferAttribute=new THREE.BufferAttribute(new Uint8Array(_buffer),4);bufferAttribute.normalized=true;geometry.addAttribute('indices',bufferAttribute);}else if(parseInt(property)===Potree.PointAttributeNames.SPACING){var _bufferAttribute=new THREE.BufferAttribute(new Float32Array(_buffer),1);geometry.addAttribute('spacing',_bufferAttribute);}}tightBoundingBox.max.sub(tightBoundingBox.min);tightBoundingBox.min.set(0,0,0);var numPoints=e.data.buffer.byteLength/pointAttributes.byteSize;node.numPoints=numPoints;node.geometry=geometry;node.mean=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(data.mean))))();node.tightBoundingBox=tightBoundingBox;node.loaded=true;node.loading=false;node.estimatedSpacing=data.estimatedSpacing;Potree.numNodesLoading--;};var message={buffer:buffer,pointAttributes:pointAttributes,version:this.version.version,min:[node.boundingBox.min.x,node.boundingBox.min.y,node.boundingBox.min.z],offset:[node.pcoGeometry.offset.x,node.pcoGeometry.offset.y,node.pcoGeometry.offset.z],scale:this.scale,spacing:node.spacing,hasChildren:node.hasChildren,name:node.name};worker.postMessage(message,[message.buffer]);}}]);return BinaryLoader;}();Potree.GreyhoundBinaryLoader=function(){function _class2(version,boundingBox,scale){_classCallCheck(this,_class2);if(typeof version==='string'){this.version=new Potree.Version(version);}else{this.version=version;}this.boundingBox=boundingBox;this.scale=scale;}_createClass(_class2,[{key:'load',value:function load(node){if(node.loaded)return;var scope=this;var url=node.getURL();var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){var buffer=xhr.response;scope.parse(node,buffer);}else{console.log('Failed to load file! HTTP status:',xhr.status,'file:',url);}}};try{xhr.send(null);}catch(e){console.log('error loading point cloud: '+e);}}},{key:'parse',value:function parse(node,buffer){var NUM_POINTS_BYTES=4;var view=new DataView(buffer,buffer.byteLength-NUM_POINTS_BYTES,NUM_POINTS_BYTES);var numPoints=view.getUint32(0,true);var pointAttributes=node.pcoGeometry.pointAttributes;node.numPoints=numPoints;var workerPath=Potree.scriptPath+'/workers/GreyhoundBinaryDecoderWorker.js';var worker=Potree.workerPool.getWorker(workerPath);worker.onmessage=function(e){var data=e.data;var buffers=data.attributeBuffers;var tightBoundingBox=new THREE.Box3(new THREE.Vector3().fromArray(data.tightBoundingBox.min),new THREE.Vector3().fromArray(data.tightBoundingBox.max));Potree.workerPool.returnWorker(workerPath,worker);var geometry=new THREE.BufferGeometry();for(var property in buffers){var _buffer2=buffers[property].buffer;if(parseInt(property)===Potree.PointAttributeNames.POSITION_CARTESIAN){geometry.addAttribute('position',new THREE.BufferAttribute(new Float32Array(_buffer2),3));}else if(parseInt(property)===Potree.PointAttributeNames.COLOR_PACKED){geometry.addAttribute('color',new THREE.BufferAttribute(new Uint8Array(_buffer2),4,true));}else if(parseInt(property)===Potree.PointAttributeNames.INTENSITY){geometry.addAttribute('intensity',new THREE.BufferAttribute(new Float32Array(_buffer2),1));}else if(parseInt(property)===Potree.PointAttributeNames.CLASSIFICATION){geometry.addAttribute('classification',new THREE.BufferAttribute(new Uint8Array(_buffer2),1));}else if(parseInt(property)===Potree.PointAttributeNames.NORMAL_SPHEREMAPPED){geometry.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(_buffer2),3));}else if(parseInt(property)===Potree.PointAttributeNames.NORMAL_OCT16){geometry.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(_buffer2),3));}else if(parseInt(property)===Potree.PointAttributeNames.NORMAL){geometry.addAttribute('normal',new THREE.BufferAttribute(new Float32Array(_buffer2),3));}else if(parseInt(property)===Potree.PointAttributeNames.INDICES){var bufferAttribute=new THREE.BufferAttribute(new Uint8Array(_buffer2),4);bufferAttribute.normalized=true;geometry.addAttribute('indices',bufferAttribute);}else if(parseInt(property)===Potree.PointAttributeNames.SPACING){var _bufferAttribute2=new THREE.BufferAttribute(new Float32Array(_buffer2),1);geometry.addAttribute('spacing',_bufferAttribute2);}}tightBoundingBox.max.sub(tightBoundingBox.min);tightBoundingBox.min.set(0,0,0);node.numPoints=data.numPoints;node.geometry=geometry;node.mean=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(data.mean))))();node.tightBoundingBox=tightBoundingBox;node.loaded=true;node.loading=false;Potree.numNodesLoading--;};var bb=node.boundingBox;var nodeOffset=node.pcoGeometry.boundingBox.getCenter().sub(node.boundingBox.min);var message={buffer:buffer,pointAttributes:pointAttributes,version:this.version.version,schema:node.pcoGeometry.schema,min:[bb.min.x,bb.min.y,bb.min.z],max:[bb.max.x,bb.max.y,bb.max.z],offset:nodeOffset.toArray(),scale:this.scale,normalize:node.pcoGeometry.normalize};worker.postMessage(message,[message.buffer]);}}]);return _class2;}();/**
 * @class Loads greyhound metadata and returns a PointcloudOctree
 *
 * @author Maarten van Meersbergen
 * @author Oscar Martinez Rubi
 * @author Connor Manning
 */var GreyhoundUtils=function(){function GreyhoundUtils(){_classCallCheck(this,GreyhoundUtils);}_createClass(GreyhoundUtils,null,[{key:'getQueryParam',value:function getQueryParam(name){name=name.replace(/[[\]]/g,'\\$&');var regex=new RegExp('[?&]'+name+'(=([^&#]*)|&|#|$)');var results=regex.exec(window.location.href);if(!results)return null;if(!results[2])return'';return decodeURIComponent(results[2].replace(/\+/g,' '));}},{key:'createSchema',value:function createSchema(attributes){var schema=[{'name':'X','size':4,'type':'signed'},{'name':'Y','size':4,'type':'signed'},{'name':'Z','size':4,'type':'signed'}];// Once we include options in the UI to load a dynamic list of available
// attributes for visualization (f.e. Classification, Intensity etc.)
// we will be able to ask for that specific attribute from the server,
// where we are now requesting all attributes for all points all the time.
// If we do that though, we also need to tell Potree to redraw the points
// that are already loaded (with different attributes).
// This is not default behaviour.
        attributes.forEach(function(item){if(item==='COLOR_PACKED'){schema.push({'name':'Red','size':2,'type':'unsigned'});schema.push({'name':'Green','size':2,'type':'unsigned'});schema.push({'name':'Blue','size':2,'type':'unsigned'});}else if(item==='INTENSITY'){schema.push({'name':'Intensity','size':2,'type':'unsigned'});}else if(item==='CLASSIFICATION'){schema.push({'name':'Classification','size':1,'type':'unsigned'});}});return schema;}},{key:'fetch',value:function fetch(url,cb){var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',url,true);xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){cb(null,xhr.responseText);}else{cb(xhr.responseText);}}};xhr.send(null);}},{key:'fetchBinary',value:function fetchBinary(url,cb){var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){cb(null,xhr.response);}else{cb(xhr.responseText);}}};xhr.send(null);}},{key:'pointSizeFrom',value:function pointSizeFrom(schema){return schema.reduce(function(p,c){return p+c.size;},0);}},{key:'getNormalization',value:function getNormalization(serverURL,baseDepth,cb){var s=[{'name':'X','size':4,'type':'floating'},{'name':'Y','size':4,'type':'floating'},{'name':'Z','size':4,'type':'floating'},{'name':'Red','size':2,'type':'unsigned'},{'name':'Green','size':2,'type':'unsigned'},{'name':'Blue','size':2,'type':'unsigned'},{'name':'Intensity','size':2,'type':'unsigned'}];var url=serverURL+'read?depth='+baseDepth+'&schema='+JSON.stringify(s);GreyhoundUtils.fetchBinary(url,function(err,buffer){if(err)throw new Error(err);var view=new DataView(buffer);var numBytes=buffer.byteLength-4;// TODO Unused: let numPoints = view.getUint32(numBytes, true);
        var pointSize=GreyhoundUtils.pointSizeFrom(s);var colorNorm=false;var intensityNorm=false;for(var offset=0;offset<numBytes;offset+=pointSize){if(view.getUint16(offset+12,true)>255||view.getUint16(offset+14,true)>255||view.getUint16(offset+16,true)>255){colorNorm=true;}if(view.getUint16(offset+18,true)>255){intensityNorm=true;}if(colorNorm&&intensityNorm)break;}if(colorNorm)console.log('Normalizing color');if(intensityNorm)console.log('Normalizing intensity');cb(null,{color:colorNorm,intensity:intensityNorm});});}}]);return GreyhoundUtils;}();;Potree.GreyhoundLoader=function(){};Potree.GreyhoundLoader.loadInfoJSON=function load(url,callback){};/**
 * @return a point cloud octree with the root node data loaded.
 * loading of descendants happens asynchronously when they're needed
 *
 * @param url
 * @param loadingFinishedListener executed after loading the binary has been
 * finished
 */Potree.GreyhoundLoader.load=function load(url,callback){var HIERARCHY_STEP_SIZE=5;try{// We assume everything ater the string 'greyhound://' is the server url
    var serverURL=url.split('greyhound://')[1];if(serverURL.split('http://').length===1){serverURL='http://'+serverURL;}GreyhoundUtils.fetch(serverURL+'info',function(err,data){if(err)throw new Error(err);/* We parse the result of the info query, which should be a JSON
			 * datastructure somewhat like:
			{
			  "bounds": [635577, 848882, -1000, 639004, 853538, 2000],
			  "numPoints": 10653336,
			  "schema": [
			      { "name": "X", "size": 8, "type": "floating" },
			      { "name": "Y", "size": 8, "type": "floating" },
			      { "name": "Z", "size": 8, "type": "floating" },
			      { "name": "Intensity", "size": 2, "type": "unsigned" },
			      { "name": "OriginId", "size": 4, "type": "unsigned" },
			      { "name": "Red", "size": 2, "type": "unsigned" },
			      { "name": "Green", "size": 2, "type": "unsigned" },
			      { "name": "Blue", "size": 2, "type": "unsigned" }
			  ],
			  "srs": "<omitted for brevity>",
			  "type": "octree"
			}
			*/var greyhoundInfo=JSON.parse(data);var version=new Potree.Version('1.4');var bounds=greyhoundInfo.bounds;// TODO Unused: let boundsConforming = greyhoundInfo.boundsConforming;
// TODO Unused: let width = bounds[3] - bounds[0];
// TODO Unused: let depth = bounds[4] - bounds[1];
// TODO Unused: let height = bounds[5] - bounds[2];
// TODO Unused: let radius = width / 2;
        var scale=greyhoundInfo.scale||0.01;if(Array.isArray(scale)){scale=Math.min(scale[0],scale[1],scale[2]);}if(GreyhoundUtils.getQueryParam('scale')){scale=parseFloat(GreyhoundUtils.getQueryParam('scale'));}var baseDepth=Math.max(8,greyhoundInfo.baseDepth);// Ideally we want to change this bit completely, since
// greyhound's options are wider than the default options for
// visualizing pointclouds. If someone ever has time to build a
// custom ui element for greyhound, the schema options from
// this info request should be given to the UI, so the user can
// choose between them. The selected option can then be
// directly requested from the server in the
// PointCloudGreyhoundGeometryNode without asking for
// attributes that we are not currently visualizing.  We assume
// XYZ are always available.
        var attributes=['POSITION_CARTESIAN'];// To be careful, we only add COLOR_PACKED as an option if all
// colors are actually found.
        var red=false;var green=false;var blue=false;greyhoundInfo.schema.forEach(function(entry){// Intensity and Classification are optional.
            if(entry.name==='Intensity'){attributes.push('INTENSITY');}if(entry.name==='Classification'){attributes.push('CLASSIFICATION');}if(entry.name==='Red')red=true;else if(entry.name==='Green')green=true;else if(entry.name==='Blue')blue=true;});if(red&&green&&blue)attributes.push('COLOR_PACKED');// Fill in geometry fields.
        var pgg=new Potree.PointCloudGreyhoundGeometry();pgg.serverURL=serverURL;pgg.spacing=(bounds[3]-bounds[0])/Math.pow(2,baseDepth);pgg.baseDepth=baseDepth;pgg.hierarchyStepSize=HIERARCHY_STEP_SIZE;pgg.schema=GreyhoundUtils.createSchema(attributes);var pointSize=GreyhoundUtils.pointSizeFrom(pgg.schema);pgg.pointAttributes=new Potree.PointAttributes(attributes);pgg.pointAttributes.byteSize=pointSize;var boundingBox=new THREE.Box3(new THREE.Vector3().fromArray(bounds,0),new THREE.Vector3().fromArray(bounds,3));var offset=boundingBox.min.clone();boundingBox.max.sub(boundingBox.min);boundingBox.min.set(0,0,0);pgg.projection=greyhoundInfo.srs;pgg.boundingBox=boundingBox;pgg.boundingSphere=boundingBox.getBoundingSphere();pgg.scale=scale;pgg.offset=offset;console.log('Scale:',scale);console.log('Offset:',offset);console.log('Bounds:',boundingBox);pgg.loader=new Potree.GreyhoundBinaryLoader(version,boundingBox,pgg.scale);var nodes={};{// load root
            var name='r';var root=new Potree.PointCloudGreyhoundGeometryNode(name,pgg,boundingBox,scale,offset);root.level=0;root.hasChildren=true;root.numPoints=greyhoundInfo.numPoints;root.spacing=pgg.spacing;pgg.root=root;pgg.root.load();nodes[name]=root;}pgg.nodes=nodes;GreyhoundUtils.getNormalization(serverURL,greyhoundInfo.baseDepth,function(_,normalize){if(normalize.color)pgg.normalize.color=true;if(normalize.intensity)pgg.normalize.intensity=true;callback(pgg);});});}catch(e){console.log("loading failed: '"+url+"'");console.log(e);callback();}};Potree.GreyhoundLoader.loadPointAttributes=function(mno){var fpa=mno.pointAttributes;var pa=new Potree.PointAttributes();for(var _i15=0;_i15<fpa.length;_i15++){var pointAttribute=Potree.PointAttribute[fpa[_i15]];pa.add(pointAttribute);}return pa;};Potree.GreyhoundLoader.createChildAABB=function(aabb,childIndex){var min=aabb.min;var max=aabb.max;var dHalfLength=new THREE.Vector3().copy(max).sub(min).multiplyScalar(0.5);var xHalfLength=new THREE.Vector3(dHalfLength.x,0,0);var yHalfLength=new THREE.Vector3(0,dHalfLength.y,0);var zHalfLength=new THREE.Vector3(0,0,dHalfLength.z);var cmin=min;var cmax=new THREE.Vector3().add(min).add(dHalfLength);if(childIndex===1){min=new THREE.Vector3().copy(cmin).add(zHalfLength);max=new THREE.Vector3().copy(cmax).add(zHalfLength);}else if(childIndex===3){min=new THREE.Vector3().copy(cmin).add(zHalfLength).add(yHalfLength);max=new THREE.Vector3().copy(cmax).add(zHalfLength).add(yHalfLength);}else if(childIndex===0){min=cmin;max=cmax;}else if(childIndex===2){min=new THREE.Vector3().copy(cmin).add(yHalfLength);max=new THREE.Vector3().copy(cmax).add(yHalfLength);}else if(childIndex===5){min=new THREE.Vector3().copy(cmin).add(zHalfLength).add(xHalfLength);max=new THREE.Vector3().copy(cmax).add(zHalfLength).add(xHalfLength);}else if(childIndex===7){min=new THREE.Vector3().copy(cmin).add(dHalfLength);max=new THREE.Vector3().copy(cmax).add(dHalfLength);}else if(childIndex===4){min=new THREE.Vector3().copy(cmin).add(xHalfLength);max=new THREE.Vector3().copy(cmax).add(xHalfLength);}else if(childIndex===6){min=new THREE.Vector3().copy(cmin).add(xHalfLength).add(yHalfLength);max=new THREE.Vector3().copy(cmax).add(xHalfLength).add(yHalfLength);}return new THREE.Box3(min,max);};/**
 * laslaz code taken and adapted from plas.io js-laslaz
 *	http://plas.io/
 *  https://github.com/verma/plasio
 *
 * Thanks to Uday Verma and Howard Butler
 *
 */Potree.LasLazLoader=function(){function LasLazLoader(version){_classCallCheck(this,LasLazLoader);if(typeof version==='string'){this.version=new Potree.Version(version);}else{this.version=version;}}_createClass(LasLazLoader,[{key:'load',value:function load(node){var _this6=this;if(node.loaded){return;}var pointAttributes=node.pcoGeometry.pointAttributes;var url=node.getURL();if(this.version.equalOrHigher('1.4')){url+='.'+pointAttributes.toLowerCase();}var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200){var buffer=xhr.response;_this6.parse(node,buffer);}else{console.log('Failed to load file! HTTP status: '+xhr.status+', file: '+url);}}};xhr.send(null);}},{key:'parse',value:function parse(node,buffer){var lf=new LASFile(buffer);var handler=new Potree.LasLazBatcher(node);//
// DEBUG
//
// invoke the laz decompress worker thousands of times to check for memory leaks
// until 2018/03/05, it tended to run out of memory at ~6230 invocations
//
//
//lf.open()
//.then( msg => {
//	lf.isOpen = true;
//	return lf;
//}).catch( msg => {
//	console.log("failed to open file. :(");
//}).then( lf => {
//	return lf.getHeader().then(function (h) {
//		return [lf, h];
//	});
//}).then( v => {
//	let lf = v[0];
//	let header = v[1];
//	lf.readData(1000000, 0, 1)
//	.then( v => {
//		console.log("read");
//		this.parse(node, buffer);
//	}).then (v => {
//		lf.close();
//	});
//})
        lf.open().then(function(msg){lf.isOpen=true;return lf;}).catch(function(msg){console.log("failed to open file. :(");}).then(function(lf){return lf.getHeader().then(function(h){return[lf,h];});}).then(function(v){var lf=v[0];var header=v[1];var skip=1;var totalRead=0;var totalToRead=skip<=1?header.pointsCount:header.pointsCount/skip;var reader=function reader(){var p=lf.readData(1000000,0,skip);return p.then(function(data){handler.push(new LASDecoder(data.buffer,header.pointsFormatId,header.pointsStructSize,data.count,header.scale,header.offset,header.mins,header.maxs));totalRead+=data.count;Potree.LasLazLoader.progressCB(totalRead/totalToRead);if(data.hasMoreData){return reader();}else{header.totalRead=totalRead;header.versionAsString=lf.versionAsString;header.isCompressed=lf.isCompressed;return[lf,header,handler];}});};return reader();}).then(function(v){var lf=v[0];// we're done loading this file
//
            Potree.LasLazLoader.progressCB(1);// Close it
            return lf.close().then(function(){lf.isOpen=false;return v.slice(1);}).catch(function(e){// If there was a cancellation, make sure the file is closed, if the file is open
// close and then fail
                if(lf.isOpen){return lf.close().then(function(){lf.isOpen=false;throw e;});}throw e;});});}},{key:'handle',value:function handle(node,url){}}],[{key:'progressCB',value:function progressCB(){}}]);return LasLazLoader;}();Potree.LasLazBatcher=function(){function LasLazBatcher(node){_classCallCheck(this,LasLazBatcher);this.node=node;}_createClass(LasLazBatcher,[{key:'push',value:function push(lasBuffer){var _this7=this;var workerPath=Potree.scriptPath+'/workers/LASDecoderWorker.js';var worker=Potree.workerPool.getWorker(workerPath);var node=this.node;worker.onmessage=function(e){var geometry=new THREE.BufferGeometry();var numPoints=lasBuffer.pointsCount;var positions=new Float32Array(e.data.position);var colors=new Uint8Array(e.data.color);var intensities=new Float32Array(e.data.intensity);var classifications=new Uint8Array(e.data.classification);var returnNumbers=new Uint8Array(e.data.returnNumber);var numberOfReturns=new Uint8Array(e.data.numberOfReturns);var pointSourceIDs=new Uint16Array(e.data.pointSourceID);var indices=new Uint8Array(e.data.indices);geometry.addAttribute('position',new THREE.BufferAttribute(positions,3));geometry.addAttribute('color',new THREE.BufferAttribute(colors,4,true));geometry.addAttribute('intensity',new THREE.BufferAttribute(intensities,1));geometry.addAttribute('classification',new THREE.BufferAttribute(classifications,1));geometry.addAttribute('returnNumber',new THREE.BufferAttribute(returnNumbers,1));geometry.addAttribute('numberOfReturns',new THREE.BufferAttribute(numberOfReturns,1));geometry.addAttribute('pointSourceID',new THREE.BufferAttribute(pointSourceIDs,1));//geometry.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(numPoints * 3), 3));
        geometry.addAttribute('indices',new THREE.BufferAttribute(indices,4));geometry.attributes.indices.normalized=true;var tightBoundingBox=new THREE.Box3(new THREE.Vector3().fromArray(e.data.tightBoundingBox.min),new THREE.Vector3().fromArray(e.data.tightBoundingBox.max));geometry.boundingBox=_this7.node.boundingBox;_this7.node.tightBoundingBox=tightBoundingBox;_this7.node.geometry=geometry;_this7.node.numPoints=numPoints;_this7.node.loaded=true;_this7.node.loading=false;Potree.numNodesLoading--;_this7.node.mean=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(e.data.mean))))();//debugger;
        Potree.workerPool.returnWorker(workerPath,worker);};var message={buffer:lasBuffer.arrayb,numPoints:lasBuffer.pointsCount,pointSize:lasBuffer.pointSize,pointFormatID:2,scale:lasBuffer.scale,offset:lasBuffer.offset,mins:lasBuffer.mins,maxs:lasBuffer.maxs};worker.postMessage(message,[message.buffer]);}}]);return LasLazBatcher;}();//
//
//
// how to calculate the radius of a projected sphere in screen space
// http://stackoverflow.com/questions/21648630/radius-of-projected-sphere-in-screen-space
// http://stackoverflow.com/questions/3717226/radius-of-projected-sphere
//
//
// to get a ready to use gradient array from a chroma.js gradient:
// http://gka.github.io/chroma.js/
//
// let stops = [];
// for(let i = 0; i <= 10; i++){
//	let range = chroma.scale(['yellow', 'navy']).mode('lch').domain([10,0])(i)._rgb
//		.slice(0, 3)
//		.map(v => (v / 255).toFixed(4))
//		.join(", ");
//
//	let line = `[${i / 10}, new THREE.Color(${range})],`;
//
//	stops.push(line);
// }
// stops.join("\n");
// to get a ready to use gradient array from matplotlib:
// import matplotlib.pyplot as plt
// import matplotlib.colors as colors
//
// norm = colors.Normalize(vmin=0,vmax=1)
// cmap = plt.cm.viridis
//
// for i in range(0,11):
//    u = i / 10
//    rgb = cmap(norm(u))[0:3]
//    rgb = ["{0:.3f}".format(v) for v in rgb]
//    rgb = "[" + str(u) + ", new THREE.Color(" +  ", ".join(rgb) + ")],"
//    print(rgb)
Potree.Gradients={RAINBOW:[[0,new THREE.Color(0.278,0,0.714)],[1/6,new THREE.Color(0,0,1)],[2/6,new THREE.Color(0,1,1)],[3/6,new THREE.Color(0,1,0)],[4/6,new THREE.Color(1,1,0)],[5/6,new THREE.Color(1,0.64,0)],[1,new THREE.Color(1,0,0)]],// From chroma spectral http://gka.github.io/chroma.js/
    SPECTRAL:[[0,new THREE.Color(0.3686,0.3098,0.6353)],[0.1,new THREE.Color(0.1961,0.5333,0.7412)],[0.2,new THREE.Color(0.4000,0.7608,0.6471)],[0.3,new THREE.Color(0.6706,0.8667,0.6431)],[0.4,new THREE.Color(0.9020,0.9608,0.5961)],[0.5,new THREE.Color(1.0000,1.0000,0.7490)],[0.6,new THREE.Color(0.9961,0.8784,0.5451)],[0.7,new THREE.Color(0.9922,0.6824,0.3804)],[0.8,new THREE.Color(0.9569,0.4275,0.2627)],[0.9,new THREE.Color(0.8353,0.2431,0.3098)],[1,new THREE.Color(0.6196,0.0039,0.2588)]],PLASMA:[[0.0,new THREE.Color(0.241,0.015,0.610)],[0.1,new THREE.Color(0.387,0.001,0.654)],[0.2,new THREE.Color(0.524,0.025,0.653)],[0.3,new THREE.Color(0.651,0.125,0.596)],[0.4,new THREE.Color(0.752,0.227,0.513)],[0.5,new THREE.Color(0.837,0.329,0.431)],[0.6,new THREE.Color(0.907,0.435,0.353)],[0.7,new THREE.Color(0.963,0.554,0.272)],[0.8,new THREE.Color(0.992,0.681,0.195)],[0.9,new THREE.Color(0.987,0.822,0.144)],[1.0,new THREE.Color(0.940,0.975,0.131)]],YELLOW_GREEN:[[0,new THREE.Color(0.1647,0.2824,0.3451)],[0.1,new THREE.Color(0.1338,0.3555,0.4227)],[0.2,new THREE.Color(0.0610,0.4319,0.4864)],[0.3,new THREE.Color(0.0000,0.5099,0.5319)],[0.4,new THREE.Color(0.0000,0.5881,0.5569)],[0.5,new THREE.Color(0.1370,0.6650,0.5614)],[0.6,new THREE.Color(0.2906,0.7395,0.5477)],[0.7,new THREE.Color(0.4453,0.8099,0.5201)],[0.8,new THREE.Color(0.6102,0.8748,0.4850)],[0.9,new THREE.Color(0.7883,0.9323,0.4514)],[1,new THREE.Color(0.9804,0.9804,0.4314)]],VIRIDIS:[[0.0,new THREE.Color(0.267,0.005,0.329)],[0.1,new THREE.Color(0.283,0.141,0.458)],[0.2,new THREE.Color(0.254,0.265,0.530)],[0.3,new THREE.Color(0.207,0.372,0.553)],[0.4,new THREE.Color(0.164,0.471,0.558)],[0.5,new THREE.Color(0.128,0.567,0.551)],[0.6,new THREE.Color(0.135,0.659,0.518)],[0.7,new THREE.Color(0.267,0.749,0.441)],[0.8,new THREE.Color(0.478,0.821,0.318)],[0.9,new THREE.Color(0.741,0.873,0.150)],[1.0,new THREE.Color(0.993,0.906,0.144)]],INFERNO:[[0.0,new THREE.Color(0.077,0.042,0.206)],[0.1,new THREE.Color(0.225,0.036,0.388)],[0.2,new THREE.Color(0.373,0.074,0.432)],[0.3,new THREE.Color(0.522,0.128,0.420)],[0.4,new THREE.Color(0.665,0.182,0.370)],[0.5,new THREE.Color(0.797,0.255,0.287)],[0.6,new THREE.Color(0.902,0.364,0.184)],[0.7,new THREE.Color(0.969,0.516,0.063)],[0.8,new THREE.Color(0.988,0.683,0.072)],[0.9,new THREE.Color(0.961,0.859,0.298)],[1.0,new THREE.Color(0.988,0.998,0.645)]],GRAYSCALE:[[0,new THREE.Color(0,0,0)],[1,new THREE.Color(1,1,1)]]};Potree.Classification={'DEFAULT':{0:new THREE.Vector4(0.5,0.5,0.5,1.0),1:new THREE.Vector4(0.5,0.5,0.5,1.0),2:new THREE.Vector4(0.63,0.32,0.18,1.0),3:new THREE.Vector4(0.0,1.0,0.0,1.0),4:new THREE.Vector4(0.0,0.8,0.0,1.0),5:new THREE.Vector4(0.0,0.6,0.0,1.0),6:new THREE.Vector4(1.0,0.66,0.0,1.0),7:new THREE.Vector4(1.0,0,1.0,1.0),8:new THREE.Vector4(1.0,0,0.0,1.0),9:new THREE.Vector4(0.0,0.0,1.0,1.0),12:new THREE.Vector4(1.0,1.0,0.0,1.0),'DEFAULT':new THREE.Vector4(0.3,0.6,0.6,0.5)}};Potree.PointSizeType={FIXED:0,ATTENUATED:1,ADAPTIVE:2};Potree.PointShape={SQUARE:0,CIRCLE:1,PARABOLOID:2};Potree.PointColorType={RGB:0,COLOR:1,DEPTH:2,HEIGHT:3,ELEVATION:3,INTENSITY:4,INTENSITY_GRADIENT:5,LOD:6,LEVEL_OF_DETAIL:6,POINT_INDEX:7,CLASSIFICATION:8,RETURN_NUMBER:9,SOURCE:10,NORMAL:11,PHONG:12,RGB_HEIGHT:13,COMPOSITE:50};Potree.TreeType={OCTREE:0,KDTREE:1};Potree.PointCloudMaterial=function(_THREE$RawShaderMater){_inherits(PointCloudMaterial,_THREE$RawShaderMater);function PointCloudMaterial(){var parameters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,PointCloudMaterial);var _this8=_possibleConstructorReturn(this,(PointCloudMaterial.__proto__||Object.getPrototypeOf(PointCloudMaterial)).call(this));_this8.visibleNodesTexture=Potree.utils.generateDataTexture(2048,1,new THREE.Color(0xffffff));_this8.visibleNodesTexture.minFilter=THREE.NearestFilter;_this8.visibleNodesTexture.magFilter=THREE.NearestFilter;var getValid=function getValid(a,b){if(a!==undefined){return a;}else{return b;}};var pointSize=getValid(parameters.size,1.0);var minSize=getValid(parameters.minSize,2.0);var maxSize=getValid(parameters.maxSize,50.0);var treeType=getValid(parameters.treeType,Potree.TreeType.OCTREE);_this8._pointSizeType=Potree.PointSizeType.FIXED;_this8._shape=Potree.PointShape.SQUARE;_this8._pointColorType=Potree.PointColorType.RGB;_this8._useClipBox=false;_this8.clipBoxes=[];_this8.numClipBoxes=0;_this8.clipPolygons=[];_this8._weighted=false;_this8._gradient=Potree.Gradients.SPECTRAL;_this8.gradientTexture=Potree.PointCloudMaterial.generateGradientTexture(_this8._gradient);_this8.lights=false;_this8.fog=false;_this8._treeType=treeType;_this8._useEDL=false;_this8._snapEnabled=false;_this8._numSnapshots=0;_this8.defines=new Map();_this8._defaultIntensityRangeChanged=false;_this8._defaultElevationRangeChanged=false;_this8.attributes={position:{type:'fv',value:[]},color:{type:'fv',value:[]},normal:{type:'fv',value:[]},intensity:{type:'f',value:[]},classification:{type:'f',value:[]},returnNumber:{type:'f',value:[]},numberOfReturns:{type:'f',value:[]},pointSourceID:{type:'f',value:[]},indices:{type:'fv',value:[]}};_this8.uniforms={level:{type:"f",value:0.0},vnStart:{type:"f",value:0.0},spacing:{type:"f",value:1.0},blendHardness:{type:"f",value:2.0},blendDepthSupplement:{type:"f",value:0.0},fov:{type:"f",value:1.0},screenWidth:{type:"f",value:1.0},screenHeight:{type:"f",value:1.0},near:{type:"f",value:0.1},far:{type:"f",value:1.0},uColor:{type:"c",value:new THREE.Color(0xffffff)},uOpacity:{type:"f",value:1.0},size:{type:"f",value:pointSize},minSize:{type:"f",value:minSize},maxSize:{type:"f",value:maxSize},octreeSize:{type:"f",value:0},bbSize:{type:"fv",value:[0,0,0]},elevationRange:{type:"2fv",value:[0,0]},clipBoxCount:{type:"f",value:0},clipPolygonCount:{type:"i",value:0},visibleNodes:{type:"t",value:_this8.visibleNodesTexture},pcIndex:{type:"f",value:0},gradient:{type:"t",value:_this8.gradientTexture},classificationLUT:{type:"t",value:_this8.classificationTexture},uHQDepthMap:{type:"t",value:null},clipBoxes:{type:"Matrix4fv",value:[]},clipPolygons:{type:"3fv",value:[]},clipPolygonVCount:{type:"iv",value:[]},clipPolygonVP:{type:"Matrix4fv",value:[]},toModel:{type:"Matrix4f",value:[]},diffuse:{type:"fv",value:[1,1,1]},transition:{type:"f",value:0.5},intensityRange:{type:"fv",value:[0,65000]},intensityGamma:{type:"f",value:1},intensityContrast:{type:"f",value:0},intensityBrightness:{type:"f",value:0},rgbGamma:{type:"f",value:1},rgbContrast:{type:"f",value:0},rgbBrightness:{type:"f",value:0},wRGB:{type:"f",value:1},wIntensity:{type:"f",value:0},wElevation:{type:"f",value:0},wClassification:{type:"f",value:0},wReturnNumber:{type:"f",value:0},wSourceID:{type:"f",value:0},useOrthographicCamera:{type:"b",value:false},clipTask:{type:"i",value:1},clipMethod:{type:"i",value:1},uSnapshot:{type:"tv",value:[]},uSnapshotDepth:{type:"tv",value:[]},uSnapView:{type:"Matrix4fv",value:[]},uSnapProj:{type:"Matrix4fv",value:[]},uSnapProjInv:{type:"Matrix4fv",value:[]},uSnapViewInv:{type:"Matrix4fv",value:[]},uShadowColor:{type:"3fv",value:[0,0,0]}};_this8.classification=Potree.Classification.DEFAULT;_this8.defaultAttributeValues.normal=[0,0,0];_this8.defaultAttributeValues.classification=[0,0,0];_this8.defaultAttributeValues.indices=[0,0,0,0];_this8.vertexShader=_this8.getDefines()+Potree.Shaders['pointcloud.vs'];_this8.fragmentShader=_this8.getDefines()+Potree.Shaders['pointcloud.fs'];_this8.vertexColors=THREE.VertexColors;return _this8;}_createClass(PointCloudMaterial,[{key:'setDefine',value:function setDefine(key,value){if(value!==undefined&&value!==null){if(this.defines.get(key)!==value){this.defines.set(key,value);this.updateShaderSource();}}else{this.removeDefine(key);}}},{key:'removeDefine',value:function removeDefine(key){this.defines.delete(key);}},{key:'updateShaderSource',value:function updateShaderSource(){this.vertexShader=this.getDefines()+Potree.Shaders['pointcloud.vs'];this.fragmentShader=this.getDefines()+Potree.Shaders['pointcloud.fs'];if(this.opacity===1.0){this.blending=THREE.NoBlending;this.transparent=false;this.depthTest=true;this.depthWrite=true;this.depthFunc=THREE.LessEqualDepth;}else if(this.opacity<1.0&&!this.useEDL){this.blending=THREE.AdditiveBlending;this.transparent=true;this.depthTest=false;this.depthWrite=true;this.depthFunc=THREE.AlwaysDepth;}if(this.weighted){this.blending=THREE.AdditiveBlending;this.transparent=true;this.depthTest=true;this.depthWrite=false;}this.needsUpdate=true;}},{key:'getDefines',value:function getDefines(){var defines=[];if(this.pointSizeType===Potree.PointSizeType.FIXED){defines.push('#define fixed_point_size');}else if(this.pointSizeType===Potree.PointSizeType.ATTENUATED){defines.push('#define attenuated_point_size');}else if(this.pointSizeType===Potree.PointSizeType.ADAPTIVE){defines.push('#define adaptive_point_size');}if(this.shape===Potree.PointShape.SQUARE){defines.push('#define square_point_shape');}else if(this.shape===Potree.PointShape.CIRCLE){defines.push('#define circle_point_shape');}else if(this.shape===Potree.PointShape.PARABOLOID){defines.push('#define paraboloid_point_shape');}if(this._useEDL){defines.push('#define use_edl');}if(this._snapEnabled){defines.push('#define snap_enabled');}if(this._pointColorType===Potree.PointColorType.RGB){defines.push('#define color_type_rgb');}else if(this._pointColorType===Potree.PointColorType.COLOR){defines.push('#define color_type_color');}else if(this._pointColorType===Potree.PointColorType.DEPTH){defines.push('#define color_type_depth');}else if(this._pointColorType===Potree.PointColorType.HEIGHT){defines.push('#define color_type_height');}else if(this._pointColorType===Potree.PointColorType.INTENSITY){defines.push('#define color_type_intensity');}else if(this._pointColorType===Potree.PointColorType.INTENSITY_GRADIENT){defines.push('#define color_type_intensity_gradient');}else if(this._pointColorType===Potree.PointColorType.LOD){defines.push('#define color_type_lod');}else if(this._pointColorType===Potree.PointColorType.POINT_INDEX){defines.push('#define color_type_point_index');}else if(this._pointColorType===Potree.PointColorType.CLASSIFICATION){defines.push('#define color_type_classification');}else if(this._pointColorType===Potree.PointColorType.RETURN_NUMBER){defines.push('#define color_type_return_number');}else if(this._pointColorType===Potree.PointColorType.SOURCE){defines.push('#define color_type_source');}else if(this._pointColorType===Potree.PointColorType.NORMAL){defines.push('#define color_type_normal');}else if(this._pointColorType===Potree.PointColorType.PHONG){defines.push('#define color_type_phong');}else if(this._pointColorType===Potree.PointColorType.RGB_HEIGHT){defines.push('#define color_type_rgb_height');}else if(this._pointColorType===Potree.PointColorType.COMPOSITE){defines.push('#define color_type_composite');}if(this._treeType===Potree.TreeType.OCTREE){defines.push('#define tree_type_octree');}else if(this._treeType===Potree.TreeType.KDTREE){defines.push('#define tree_type_kdtree');}if(this.weighted){defines.push('#define weighted_splats');}if(this.numClipBoxes>0){defines.push('#define use_clip_box');}if(this.clipPolygons.length>0){defines.push('#define use_clip_polygon');}var _iteratorNormalCompletion22=true;var _didIteratorError22=false;var _iteratorError22=undefined;try{for(var _iterator22=this.defines[Symbol.iterator](),_step22;!(_iteratorNormalCompletion22=(_step22=_iterator22.next()).done);_iteratorNormalCompletion22=true){var _step22$value=_slicedToArray(_step22.value,2),key=_step22$value[0],value=_step22$value[1];defines.push(value);}}catch(err){_didIteratorError22=true;_iteratorError22=err;}finally{try{if(!_iteratorNormalCompletion22&&_iterator22.return){_iterator22.return();}}finally{if(_didIteratorError22){throw _iteratorError22;}}}return defines.join("\n");}},{key:'setClipBoxes',value:function setClipBoxes(clipBoxes){if(!clipBoxes){return;}this.clipBoxes=clipBoxes;var doUpdate=this.numClipBoxes!==clipBoxes.length&&(clipBoxes.length===0||this.numClipBoxes===0);this.numClipBoxes=clipBoxes.length;this.uniforms.clipBoxCount.value=this.numClipBoxes;if(doUpdate){this.updateShaderSource();}this.uniforms.clipBoxes.value=new Float32Array(this.numClipBoxes*16);for(var _i16=0;_i16<this.numClipBoxes;_i16++){var box=clipBoxes[_i16];this.uniforms.clipBoxes.value.set(box.inverse.elements,16*_i16);}for(var _i17=0;_i17<this.uniforms.clipBoxes.value.length;_i17++){if(Number.isNaN(this.uniforms.clipBoxes.value[_i17])){this.uniforms.clipBoxes.value[_i17]=Infinity;}}}},{key:'setClipPolygons',value:function setClipPolygons(clipPolygons,maxPolygonVertices){if(!clipPolygons){return;}this.clipPolygons=clipPolygons;var doUpdate=this.clipPolygons.length!==clipPolygons.length;if(doUpdate){this.updateShaderSource();}}},{key:'recomputeClassification',value:function recomputeClassification(){this.classificationTexture=Potree.PointCloudMaterial.generateClassificationTexture(this._classification);this.uniforms.classificationLUT.value=this.classificationTexture;this.dispatchEvent({type:'material_property_changed',target:this});}},{key:'disableEvents',value:function disableEvents(){if(this._hiddenListeners===undefined){this._hiddenListeners=this._listeners;this._listeners={};}}},{key:'enableEvents',value:function enableEvents(){this._listeners=this._hiddenListeners;this._hiddenListeners=undefined;}},{key:'copyFrom',value:function copyFrom(from){var _iteratorNormalCompletion23=true;var _didIteratorError23=false;var _iteratorError23=undefined;try{for(var _iterator23=this.uniforms[Symbol.iterator](),_step23;!(_iteratorNormalCompletion23=(_step23=_iterator23.next()).done);_iteratorNormalCompletion23=true){var name=_step23.value;this.uniforms[name].value=from.uniforms[name].value;}}catch(err){_didIteratorError23=true;_iteratorError23=err;}finally{try{if(!_iteratorNormalCompletion23&&_iterator23.return){_iterator23.return();}}finally{if(_didIteratorError23){throw _iteratorError23;}}}}},{key:'gradient',get:function get(){return this._gradient;},set:function set(value){if(this._gradient!==value){this._gradient=value;this.gradientTexture=Potree.PointCloudMaterial.generateGradientTexture(this._gradient);this.uniforms.gradient.value=this.gradientTexture;}}},{key:'useOrthographicCamera',get:function get(){return this.uniforms.useOrthographicCamera.value;},set:function set(value){if(this.uniforms.useOrthographicCamera.value!==value){this.uniforms.useOrthographicCamera.value=value;}}},{key:'classification',get:function get(){return this._classification;},set:function set(value){var copy={};var _iteratorNormalCompletion24=true;var _didIteratorError24=false;var _iteratorError24=undefined;try{for(var _iterator24=Object.keys(value)[Symbol.iterator](),_step24;!(_iteratorNormalCompletion24=(_step24=_iterator24.next()).done);_iteratorNormalCompletion24=true){var _key=_step24.value;copy[_key]=value[_key].clone();}}catch(err){_didIteratorError24=true;_iteratorError24=err;}finally{try{if(!_iteratorNormalCompletion24&&_iterator24.return){_iterator24.return();}}finally{if(_didIteratorError24){throw _iteratorError24;}}}var isEqual=false;if(this._classification===undefined){isEqual=false;}else{isEqual=Object.keys(copy).length===Object.keys(this._classification).length;var _iteratorNormalCompletion25=true;var _didIteratorError25=false;var _iteratorError25=undefined;try{for(var _iterator25=Object.keys(copy)[Symbol.iterator](),_step25;!(_iteratorNormalCompletion25=(_step25=_iterator25.next()).done);_iteratorNormalCompletion25=true){var key=_step25.value;isEqual=isEqual&&this._classification[key]!==undefined;isEqual=isEqual&&copy[key].equals(this._classification[key]);}}catch(err){_didIteratorError25=true;_iteratorError25=err;}finally{try{if(!_iteratorNormalCompletion25&&_iterator25.return){_iterator25.return();}}finally{if(_didIteratorError25){throw _iteratorError25;}}}}if(!isEqual){this._classification=copy;this.recomputeClassification();}}},{key:'numSnapshots',get:function get(){return this._numSnapshots;},set:function set(value){this._numSnapshots=value;}},{key:'snapEnabled',get:function get(){return this._snapEnabled;},set:function set(value){if(this._snapEnabled!==value){this._snapEnabled=value;//this.uniforms.snapEnabled.value = value;
        this.updateShaderSource();}}},{key:'spacing',get:function get(){return this.uniforms.spacing.value;},set:function set(value){if(this.uniforms.spacing.value!==value){this.uniforms.spacing.value=value;}}},{key:'useClipBox',get:function get(){return this._useClipBox;},set:function set(value){if(this._useClipBox!==value){this._useClipBox=value;this.updateShaderSource();}}},{key:'clipTask',get:function get(){return this.uniforms.clipTask.value;},set:function set(mode){this.uniforms.clipTask.value=mode;}},{key:'clipMethod',get:function get(){return this.uniforms.clipMethod.value;},set:function set(mode){this.uniforms.clipMethod.value=mode;}},{key:'weighted',get:function get(){return this._weighted;},set:function set(value){if(this._weighted!==value){this._weighted=value;this.updateShaderSource();}}},{key:'fov',get:function get(){return this.uniforms.fov.value;},set:function set(value){if(this.uniforms.fov.value!==value){this.uniforms.fov.value=value;// this.updateShaderSource();
    }}},{key:'screenWidth',get:function get(){return this.uniforms.screenWidth.value;},set:function set(value){if(this.uniforms.screenWidth.value!==value){this.uniforms.screenWidth.value=value;// this.updateShaderSource();
    }}},{key:'screenHeight',get:function get(){return this.uniforms.screenHeight.value;},set:function set(value){if(this.uniforms.screenHeight.value!==value){this.uniforms.screenHeight.value=value;// this.updateShaderSource();
    }}},{key:'near',get:function get(){return this.uniforms.near.value;},set:function set(value){if(this.uniforms.near.value!==value){this.uniforms.near.value=value;}}},{key:'far',get:function get(){return this.uniforms.far.value;},set:function set(value){if(this.uniforms.far.value!==value){this.uniforms.far.value=value;}}},{key:'opacity',get:function get(){return this.uniforms.uOpacity.value;},set:function set(value){if(this.uniforms&&this.uniforms.uOpacity){if(this.uniforms.uOpacity.value!==value){this.uniforms.uOpacity.value=value;this.updateShaderSource();this.dispatchEvent({type:'opacity_changed',target:this});this.dispatchEvent({type:'material_property_changed',target:this});}}}},{key:'pointColorType',get:function get(){return this._pointColorType;},set:function set(value){if(this._pointColorType!==value){this._pointColorType=value;this.updateShaderSource();this.dispatchEvent({type:'point_color_type_changed',target:this});this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'pointSizeType',get:function get(){return this._pointSizeType;},set:function set(value){if(this._pointSizeType!==value){this._pointSizeType=value;this.updateShaderSource();this.dispatchEvent({type:'point_size_type_changed',target:this});this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'useEDL',get:function get(){return this._useEDL;},set:function set(value){if(this._useEDL!==value){this._useEDL=value;this.updateShaderSource();}}},{key:'color',get:function get(){return this.uniforms.uColor.value;},set:function set(value){if(!this.uniforms.uColor.value.equals(value)){this.uniforms.uColor.value.copy(value);this.dispatchEvent({type:'color_changed',target:this});this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'shape',get:function get(){return this._shape;},set:function set(value){if(this._shape!==value){this._shape=value;this.updateShaderSource();this.dispatchEvent({type:'point_shape_changed',target:this});this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'treeType',get:function get(){return this._treeType;},set:function set(value){if(this._treeType!==value){this._treeType=value;this.updateShaderSource();}}},{key:'bbSize',get:function get(){return this.uniforms.bbSize.value;},set:function set(value){this.uniforms.bbSize.value=value;}},{key:'size',get:function get(){return this.uniforms.size.value;},set:function set(value){if(this.uniforms.size.value!==value){this.uniforms.size.value=value;this.dispatchEvent({type:'point_size_changed',target:this});this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'elevationRange',get:function get(){return this.uniforms.elevationRange.value;},set:function set(value){var changed=this.uniforms.elevationRange.value[0]!==value[0]||this.uniforms.elevationRange.value[1]!==value[1];if(changed){this.uniforms.elevationRange.value=value;this._defaultElevationRangeChanged=true;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'heightMin',get:function get(){return this.uniforms.elevationRange.value[0];},set:function set(value){this.elevationRange=[value,this.elevationRange[1]];}},{key:'heightMax',get:function get(){return this.uniforms.elevationRange.value[1];},set:function set(value){this.elevationRange=[this.elevationRange[0],value];}},{key:'transition',get:function get(){return this.uniforms.transition.value;},set:function set(value){this.uniforms.transition.value=value;}},{key:'intensityRange',get:function get(){return this.uniforms.intensityRange.value;},set:function set(value){if(!(value instanceof Array&&value.length===2)){return;}if(value[0]===this.uniforms.intensityRange.value[0]&&value[1]===this.uniforms.intensityRange.value[1]){return;}this.uniforms.intensityRange.value=value;this._defaultIntensityRangeChanged=true;this.dispatchEvent({type:'material_property_changed',target:this});}},{key:'intensityGamma',get:function get(){return this.uniforms.intensityGamma.value;},set:function set(value){if(this.uniforms.intensityGamma.value!==value){this.uniforms.intensityGamma.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'intensityContrast',get:function get(){return this.uniforms.intensityContrast.value;},set:function set(value){if(this.uniforms.intensityContrast.value!==value){this.uniforms.intensityContrast.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'intensityBrightness',get:function get(){return this.uniforms.intensityBrightness.value;},set:function set(value){if(this.uniforms.intensityBrightness.value!==value){this.uniforms.intensityBrightness.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'rgbGamma',get:function get(){return this.uniforms.rgbGamma.value;},set:function set(value){if(this.uniforms.rgbGamma.value!==value){this.uniforms.rgbGamma.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'rgbContrast',get:function get(){return this.uniforms.rgbContrast.value;},set:function set(value){if(this.uniforms.rgbContrast.value!==value){this.uniforms.rgbContrast.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'rgbBrightness',get:function get(){return this.uniforms.rgbBrightness.value;},set:function set(value){if(this.uniforms.rgbBrightness.value!==value){this.uniforms.rgbBrightness.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'weightRGB',get:function get(){return this.uniforms.wRGB.value;},set:function set(value){if(this.uniforms.wRGB.value!==value){this.uniforms.wRGB.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'weightIntensity',get:function get(){return this.uniforms.wIntensity.value;},set:function set(value){if(this.uniforms.wIntensity.value!==value){this.uniforms.wIntensity.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'weightElevation',get:function get(){return this.uniforms.wElevation.value;},set:function set(value){if(this.uniforms.wElevation.value!==value){this.uniforms.wElevation.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'weightClassification',get:function get(){return this.uniforms.wClassification.value;},set:function set(value){if(this.uniforms.wClassification.value!==value){this.uniforms.wClassification.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'weightReturnNumber',get:function get(){return this.uniforms.wReturnNumber.value;},set:function set(value){if(this.uniforms.wReturnNumber.value!==value){this.uniforms.wReturnNumber.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}},{key:'weightSourceID',get:function get(){return this.uniforms.wSourceID.value;},set:function set(value){if(this.uniforms.wSourceID.value!==value){this.uniforms.wSourceID.value=value;this.dispatchEvent({type:'material_property_changed',target:this});}}}],[{key:'generateGradientTexture',value:function generateGradientTexture(gradient){var size=64;// create canvas
        var canvas=document.createElement('canvas');canvas.width=size;canvas.height=size;// get context
        var context=canvas.getContext('2d');// draw gradient
        context.rect(0,0,size,size);var ctxGradient=context.createLinearGradient(0,0,size,size);for(var _i18=0;_i18<gradient.length;_i18++){var step=gradient[_i18];ctxGradient.addColorStop(step[0],'#'+step[1].getHexString());}context.fillStyle=ctxGradient;context.fill();//let texture = new THREE.Texture(canvas);
        var texture=new THREE.CanvasTexture(canvas);texture.needsUpdate=true;texture.minFilter=THREE.LinearFilter;// textureImage = texture.image;
        return texture;}},{key:'generateClassificationTexture',value:function generateClassificationTexture(classification){var width=256;var height=256;var size=width*height;var data=new Uint8Array(4*size);for(var x=0;x<width;x++){for(var y=0;y<height;y++){var _i19=x+width*y;var color=void 0;if(classification[x]){color=classification[x];}else if(classification[x%32]){color=classification[x%32];}else{color=classification.DEFAULT;}data[4*_i19+0]=255*color.x;data[4*_i19+1]=255*color.y;data[4*_i19+2]=255*color.z;data[4*_i19+3]=255*color.w;}}var texture=new THREE.DataTexture(data,width,height,THREE.RGBAFormat);texture.magFilter=THREE.NearestFilter;texture.needsUpdate=true;return texture;}}]);return PointCloudMaterial;}(THREE.RawShaderMaterial);//
// Algorithm by Christian Boucheny
// shader code taken and adapted from CloudCompare
//
// see
// https://github.com/cloudcompare/trunk/tree/master/plugins/qEDL/shaders/EDL
// http://www.kitware.com/source/home/post/9
// https://tel.archives-ouvertes.fr/tel-00438464/document p. 115+ (french)
Potree.EyeDomeLightingMaterial=function(_THREE$ShaderMaterial){_inherits(EyeDomeLightingMaterial,_THREE$ShaderMaterial);function EyeDomeLightingMaterial(){var parameters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,EyeDomeLightingMaterial);var _this9=_possibleConstructorReturn(this,(EyeDomeLightingMaterial.__proto__||Object.getPrototypeOf(EyeDomeLightingMaterial)).call(this));var uniforms={screenWidth:{type:'f',value:0},screenHeight:{type:'f',value:0},edlStrength:{type:'f',value:1.0},radius:{type:'f',value:1.0},neighbours:{type:'2fv',value:[]},depthMap:{type:'t',value:null},//colorMap: 		{ type: 't', 	value: null },
    uRegularColor:{type:'t',value:null},uRegularDepth:{type:'t',value:null},uEDLColor:{type:'t',value:null},uEDLDepth:{type:'t',value:null},opacity:{type:'f',value:1.0}};_this9.setValues({uniforms:uniforms,vertexShader:_this9.getDefines()+Potree.Shaders['edl.vs'],fragmentShader:_this9.getDefines()+Potree.Shaders['edl.fs'],lights:false});_this9.neighbourCount=8;return _this9;}_createClass(EyeDomeLightingMaterial,[{key:'getDefines',value:function getDefines(){var defines='';defines+='#define NEIGHBOUR_COUNT '+this.neighbourCount+'\n';return defines;}},{key:'updateShaderSource',value:function updateShaderSource(){var vs=this.getDefines()+Potree.Shaders['edl.vs'];var fs=this.getDefines()+Potree.Shaders['edl.fs'];this.setValues({vertexShader:vs,fragmentShader:fs});this.uniforms.neighbours.value=this.neighbours;this.needsUpdate=true;}},{key:'neighbourCount',get:function get(){return this._neighbourCount;},set:function set(value){if(this._neighbourCount!==value){this._neighbourCount=value;this.neighbours=new Float32Array(this._neighbourCount*2);for(var c=0;c<this._neighbourCount;c++){this.neighbours[2*c+0]=Math.cos(2*c*Math.PI/this._neighbourCount);this.neighbours[2*c+1]=Math.sin(2*c*Math.PI/this._neighbourCount);}this.updateShaderSource();}}}]);return EyeDomeLightingMaterial;}(THREE.ShaderMaterial);// see http://john-chapman-graphics.blogspot.co.at/2013/01/ssao-tutorial.html
Potree.BlurMaterial=function(_THREE$ShaderMaterial2){_inherits(BlurMaterial,_THREE$ShaderMaterial2);function BlurMaterial(){var parameters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,BlurMaterial);var _this10=_possibleConstructorReturn(this,(BlurMaterial.__proto__||Object.getPrototypeOf(BlurMaterial)).call(this));var uniforms={near:{type:'f',value:0},far:{type:'f',value:0},screenWidth:{type:'f',value:0},screenHeight:{type:'f',value:0},map:{type:'t',value:null}};_this10.setValues({uniforms:uniforms,vertexShader:Potree.Shaders['blur.vs'],fragmentShader:Potree.Shaders['blur.fs']});return _this10;}return BlurMaterial;}(THREE.ShaderMaterial);Potree.NormalizationMaterial=function(_THREE$RawShaderMater2){_inherits(NormalizationMaterial,_THREE$RawShaderMater2);function NormalizationMaterial(){var parameters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,NormalizationMaterial);var _this11=_possibleConstructorReturn(this,(NormalizationMaterial.__proto__||Object.getPrototypeOf(NormalizationMaterial)).call(this));var uniforms={uDepthMap:{type:'t',value:null},uWeightMap:{type:'t',value:null}};_this11.setValues({uniforms:uniforms,vertexShader:_this11.getDefines()+Potree.Shaders['normalize.vs'],fragmentShader:_this11.getDefines()+Potree.Shaders['normalize.fs']});return _this11;}_createClass(NormalizationMaterial,[{key:'getDefines',value:function getDefines(){var defines='';return defines;}},{key:'updateShaderSource',value:function updateShaderSource(){var vs=this.getDefines()+Potree.Shaders['normalize.vs'];var fs=this.getDefines()+Potree.Shaders['normalize.fs'];this.setValues({vertexShader:vs,fragmentShader:fs});this.needsUpdate=true;}}]);return NormalizationMaterial;}(THREE.RawShaderMaterial);Potree.NormalizationEDLMaterial=function(_THREE$RawShaderMater3){_inherits(NormalizationEDLMaterial,_THREE$RawShaderMater3);function NormalizationEDLMaterial(){var parameters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,NormalizationEDLMaterial);var _this12=_possibleConstructorReturn(this,(NormalizationEDLMaterial.__proto__||Object.getPrototypeOf(NormalizationEDLMaterial)).call(this));var uniforms={screenWidth:{type:'f',value:0},screenHeight:{type:'f',value:0},edlStrength:{type:'f',value:1.0},radius:{type:'f',value:1.0},neighbours:{type:'2fv',value:[]},uEDLMap:{type:'t',value:null},uDepthMap:{type:'t',value:null},uWeightMap:{type:'t',value:null}};_this12.setValues({uniforms:uniforms,vertexShader:_this12.getDefines()+Potree.Shaders['normalize.vs'],fragmentShader:_this12.getDefines()+Potree.Shaders['normalize_and_edl.fs']});_this12.neighbourCount=8;return _this12;}_createClass(NormalizationEDLMaterial,[{key:'getDefines',value:function getDefines(){var defines='';defines+='#define NEIGHBOUR_COUNT '+this.neighbourCount+'\n';return defines;}},{key:'updateShaderSource',value:function updateShaderSource(){var vs=this.getDefines()+Potree.Shaders['normalize.vs'];var fs=this.getDefines()+Potree.Shaders['normalize_and_edl.fs'];this.setValues({vertexShader:vs,fragmentShader:fs});this.uniforms.neighbours.value=this.neighbours;this.needsUpdate=true;}},{key:'neighbourCount',get:function get(){return this._neighbourCount;},set:function set(value){if(this._neighbourCount!==value){this._neighbourCount=value;this.neighbours=new Float32Array(this._neighbourCount*2);for(var c=0;c<this._neighbourCount;c++){this.neighbours[2*c+0]=Math.cos(2*c*Math.PI/this._neighbourCount);this.neighbours[2*c+1]=Math.sin(2*c*Math.PI/this._neighbourCount);}this.updateShaderSource();}}}]);return NormalizationEDLMaterial;}(THREE.RawShaderMaterial);/**
 * @author mschuetz / http://mschuetz.at
 *
 *
 */Potree.InputHandler=function(_THREE$EventDispatche){_inherits(InputHandler,_THREE$EventDispatche);function InputHandler(viewer){_classCallCheck(this,InputHandler);var _this13=_possibleConstructorReturn(this,(InputHandler.__proto__||Object.getPrototypeOf(InputHandler)).call(this));_this13.viewer=viewer;_this13.renderer=viewer.renderer;_this13.domElement=_this13.renderer.domElement;_this13.enabled=true;_this13.scene=null;_this13.interactiveScenes=[];_this13.interactiveObjects=new Set();_this13.inputListeners=[];_this13.blacklist=new Set();_this13.drag=null;_this13.mouse=new THREE.Vector2(0,0);_this13.selection=[];_this13.hoveredElements=[];_this13.pressedKeys={};_this13.wheelDelta=0;_this13.speed=1;_this13.logMessages=false;if(_this13.domElement.tabIndex===-1){_this13.domElement.tabIndex=2222;}_this13.domElement.addEventListener('contextmenu',function(event){event.preventDefault();},false);_this13.domElement.addEventListener('click',_this13.onMouseClick.bind(_this13),false);_this13.domElement.addEventListener('mousedown',_this13.onMouseDown.bind(_this13),false);_this13.domElement.addEventListener('mouseup',_this13.onMouseUp.bind(_this13),false);_this13.domElement.addEventListener('mousemove',_this13.onMouseMove.bind(_this13),false);_this13.domElement.addEventListener('mousewheel',_this13.onMouseWheel.bind(_this13),false);_this13.domElement.addEventListener('DOMMouseScroll',_this13.onMouseWheel.bind(_this13),false);// Firefox
    _this13.domElement.addEventListener('dblclick',_this13.onDoubleClick.bind(_this13));_this13.domElement.addEventListener('keydown',_this13.onKeyDown.bind(_this13));_this13.domElement.addEventListener('keyup',_this13.onKeyUp.bind(_this13));_this13.domElement.addEventListener('touchstart',_this13.onTouchStart.bind(_this13));_this13.domElement.addEventListener('touchend',_this13.onTouchEnd.bind(_this13));_this13.domElement.addEventListener('touchmove',_this13.onTouchMove.bind(_this13));return _this13;}_createClass(InputHandler,[{key:'addInputListener',value:function addInputListener(listener){this.inputListeners.push(listener);}},{key:'removeInputListener',value:function removeInputListener(listener){this.inputListeners=this.inputListeners.filter(function(e){return e!==listener;});}},{key:'getSortedListeners',value:function getSortedListeners(){return this.inputListeners.sort(function(a,b){var ia=a.importance!==undefined?a.importance:0;var ib=b.importance!==undefined?b.importance:0;return ib-ia;});}},{key:'onTouchStart',value:function onTouchStart(e){if(this.logMessages)console.log(this.constructor.name+': onTouchStart');e.preventDefault();if(e.touches.length===1){var rect=this.domElement.getBoundingClientRect();var x=e.touches[0].pageX-rect.left;var y=e.touches[0].pageY-rect.top;this.mouse.set(x,y);this.startDragging(null);}var _iteratorNormalCompletion26=true;var _didIteratorError26=false;var _iteratorError26=undefined;try{for(var _iterator26=this.getSortedListeners()[Symbol.iterator](),_step26;!(_iteratorNormalCompletion26=(_step26=_iterator26.next()).done);_iteratorNormalCompletion26=true){var inputListener=_step26.value;inputListener.dispatchEvent({type:e.type,touches:e.touches,changedTouches:e.changedTouches});}}catch(err){_didIteratorError26=true;_iteratorError26=err;}finally{try{if(!_iteratorNormalCompletion26&&_iterator26.return){_iterator26.return();}}finally{if(_didIteratorError26){throw _iteratorError26;}}}}},{key:'onTouchEnd',value:function onTouchEnd(e){if(this.logMessages)console.log(this.constructor.name+': onTouchEnd');e.preventDefault();var _iteratorNormalCompletion27=true;var _didIteratorError27=false;var _iteratorError27=undefined;try{for(var _iterator27=this.getSortedListeners()[Symbol.iterator](),_step27;!(_iteratorNormalCompletion27=(_step27=_iterator27.next()).done);_iteratorNormalCompletion27=true){var inputListener=_step27.value;inputListener.dispatchEvent({type:'drop',drag:this.drag,viewer:this.viewer});}}catch(err){_didIteratorError27=true;_iteratorError27=err;}finally{try{if(!_iteratorNormalCompletion27&&_iterator27.return){_iterator27.return();}}finally{if(_didIteratorError27){throw _iteratorError27;}}}this.drag=null;var _iteratorNormalCompletion28=true;var _didIteratorError28=false;var _iteratorError28=undefined;try{for(var _iterator28=this.getSortedListeners()[Symbol.iterator](),_step28;!(_iteratorNormalCompletion28=(_step28=_iterator28.next()).done);_iteratorNormalCompletion28=true){var _inputListener=_step28.value;_inputListener.dispatchEvent({type:e.type,touches:e.touches,changedTouches:e.changedTouches});}}catch(err){_didIteratorError28=true;_iteratorError28=err;}finally{try{if(!_iteratorNormalCompletion28&&_iterator28.return){_iterator28.return();}}finally{if(_didIteratorError28){throw _iteratorError28;}}}}},{key:'onTouchMove',value:function onTouchMove(e){if(this.logMessages)console.log(this.constructor.name+': onTouchMove');e.preventDefault();if(e.touches.length===1){var rect=this.domElement.getBoundingClientRect();var x=e.touches[0].pageX-rect.left;var y=e.touches[0].pageY-rect.top;this.mouse.set(x,y);if(this.drag){this.drag.mouse=1;this.drag.lastDrag.x=x-this.drag.end.x;this.drag.lastDrag.y=y-this.drag.end.y;this.drag.end.set(x,y);if(this.logMessages)console.log(this.constructor.name+': drag: ');var _iteratorNormalCompletion29=true;var _didIteratorError29=false;var _iteratorError29=undefined;try{for(var _iterator29=this.getSortedListeners()[Symbol.iterator](),_step29;!(_iteratorNormalCompletion29=(_step29=_iterator29.next()).done);_iteratorNormalCompletion29=true){var inputListener=_step29.value;inputListener.dispatchEvent({type:'drag',drag:this.drag,viewer:this.viewer});}}catch(err){_didIteratorError29=true;_iteratorError29=err;}finally{try{if(!_iteratorNormalCompletion29&&_iterator29.return){_iterator29.return();}}finally{if(_didIteratorError29){throw _iteratorError29;}}}}}var _iteratorNormalCompletion30=true;var _didIteratorError30=false;var _iteratorError30=undefined;try{for(var _iterator30=this.getSortedListeners()[Symbol.iterator](),_step30;!(_iteratorNormalCompletion30=(_step30=_iterator30.next()).done);_iteratorNormalCompletion30=true){var _inputListener2=_step30.value;_inputListener2.dispatchEvent({type:e.type,touches:e.touches,changedTouches:e.changedTouches});}// DEBUG CODE
// let debugTouches = [...e.touches, {
//	pageX: this.domElement.clientWidth / 2,
//	pageY: this.domElement.clientHeight / 2}];
// for(let inputListener of this.getSortedListeners()){
//	inputListener.dispatchEvent({
//		type: e.type,
//		touches: debugTouches,
//		changedTouches: e.changedTouches
//	});
// }
    }catch(err){_didIteratorError30=true;_iteratorError30=err;}finally{try{if(!_iteratorNormalCompletion30&&_iterator30.return){_iterator30.return();}}finally{if(_didIteratorError30){throw _iteratorError30;}}}}},{key:'onKeyDown',value:function onKeyDown(e){if(this.logMessages)console.log(this.constructor.name+': onKeyDown');// DELETE
        if(e.keyCode===Potree.KeyCodes.DELETE&&this.selection.length>0){this.dispatchEvent({type:'delete',selection:this.selection});this.deselectAll();}this.dispatchEvent({type:'keydown',keyCode:e.keyCode,event:e});// for(let l of this.getSortedListeners()){
//	l.dispatchEvent({
//		type: "keydown",
//		keyCode: e.keyCode,
//		event: e
//	});
// }
        this.pressedKeys[e.keyCode]=true;// e.preventDefault();
    }},{key:'onKeyUp',value:function onKeyUp(e){if(this.logMessages)console.log(this.constructor.name+': onKeyUp');delete this.pressedKeys[e.keyCode];e.preventDefault();}},{key:'onDoubleClick',value:function onDoubleClick(e){if(this.logMessages)console.log(this.constructor.name+': onDoubleClick');var consumed=false;var _iteratorNormalCompletion31=true;var _didIteratorError31=false;var _iteratorError31=undefined;try{for(var _iterator31=this.hoveredElements[Symbol.iterator](),_step31;!(_iteratorNormalCompletion31=(_step31=_iterator31.next()).done);_iteratorNormalCompletion31=true){var hovered=_step31.value;if(hovered._listeners&&hovered._listeners['dblclick']){hovered.object.dispatchEvent({type:'dblclick',mouse:this.mouse,object:hovered.object});consumed=true;break;}}}catch(err){_didIteratorError31=true;_iteratorError31=err;}finally{try{if(!_iteratorNormalCompletion31&&_iterator31.return){_iterator31.return();}}finally{if(_didIteratorError31){throw _iteratorError31;}}}if(!consumed){var _iteratorNormalCompletion32=true;var _didIteratorError32=false;var _iteratorError32=undefined;try{for(var _iterator32=this.getSortedListeners()[Symbol.iterator](),_step32;!(_iteratorNormalCompletion32=(_step32=_iterator32.next()).done);_iteratorNormalCompletion32=true){var inputListener=_step32.value;inputListener.dispatchEvent({type:'dblclick',mouse:this.mouse,object:null});}}catch(err){_didIteratorError32=true;_iteratorError32=err;}finally{try{if(!_iteratorNormalCompletion32&&_iterator32.return){_iterator32.return();}}finally{if(_didIteratorError32){throw _iteratorError32;}}}}e.preventDefault();}},{key:'onMouseClick',value:function onMouseClick(e){if(this.logMessages)console.log(this.constructor.name+': onMouseClick');e.preventDefault();}},{key:'onMouseDown',value:function onMouseDown(e){if(this.logMessages)console.log(this.constructor.name+': onMouseDown');e.preventDefault();var consumed=false;var consume=function consume(){return consumed=true;};if(this.hoveredElements.length===0){var _iteratorNormalCompletion33=true;var _didIteratorError33=false;var _iteratorError33=undefined;try{for(var _iterator33=this.getSortedListeners()[Symbol.iterator](),_step33;!(_iteratorNormalCompletion33=(_step33=_iterator33.next()).done);_iteratorNormalCompletion33=true){var inputListener=_step33.value;inputListener.dispatchEvent({type:'mousedown',viewer:this.viewer,mouse:this.mouse});}}catch(err){_didIteratorError33=true;_iteratorError33=err;}finally{try{if(!_iteratorNormalCompletion33&&_iterator33.return){_iterator33.return();}}finally{if(_didIteratorError33){throw _iteratorError33;}}}}else{var _iteratorNormalCompletion34=true;var _didIteratorError34=false;var _iteratorError34=undefined;try{for(var _iterator34=this.hoveredElements[Symbol.iterator](),_step34;!(_iteratorNormalCompletion34=(_step34=_iterator34.next()).done);_iteratorNormalCompletion34=true){var hovered=_step34.value;var object=hovered.object;object.dispatchEvent({type:'mousedown',viewer:this.viewer,consume:consume});if(consumed){break;}}}catch(err){_didIteratorError34=true;_iteratorError34=err;}finally{try{if(!_iteratorNormalCompletion34&&_iterator34.return){_iterator34.return();}}finally{if(_didIteratorError34){throw _iteratorError34;}}}}if(!this.drag){var target=this.hoveredElements.find(function(el){return el.object._listeners&&el.object._listeners['drag']&&el.object._listeners['drag'].length>0;});if(target){this.startDragging(target.object,{location:target.point});}else{this.startDragging(null);}}if(this.scene){this.viewStart=this.scene.view.clone();}}},{key:'onMouseUp',value:function onMouseUp(e){var _this14=this;if(this.logMessages)console.log(this.constructor.name+': onMouseUp');e.preventDefault();var noMovement=this.getNormalizedDrag().length()===0;var consumed=false;var consume=function consume(){return consumed=true;};if(this.hoveredElements.length===0){var _iteratorNormalCompletion35=true;var _didIteratorError35=false;var _iteratorError35=undefined;try{for(var _iterator35=this.getSortedListeners()[Symbol.iterator](),_step35;!(_iteratorNormalCompletion35=(_step35=_iterator35.next()).done);_iteratorNormalCompletion35=true){var inputListener=_step35.value;inputListener.dispatchEvent({type:'mouseup',viewer:this.viewer,mouse:this.mouse,consume:consume});if(consumed){break;}}}catch(err){_didIteratorError35=true;_iteratorError35=err;}finally{try{if(!_iteratorNormalCompletion35&&_iterator35.return){_iterator35.return();}}finally{if(_didIteratorError35){throw _iteratorError35;}}}}else{var hovered=this.hoveredElements.map(function(e){return e.object;}).find(function(e){return e._listeners&&e._listeners['mouseup'];});if(hovered){hovered.dispatchEvent({type:'mouseup',viewer:this.viewer,consume:consume});}}if(this.drag){if(this.drag.object){if(this.logMessages)console.log(this.constructor.name+': drop '+this.drag.object.name);this.drag.object.dispatchEvent({type:'drop',drag:this.drag,viewer:this.viewer});}else{var _iteratorNormalCompletion36=true;var _didIteratorError36=false;var _iteratorError36=undefined;try{for(var _iterator36=this.getSortedListeners()[Symbol.iterator](),_step36;!(_iteratorNormalCompletion36=(_step36=_iterator36.next()).done);_iteratorNormalCompletion36=true){var _inputListener3=_step36.value;_inputListener3.dispatchEvent({type:'drop',drag:this.drag,viewer:this.viewer});}}catch(err){_didIteratorError36=true;_iteratorError36=err;}finally{try{if(!_iteratorNormalCompletion36&&_iterator36.return){_iterator36.return();}}finally{if(_didIteratorError36){throw _iteratorError36;}}}}// check for a click
        var clicked=this.hoveredElements.map(function(h){return h.object;}).find(function(v){return v===_this14.drag.object;})!==undefined;if(clicked){if(this.logMessages)console.log(this.constructor.name+': click '+this.drag.object.name);this.drag.object.dispatchEvent({type:'click',viewer:this.viewer,consume:consume});}this.drag=null;}if(!consumed){if(e.button===THREE.MOUSE.LEFT){if(noMovement){var selectable=this.hoveredElements.find(function(el){return el.object._listeners&&el.object._listeners['select'];});if(selectable){selectable=selectable.object;if(this.isSelected(selectable)){this.selection.filter(function(e){return e!==selectable;}).forEach(function(e){return _this14.toggleSelection(e);});}else{this.deselectAll();this.toggleSelection(selectable);}}else{this.deselectAll();}}}else if(e.button===THREE.MOUSE.RIGHT&&noMovement){this.deselectAll();}}}},{key:'onMouseMove',value:function onMouseMove(e){e.preventDefault();var rect=this.domElement.getBoundingClientRect();var x=e.clientX-rect.left;var y=e.clientY-rect.top;this.mouse.set(x,y);var hoveredElements=this.getHoveredElements();if(hoveredElements.length>0){var names=hoveredElements.map(function(h){return h.object.name;}).join(", ");if(this.logMessages)console.log(this.constructor.name+': onMouseMove; hovered: \''+names+'\'');}if(this.drag){this.drag.mouse=e.buttons;this.drag.lastDrag.x=x-this.drag.end.x;this.drag.lastDrag.y=y-this.drag.end.y;this.drag.end.set(x,y);if(this.drag.object){if(this.logMessages)console.log(this.constructor.name+': drag: '+this.drag.object.name);this.drag.object.dispatchEvent({type:'drag',drag:this.drag,viewer:this.viewer});}else{if(this.logMessages)console.log(this.constructor.name+': drag: ');var dragConsumed=false;var _iteratorNormalCompletion37=true;var _didIteratorError37=false;var _iteratorError37=undefined;try{for(var _iterator37=this.getSortedListeners()[Symbol.iterator](),_step37;!(_iteratorNormalCompletion37=(_step37=_iterator37.next()).done);_iteratorNormalCompletion37=true){var inputListener=_step37.value;inputListener.dispatchEvent({type:'drag',drag:this.drag,viewer:this.viewer,consume:function consume(){dragConsumed=true;}});if(dragConsumed){break;}}}catch(err){_didIteratorError37=true;_iteratorError37=err;}finally{try{if(!_iteratorNormalCompletion37&&_iterator37.return){_iterator37.return();}}finally{if(_didIteratorError37){throw _iteratorError37;}}}}}else{var curr=hoveredElements.map(function(a){return a.object;}).find(function(a){return true;});var prev=this.hoveredElements.map(function(a){return a.object;}).find(function(a){return true;});if(curr!==prev){if(curr){if(this.logMessages)console.log(this.constructor.name+': mouseover: '+curr.name);curr.dispatchEvent({type:'mouseover',object:curr});}if(prev){if(this.logMessages)console.log(this.constructor.name+': mouseleave: '+prev.name);prev.dispatchEvent({type:'mouseleave',object:prev});}}if(hoveredElements.length>0){var object=hoveredElements.map(function(e){return e.object;}).find(function(e){return e._listeners&&e._listeners['mousemove'];});if(object){object.dispatchEvent({type:'mousemove',object:object});}}}this.hoveredElements=hoveredElements;}},{key:'onMouseWheel',value:function onMouseWheel(e){if(!this.enabled)return;if(this.logMessages)console.log(this.constructor.name+": onMouseWheel");e.preventDefault();var delta=0;if(e.wheelDelta!==undefined){// WebKit / Opera / Explorer 9
        delta=e.wheelDelta;}else if(e.detail!==undefined){// Firefox
        delta=-e.detail;}var ndelta=Math.sign(delta);// this.wheelDelta += Math.sign(delta);
        if(this.hoveredElement){this.hoveredElement.object.dispatchEvent({type:'mousewheel',delta:ndelta,object:this.hoveredElement.object});}else{var _iteratorNormalCompletion38=true;var _didIteratorError38=false;var _iteratorError38=undefined;try{for(var _iterator38=this.getSortedListeners()[Symbol.iterator](),_step38;!(_iteratorNormalCompletion38=(_step38=_iterator38.next()).done);_iteratorNormalCompletion38=true){var inputListener=_step38.value;inputListener.dispatchEvent({type:'mousewheel',delta:ndelta,object:null});}}catch(err){_didIteratorError38=true;_iteratorError38=err;}finally{try{if(!_iteratorNormalCompletion38&&_iterator38.return){_iterator38.return();}}finally{if(_didIteratorError38){throw _iteratorError38;}}}}}},{key:'startDragging',value:function startDragging(object){var args=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var name=object?object.name:"no name";if(this.logMessages)console.log(this.constructor.name+': startDragging: \''+name+'\'');this.drag={start:this.mouse.clone(),end:this.mouse.clone(),lastDrag:new THREE.Vector2(0,0),startView:this.scene.view.clone(),object:object};if(args){var _iteratorNormalCompletion39=true;var _didIteratorError39=false;var _iteratorError39=undefined;try{for(var _iterator39=Object.keys(args)[Symbol.iterator](),_step39;!(_iteratorNormalCompletion39=(_step39=_iterator39.next()).done);_iteratorNormalCompletion39=true){var key=_step39.value;this.drag[key]=args[key];}}catch(err){_didIteratorError39=true;_iteratorError39=err;}finally{try{if(!_iteratorNormalCompletion39&&_iterator39.return){_iterator39.return();}}finally{if(_didIteratorError39){throw _iteratorError39;}}}}}},{key:'getMousePointCloudIntersection',value:function getMousePointCloudIntersection(mouse){return Potree.utils.getMousePointCloudIntersection(this.mouse,this.scene.getActiveCamera(),this.viewer,this.scene.pointclouds);}},{key:'toggleSelection',value:function toggleSelection(object){var oldSelection=this.selection;var index=this.selection.indexOf(object);if(index===-1){this.selection.push(object);object.dispatchEvent({type:'select'});}else{this.selection.splice(index,1);object.dispatchEvent({type:'deselect'});}this.dispatchEvent({type:'selection_changed',oldSelection:oldSelection,selection:this.selection});}},{key:'deselect',value:function deselect(object){var oldSelection=this.selection;var index=this.selection.indexOf(object);if(index>=0){this.selection.splice(index,1);object.dispatchEvent({type:'deselect'});this.dispatchEvent({type:'selection_changed',oldSelection:oldSelection,selection:this.selection});}}},{key:'deselectAll',value:function deselectAll(){var _iteratorNormalCompletion40=true;var _didIteratorError40=false;var _iteratorError40=undefined;try{for(var _iterator40=this.selection[Symbol.iterator](),_step40;!(_iteratorNormalCompletion40=(_step40=_iterator40.next()).done);_iteratorNormalCompletion40=true){var object=_step40.value;object.dispatchEvent({type:'deselect'});}}catch(err){_didIteratorError40=true;_iteratorError40=err;}finally{try{if(!_iteratorNormalCompletion40&&_iterator40.return){_iterator40.return();}}finally{if(_didIteratorError40){throw _iteratorError40;}}}var oldSelection=this.selection;if(this.selection.length>0){this.selection=[];this.dispatchEvent({type:'selection_changed',oldSelection:oldSelection,selection:this.selection});}}},{key:'isSelected',value:function isSelected(object){var index=this.selection.indexOf(object);return index!==-1;}},{key:'registerInteractiveObject',value:function registerInteractiveObject(object){this.interactiveObjects.add(object);}},{key:'removeInteractiveObject',value:function removeInteractiveObject(object){this.interactiveObjects.delete(object);}},{key:'registerInteractiveScene',value:function registerInteractiveScene(scene){var index=this.interactiveScenes.indexOf(scene);if(index===-1){this.interactiveScenes.push(scene);}}},{key:'unregisterInteractiveScene',value:function unregisterInteractiveScene(scene){var index=this.interactiveScenes.indexOf(scene);if(index>-1){this.interactiveScenes.splice(index,1);}}},{key:'getHoveredElement',value:function getHoveredElement(){var hoveredElements=this.getHoveredElements();if(hoveredElements.length>0){return hoveredElements[0];}else{return null;}}},{key:'getHoveredElements',value:function getHoveredElements(){var _this15=this;var scenes=this.interactiveScenes.concat(this.scene.scene);var interactableListeners=['mouseup','mousemove','mouseover','mouseleave','drag','drop','click','select','deselect'];var interactables=[];var _iteratorNormalCompletion41=true;var _didIteratorError41=false;var _iteratorError41=undefined;try{for(var _iterator41=scenes[Symbol.iterator](),_step41;!(_iteratorNormalCompletion41=(_step41=_iterator41.next()).done);_iteratorNormalCompletion41=true){var scene=_step41.value;scene.traverseVisible(function(node){if(node._listeners&&node.visible&&!_this15.blacklist.has(node)){var hasInteractableListener=interactableListeners.filter(function(e){return node._listeners[e]!==undefined;}).length>0;if(hasInteractableListener){interactables.push(node);}}});}}catch(err){_didIteratorError41=true;_iteratorError41=err;}finally{try{if(!_iteratorNormalCompletion41&&_iterator41.return){_iterator41.return();}}finally{if(_didIteratorError41){throw _iteratorError41;}}}var camera=this.scene.getActiveCamera();var ray=Potree.utils.mouseToRay(this.mouse,camera,this.domElement.clientWidth,this.domElement.clientHeight);var raycaster=new THREE.Raycaster();raycaster.ray.set(ray.origin,ray.direction);raycaster.linePrecision=0.2;var intersections=raycaster.intersectObjects(interactables.filter(function(o){return o.visible;}),false);return intersections;// if(intersections.length > 0){
//	return intersections[0];
// }else{
//	return null;
// }
    }},{key:'setScene',value:function setScene(scene){this.deselectAll();this.scene=scene;}},{key:'update',value:function update(delta){}},{key:'getNormalizedDrag',value:function getNormalizedDrag(){if(!this.drag){return new THREE.Vector2(0,0);}var diff=new THREE.Vector2().subVectors(this.drag.end,this.drag.start);diff.x=diff.x/this.domElement.clientWidth;diff.y=diff.y/this.domElement.clientHeight;return diff;}},{key:'getNormalizedLastDrag',value:function getNormalizedLastDrag(){if(!this.drag){return new THREE.Vector2(0,0);}var lastDrag=this.drag.lastDrag.clone();lastDrag.x=lastDrag.x/this.domElement.clientWidth;lastDrag.y=lastDrag.y/this.domElement.clientHeight;return lastDrag;}}]);return InputHandler;}(THREE.EventDispatcher);/**
 * @author mschuetz / http://mschuetz.at
 *
 * adapted from THREE.OrbitControls by
 *
 * @author qiao / https://github.com/qiao
 * @author mrdoob / http://mrdoob.com
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author erich666 / http://erichaines.com
 *
 *
 *
 */Potree.FirstPersonControls=function(_THREE$EventDispatche2){_inherits(FirstPersonControls,_THREE$EventDispatche2);function FirstPersonControls(viewer){_classCallCheck(this,FirstPersonControls);var _this16=_possibleConstructorReturn(this,(FirstPersonControls.__proto__||Object.getPrototypeOf(FirstPersonControls)).call(this));_this16.viewer=viewer;_this16.renderer=viewer.renderer;_this16.scene=null;_this16.sceneControls=new THREE.Scene();_this16.rotationSpeed=200;_this16.moveSpeed=10;_this16.lockElevation=false;_this16.keys={FORWARD:['W'.charCodeAt(0),38],BACKWARD:['S'.charCodeAt(0),40],LEFT:['A'.charCodeAt(0),37],RIGHT:['D'.charCodeAt(0),39],UP:['R'.charCodeAt(0),33],DOWN:['F'.charCodeAt(0),34]};_this16.fadeFactor=50;_this16.yawDelta=0;_this16.pitchDelta=0;_this16.translationDelta=new THREE.Vector3(0,0,0);_this16.translationWorldDelta=new THREE.Vector3(0,0,0);_this16.tweens=[];var drag=function drag(e){if(e.drag.object!==null){return;}if(e.drag.startHandled===undefined){e.drag.startHandled=true;_this16.dispatchEvent({type:'start'});}var moveSpeed=_this16.viewer.getMoveSpeed();var ndrag={x:e.drag.lastDrag.x/_this16.renderer.domElement.clientWidth,y:e.drag.lastDrag.y/_this16.renderer.domElement.clientHeight};if(e.drag.mouse===Potree.MOUSE.LEFT){_this16.yawDelta+=ndrag.x*_this16.rotationSpeed;_this16.pitchDelta+=ndrag.y*_this16.rotationSpeed;}else if(e.drag.mouse===Potree.MOUSE.RIGHT){_this16.translationDelta.x-=ndrag.x*moveSpeed*100;_this16.translationDelta.z+=ndrag.y*moveSpeed*100;}};var drop=function drop(e){_this16.dispatchEvent({type:'end'});};var scroll=function scroll(e){var speed=_this16.viewer.getMoveSpeed();if(e.delta<0){speed=speed*0.9;}else if(e.delta>0){speed=speed/0.9;}speed=Math.max(speed,0.1);_this16.viewer.setMoveSpeed(speed);};var dblclick=function dblclick(e){_this16.zoomToLocation(e.mouse);};_this16.addEventListener('drag',drag);_this16.addEventListener('drop',drop);_this16.addEventListener('mousewheel',scroll);_this16.addEventListener('dblclick',dblclick);return _this16;}_createClass(FirstPersonControls,[{key:'setScene',value:function setScene(scene){this.scene=scene;}},{key:'stop',value:function stop(){this.yawDelta=0;this.pitchDelta=0;this.translationDelta.set(0,0,0);}},{key:'zoomToLocation',value:function zoomToLocation(mouse){var _this17=this;var camera=this.scene.getActiveCamera();var I=Potree.utils.getMousePointCloudIntersection(mouse,camera,this.viewer,this.scene.pointclouds);if(I===null){return;}var targetRadius=0;{var minimumJumpDistance=0.2;var domElement=this.renderer.domElement;var ray=Potree.utils.mouseToRay(mouse,camera,domElement.clientWidth,domElement.clientHeight);var nodes=I.pointcloud.nodesOnRay(I.pointcloud.visibleNodes,ray);var lastNode=nodes[nodes.length-1];var radius=lastNode.getBoundingSphere().radius;targetRadius=Math.min(this.scene.view.radius,radius);targetRadius=Math.max(minimumJumpDistance,targetRadius);}var d=this.scene.view.direction.multiplyScalar(-1);var cameraTargetPosition=new THREE.Vector3().addVectors(I.location,d.multiplyScalar(targetRadius));// TODO Unused: let controlsTargetPosition = I.location;
        var animationDuration=600;var easing=TWEEN.Easing.Quartic.Out;{// animate
            var value={x:0};var tween=new TWEEN.Tween(value).to({x:1},animationDuration);tween.easing(easing);this.tweens.push(tween);var startPos=this.scene.view.position.clone();var targetPos=cameraTargetPosition.clone();var startRadius=this.scene.view.radius;var _targetRadius=cameraTargetPosition.distanceTo(I.location);tween.onUpdate(function(){var t=value.x;_this17.scene.view.position.x=(1-t)*startPos.x+t*targetPos.x;_this17.scene.view.position.y=(1-t)*startPos.y+t*targetPos.y;_this17.scene.view.position.z=(1-t)*startPos.z+t*targetPos.z;_this17.scene.view.radius=(1-t)*startRadius+t*_targetRadius;_this17.viewer.setMoveSpeed(_this17.scene.view.radius/2.5);});tween.onComplete(function(){_this17.tweens=_this17.tweens.filter(function(e){return e!==tween;});});tween.start();}}},{key:'update',value:function update(delta){var view=this.scene.view;{// cancel move animations on user input
        var changes=[this.yawDelta,this.pitchDelta,this.translationDelta.length(),this.translationWorldDelta.length()];var changeHappens=changes.some(function(e){return Math.abs(e)>0.001;});if(changeHappens&&this.tweens.length>0){this.tweens.forEach(function(e){return e.stop();});this.tweens=[];}}{// accelerate while input is given
        var ih=this.viewer.inputHandler;var moveForward=this.keys.FORWARD.some(function(e){return ih.pressedKeys[e];});var moveBackward=this.keys.BACKWARD.some(function(e){return ih.pressedKeys[e];});var moveLeft=this.keys.LEFT.some(function(e){return ih.pressedKeys[e];});var moveRight=this.keys.RIGHT.some(function(e){return ih.pressedKeys[e];});var moveUp=this.keys.UP.some(function(e){return ih.pressedKeys[e];});var moveDown=this.keys.DOWN.some(function(e){return ih.pressedKeys[e];});if(this.lockElevation){var dir=view.direction;dir.z=0;dir.normalize();if(moveForward&&moveBackward){this.translationWorldDelta.set(0,0,0);}else if(moveForward){this.translationWorldDelta.copy(dir.multiplyScalar(this.viewer.getMoveSpeed()));}else if(moveBackward){this.translationWorldDelta.copy(dir.multiplyScalar(-this.viewer.getMoveSpeed()));}}else{if(moveForward&&moveBackward){this.translationDelta.y=0;}else if(moveForward){this.translationDelta.y=this.viewer.getMoveSpeed();}else if(moveBackward){this.translationDelta.y=-this.viewer.getMoveSpeed();}}if(moveLeft&&moveRight){this.translationDelta.x=0;}else if(moveLeft){this.translationDelta.x=-this.viewer.getMoveSpeed();}else if(moveRight){this.translationDelta.x=this.viewer.getMoveSpeed();}if(moveUp&&moveDown){this.translationWorldDelta.z=0;}else if(moveUp){this.translationWorldDelta.z=this.viewer.getMoveSpeed();}else if(moveDown){this.translationWorldDelta.z=-this.viewer.getMoveSpeed();}}{// apply rotation
        var yaw=view.yaw;var pitch=view.pitch;yaw-=this.yawDelta*delta;pitch-=this.pitchDelta*delta;view.yaw=yaw;view.pitch=pitch;}{// apply translation
        view.translate(this.translationDelta.x*delta,this.translationDelta.y*delta,this.translationDelta.z*delta);view.translateWorld(this.translationWorldDelta.x*delta,this.translationWorldDelta.y*delta,this.translationWorldDelta.z*delta);}{// set view target according to speed
        view.radius=3*this.viewer.getMoveSpeed();}{// decelerate over time
        var attenuation=Math.max(0,1-this.fadeFactor*delta);this.yawDelta*=attenuation;this.pitchDelta*=attenuation;this.translationDelta.multiplyScalar(attenuation);this.translationWorldDelta.multiplyScalar(attenuation);}}}]);return FirstPersonControls;}(THREE.EventDispatcher);/**
 * @author mschuetz / http://mschuetz.at
 *
 * adapted from THREE.OrbitControls by
 *
 * @author qiao / https://github.com/qiao
 * @author mrdoob / http://mrdoob.com
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author erich666 / http://erichaines.com
 *
 * This set of controls performs first person navigation without mouse lock.
 * Instead, rotating the camera is done by dragging with the left mouse button.
 *
 * move: a/s/d/w or up/down/left/right
 * rotate: left mouse
 * pan: right mouse
 * change speed: mouse wheel
 *
 *
 */Potree.GeoControls=function(_THREE$EventDispatche3){_inherits(GeoControls,_THREE$EventDispatche3);function GeoControls(object,domElement){_classCallCheck(this,GeoControls);var _this18=_possibleConstructorReturn(this,(GeoControls.__proto__||Object.getPrototypeOf(GeoControls)).call(this));console.log("deprecated?");_this18.object=object;_this18.domElement=domElement!==undefined?domElement:document;// Set to false to disable this control
    _this18.enabled=true;// Set this to a THREE.SplineCurve3 instance
    _this18.track=null;// position on track in intervall [0,1]
    _this18.trackPos=0;_this18.rotateSpeed=1.0;_this18.moveSpeed=10.0;_this18.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40,A:'A'.charCodeAt(0),S:'S'.charCodeAt(0),D:'D'.charCodeAt(0),W:'W'.charCodeAt(0),Q:'Q'.charCodeAt(0),E:'E'.charCodeAt(0),R:'R'.charCodeAt(0),F:'F'.charCodeAt(0)};var rotateStart=new THREE.Vector2();var rotateEnd=new THREE.Vector2();var rotateDelta=new THREE.Vector2();var panStart=new THREE.Vector2();var panEnd=new THREE.Vector2();var panDelta=new THREE.Vector2();var panOffset=new THREE.Vector3();// TODO Unused: let offset = new THREE.Vector3();
    var phiDelta=0;var thetaDelta=0;var pan=new THREE.Vector3();_this18.shiftDown=false;var lastPosition=new THREE.Vector3();var STATE={NONE:-1,ROTATE:0,SPEEDCHANGE:1,PAN:2};var state=STATE.NONE;// for reset
    _this18.position0=_this18.object.position.clone();// events
    var changeEvent={type:'change'};var startEvent={type:'start'};var endEvent={type:'end'};_this18.domElement.addEventListener('contextmenu',function(event){event.preventDefault();},false);_this18.domElement.addEventListener('mousedown',_this18.onMouseDown.bind(_this18),false);_this18.domElement.addEventListener('mousewheel',_this18.onMouseWheel.bind(_this18),false);_this18.domElement.addEventListener('DOMMouseScroll',_this18.onMouseWheel.bind(_this18),false);// firefox
    _this18.domElement.addEventListener('mousemove',_this18.onMouseMove.bind(_this18),false);_this18.domElement.addEventListener('mouseup',_this18.onMouseUp.bind(_this18),false);if(_this18.domElement.tabIndex===-1){_this18.domElement.tabIndex=2222;}_this18.domElement.addEventListener('keydown',_this18.onKeyDown.bind(_this18),false);_this18.domElement.addEventListener('keyup',_this18.onKeyUp.bind(_this18),false);return _this18;}_createClass(GeoControls,[{key:'setTrack',value:function setTrack(track){if(this.track!==track){this.track=track;this.trackPos=null;}}},{key:'setTrackPos',value:function setTrackPos(trackPos,_preserveRelativeRotation){// TODO Unused: let preserveRelativeRotation = _preserveRelativeRotation || false;
        var newTrackPos=Math.max(0,Math.min(1,trackPos));var oldTrackPos=this.trackPos||newTrackPos;var newTangent=this.track.getTangentAt(newTrackPos);var oldTangent=this.track.getTangentAt(oldTrackPos);if(newTangent.equals(oldTangent)){// no change in direction
        }else{var tangentDiffNormal=new THREE.Vector3().crossVectors(oldTangent,newTangent).normalize();var angle=oldTangent.angleTo(newTangent);var rot=new THREE.Matrix4().makeRotationAxis(tangentDiffNormal,angle);var dir=this.object.getWorldDirection().clone();dir=dir.applyMatrix4(rot);var target=new THREE.Vector3().addVectors(this.object.position,dir);this.object.lookAt(target);this.object.updateMatrixWorld();var _event={type:'path_relative_rotation',angle:angle,axis:tangentDiffNormal,controls:this};this.dispatchEvent(_event);}if(this.trackPos===null){var _target=new THREE.Vector3().addVectors(this.object.position,newTangent);this.object.lookAt(_target);}this.trackPos=newTrackPos;// let pStart = this.track.getPointAt(oldTrackPos);
// let pEnd = this.track.getPointAt(newTrackPos);
// let pDiff = pEnd.sub(pStart);
        if(newTrackPos!==oldTrackPos){var _event2={type:'move',translation:pan.clone()};this.dispatchEvent(_event2);}}},{key:'stop',value:function stop(){}},{key:'getTrackPos',value:function getTrackPos(){return this.trackPos;}},{key:'rotateLeft',value:function rotateLeft(angle){thetaDelta-=angle;}},{key:'rotateUp',value:function rotateUp(angle){phiDelta-=angle;}// pass in distance in world space to move left
},{key:'panLeft',value:function panLeft(distance){var te=this.object.matrix.elements;// get X column of matrix
        panOffset.set(te[0],te[1],te[2]);panOffset.multiplyScalar(-distance);pan.add(panOffset);}// pass in distance in world space to move up
},{key:'panUp',value:function panUp(distance){var te=this.object.matrix.elements;// get Y column of matrix
        panOffset.set(te[4],te[5],te[6]);panOffset.multiplyScalar(distance);pan.add(panOffset);}// pass in distance in world space to move forward
},{key:'panForward',value:function panForward(distance){if(this.track){this.setTrackPos(this.getTrackPos()-distance/this.track.getLength());}else{var te=this.object.matrix.elements;// get Y column of matrix
        panOffset.set(te[8],te[9],te[10]);// panOffset.set( te[ 8 ], 0, te[ 10 ] );
        panOffset.multiplyScalar(distance);pan.add(panOffset);}}},{key:'pan',value:function pan(deltaX,deltaY){var element=this.domElement===document?this.domElement.body:this.domElement;if(this.object.fov!==undefined){// perspective
        var position=this.object.position;var offset=position.clone();var targetDistance=offset.length();// half of the fov is center to top of screen
        targetDistance*=Math.tan(this.object.fov/2*Math.PI/180.0);// we actually don't use screenWidth, since perspective camera is fixed to screen height
        this.panLeft(2*deltaX*targetDistance/element.clientHeight);this.panUp(2*deltaY*targetDistance/element.clientHeight);}else if(this.object.top!==undefined){// orthographic
        this.panLeft(deltaX*(this.object.right-this.object.left)/element.clientWidth);this.panUp(deltaY*(this.object.top-this.object.bottom)/element.clientHeight);}else{// camera neither orthographic or perspective
        console.warn('WARNING: GeoControls.js encountered an unknown camera type - pan disabled.');}}},{key:'update',value:function update(delta){this.object.rotation.order='ZYX';var object=this.object;this.object=new THREE.Object3D();this.object.position.copy(object.position);this.object.rotation.copy(object.rotation);this.object.updateMatrix();this.object.updateMatrixWorld();var position=this.object.position;if(delta!==undefined){var multiplier=this.shiftDown?4:1;if(this.moveRight){this.panLeft(-delta*this.moveSpeed*multiplier);}if(this.moveLeft){this.panLeft(delta*this.moveSpeed*multiplier);}if(this.moveForward||this.moveForwardMouse){this.panForward(-delta*this.moveSpeed*multiplier);}if(this.moveBackward){this.panForward(delta*this.moveSpeed*multiplier);}if(this.rotLeft){this.rotateLeft(-0.5*Math.PI*delta/this.rotateSpeed);}if(this.rotRight){this.rotateLeft(0.5*Math.PI*delta/this.rotateSpeed);}if(this.raiseCamera){// this.rotateUp( -0.5 * Math.PI * delta / this.rotateSpeed );
        this.panUp(delta*this.moveSpeed*multiplier);}if(this.lowerCamera){// this.rotateUp( 0.5 * Math.PI * delta / this.rotateSpeed );
        this.panUp(-delta*this.moveSpeed*multiplier);}}if(!pan.equals(new THREE.Vector3(0,0,0))){var _event3={type:'move',translation:pan.clone()};this.dispatchEvent(_event3);}position.add(pan);if(!(thetaDelta===0.0&&phiDelta===0.0)){var _event4={type:'rotate',thetaDelta:thetaDelta,phiDelta:phiDelta};this.dispatchEvent(_event4);}this.object.updateMatrix();var rot=new THREE.Matrix4().makeRotationY(thetaDelta);var res=new THREE.Matrix4().multiplyMatrices(rot,this.object.matrix);this.object.quaternion.setFromRotationMatrix(res);this.object.rotation.x+=phiDelta;this.object.updateMatrixWorld();// send transformation proposal to listeners
        var proposeTransformEvent={type:'proposeTransform',oldPosition:object.position,newPosition:this.object.position,objections:0,counterProposals:[]};this.dispatchEvent(proposeTransformEvent);// check some counter proposals if transformation wasn't accepted
        if(proposeTransformEvent.objections>0){if(proposeTransformEvent.counterProposals.length>0){var cp=proposeTransformEvent.counterProposals;this.object.position.copy(cp[0]);proposeTransformEvent.objections=0;proposeTransformEvent.counterProposals=[];}}// apply transformation, if accepted
        if(proposeTransformEvent.objections>0){}else{object.position.copy(this.object.position);}object.rotation.copy(this.object.rotation);this.object=object;thetaDelta=0;phiDelta=0;pan.set(0,0,0);if(lastPosition.distanceTo(this.object.position)>0){this.dispatchEvent(changeEvent);lastPosition.copy(this.object.position);}if(this.track){var pos=this.track.getPointAt(this.trackPos);object.position.copy(pos);}}},{key:'reset',value:function reset(){state=STATE.NONE;this.object.position.copy(this.position0);}},{key:'onMouseDown',value:function onMouseDown(){if(this.enabled===false)return;event.preventDefault();if(event.button===0){state=STATE.ROTATE;rotateStart.set(event.clientX,event.clientY);}else if(event.button===1){state=STATE.PAN;panStart.set(event.clientX,event.clientY);}else if(event.button===2){// state = STATE.PAN;
// panStart.set( event.clientX, event.clientY );
        this.moveForwardMouse=true;}// this.domElement.addEventListener( 'mousemove', onMouseMove, false );
// this.domElement.addEventListener( 'mouseup', onMouseUp, false );
        this.dispatchEvent(startEvent);}},{key:'onMouseMove',value:function onMouseMove(event){if(this.enabled===false)return;event.preventDefault();var element=this.domElement===document?this.domElement.body:this.domElement;if(state===STATE.ROTATE){rotateEnd.set(event.clientX,event.clientY);rotateDelta.subVectors(rotateEnd,rotateStart);// rotating across whole screen goes 360 degrees around
        this.rotateLeft(2*Math.PI*rotateDelta.x/element.clientWidth*this.rotateSpeed);// rotating up and down along whole screen attempts to go 360, but limited to 180
        this.rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight*this.rotateSpeed);rotateStart.copy(rotateEnd);}else if(state===STATE.PAN){panEnd.set(event.clientX,event.clientY);panDelta.subVectors(panEnd,panStart);// panDelta.multiplyScalar(this.moveSpeed).multiplyScalar(0.0001);
        panDelta.multiplyScalar(0.002).multiplyScalar(this.moveSpeed);this.pan(panDelta.x,panDelta.y);panStart.copy(panEnd);}}},{key:'onMouseUp',value:function onMouseUp(event){if(this.enabled===false)return;// console.log(event.which);
        if(event.button===2){this.moveForwardMouse=false;}else{// this.domElement.removeEventListener( 'mousemove', onMouseMove, false );
// this.domElement.removeEventListener( 'mouseup', onMouseUp, false );
            this.dispatchEvent(endEvent);state=STATE.NONE;}}},{key:'onMouseWheel',value:function onMouseWheel(event){if(this.enabled===false||this.noZoom===true)return;event.preventDefault();var direction=event.detail<0||event.wheelDelta>0?1:-1;var moveSpeed=this.moveSpeed+this.moveSpeed*0.1*direction;moveSpeed=Math.max(0.1,moveSpeed);this.setMoveSpeed(moveSpeed);this.dispatchEvent(startEvent);this.dispatchEvent(endEvent);}},{key:'setMoveSpeed',value:function setMoveSpeed(value){if(this.moveSpeed!==value){this.moveSpeed=value;this.dispatchEvent({type:'move_speed_changed',controls:this});}}},{key:'onKeyDown',value:function onKeyDown(event){if(this.enabled===false)return;this.shiftDown=event.shiftKey;switch(event.keyCode){case this.keys.UP:this.moveForward=true;break;case this.keys.BOTTOM:this.moveBackward=true;break;case this.keys.LEFT:this.moveLeft=true;break;case this.keys.RIGHT:this.moveRight=true;break;case this.keys.W:this.moveForward=true;break;case this.keys.S:this.moveBackward=true;break;case this.keys.A:this.moveLeft=true;break;case this.keys.D:this.moveRight=true;break;case this.keys.Q:this.rotLeft=true;break;case this.keys.E:this.rotRight=true;break;case this.keys.R:this.raiseCamera=true;break;case this.keys.F:this.lowerCamera=true;break;}}},{key:'onKeyUp',value:function onKeyUp(event){this.shiftDown=event.shiftKey;switch(event.keyCode){case this.keys.W:this.moveForward=false;break;case this.keys.S:this.moveBackward=false;break;case this.keys.A:this.moveLeft=false;break;case this.keys.D:this.moveRight=false;break;case this.keys.UP:this.moveForward=false;break;case this.keys.BOTTOM:this.moveBackward=false;break;case this.keys.LEFT:this.moveLeft=false;break;case this.keys.RIGHT:this.moveRight=false;break;case this.keys.Q:this.rotLeft=false;break;case this.keys.E:this.rotRight=false;break;case this.keys.R:this.raiseCamera=false;break;case this.keys.F:this.lowerCamera=false;break;}}}]);return GeoControls;}(THREE.EventDispatcher);/**
 * @author mschuetz / http://mschuetz.at
 *
 * adapted from THREE.OrbitControls by
 *
 * @author qiao / https://github.com/qiao
 * @author mrdoob / http://mrdoob.com
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 * @author erich666 / http://erichaines.com
 *
 *
 *
 */Potree.OrbitControls=function(_THREE$EventDispatche4){_inherits(OrbitControls,_THREE$EventDispatche4);function OrbitControls(viewer){_classCallCheck(this,OrbitControls);var _this19=_possibleConstructorReturn(this,(OrbitControls.__proto__||Object.getPrototypeOf(OrbitControls)).call(this));_this19.viewer=viewer;_this19.renderer=viewer.renderer;_this19.scene=null;_this19.sceneControls=new THREE.Scene();_this19.rotationSpeed=5;_this19.fadeFactor=10;_this19.yawDelta=0;_this19.pitchDelta=0;_this19.panDelta=new THREE.Vector2(0,0);_this19.radiusDelta=0;_this19.tweens=[];var drag=function drag(e){if(e.drag.object!==null){return;}if(e.drag.startHandled===undefined){e.drag.startHandled=true;_this19.dispatchEvent({type:'start'});}var ndrag={x:e.drag.lastDrag.x/_this19.renderer.domElement.clientWidth,y:e.drag.lastDrag.y/_this19.renderer.domElement.clientHeight};if(e.drag.mouse===Potree.MOUSE.LEFT){_this19.yawDelta+=ndrag.x*_this19.rotationSpeed;_this19.pitchDelta+=ndrag.y*_this19.rotationSpeed;_this19.stopTweens();}else if(e.drag.mouse===Potree.MOUSE.RIGHT){_this19.panDelta.x+=ndrag.x;_this19.panDelta.y+=ndrag.y;_this19.stopTweens();}};var drop=function drop(e){_this19.dispatchEvent({type:'end'});};var scroll=function scroll(e){var resolvedRadius=_this19.scene.view.radius+_this19.radiusDelta;_this19.radiusDelta+=-e.delta*resolvedRadius*0.1;_this19.stopTweens();};var dblclick=function dblclick(e){_this19.zoomToLocation(e.mouse);};var previousTouch=null;var touchStart=function touchStart(e){previousTouch=e;};var touchEnd=function touchEnd(e){previousTouch=e;};var touchMove=function touchMove(e){if(e.touches.length===2&&previousTouch.touches.length===2){var prev=previousTouch;var curr=e;var prevDX=prev.touches[0].pageX-prev.touches[1].pageX;var prevDY=prev.touches[0].pageY-prev.touches[1].pageY;var prevDist=Math.sqrt(prevDX*prevDX+prevDY*prevDY);var currDX=curr.touches[0].pageX-curr.touches[1].pageX;var currDY=curr.touches[0].pageY-curr.touches[1].pageY;var currDist=Math.sqrt(currDX*currDX+currDY*currDY);var delta=currDist/prevDist;var resolvedRadius=_this19.scene.view.radius+_this19.radiusDelta;var newRadius=resolvedRadius/delta;_this19.radiusDelta=newRadius-resolvedRadius;_this19.stopTweens();}else if(e.touches.length===3&&previousTouch.touches.length===3){var _prev=previousTouch;var _curr=e;var prevMeanX=(_prev.touches[0].pageX+_prev.touches[1].pageX+_prev.touches[2].pageX)/3;var prevMeanY=(_prev.touches[0].pageY+_prev.touches[1].pageY+_prev.touches[2].pageY)/3;var currMeanX=(_curr.touches[0].pageX+_curr.touches[1].pageX+_curr.touches[2].pageX)/3;var currMeanY=(_curr.touches[0].pageY+_curr.touches[1].pageY+_curr.touches[2].pageY)/3;var _delta={x:(currMeanX-prevMeanX)/_this19.renderer.domElement.clientWidth,y:(currMeanY-prevMeanY)/_this19.renderer.domElement.clientHeight};_this19.panDelta.x+=_delta.x;_this19.panDelta.y+=_delta.y;_this19.stopTweens();}previousTouch=e;};_this19.addEventListener('touchstart',touchStart);_this19.addEventListener('touchend',touchEnd);_this19.addEventListener('touchmove',touchMove);_this19.addEventListener('drag',drag);_this19.addEventListener('drop',drop);_this19.addEventListener('mousewheel',scroll);_this19.addEventListener('dblclick',dblclick);return _this19;}_createClass(OrbitControls,[{key:'setScene',value:function setScene(scene){this.scene=scene;}},{key:'stop',value:function stop(){this.yawDelta=0;this.pitchDelta=0;this.radiusDelta=0;this.panDelta.set(0,0);}},{key:'zoomToLocation',value:function zoomToLocation(mouse){var _this20=this;var camera=this.scene.getActiveCamera();var I=Potree.utils.getMousePointCloudIntersection(mouse,camera,this.viewer,this.scene.pointclouds,{pickClipped:true});if(I===null){return;}var targetRadius=0;{var minimumJumpDistance=0.2;var domElement=this.renderer.domElement;var ray=Potree.utils.mouseToRay(mouse,camera,domElement.clientWidth,domElement.clientHeight);var nodes=I.pointcloud.nodesOnRay(I.pointcloud.visibleNodes,ray);var lastNode=nodes[nodes.length-1];var radius=lastNode.getBoundingSphere().radius;targetRadius=Math.min(this.scene.view.radius,radius);targetRadius=Math.max(minimumJumpDistance,targetRadius);}var d=this.scene.view.direction.multiplyScalar(-1);var cameraTargetPosition=new THREE.Vector3().addVectors(I.location,d.multiplyScalar(targetRadius));// TODO Unused: let controlsTargetPosition = I.location;
        var animationDuration=600;var easing=TWEEN.Easing.Quartic.Out;{// animate
            var value={x:0};var tween=new TWEEN.Tween(value).to({x:1},animationDuration);tween.easing(easing);this.tweens.push(tween);var startPos=this.scene.view.position.clone();var targetPos=cameraTargetPosition.clone();var startRadius=this.scene.view.radius;var _targetRadius2=cameraTargetPosition.distanceTo(I.location);tween.onUpdate(function(){var t=value.x;_this20.scene.view.position.x=(1-t)*startPos.x+t*targetPos.x;_this20.scene.view.position.y=(1-t)*startPos.y+t*targetPos.y;_this20.scene.view.position.z=(1-t)*startPos.z+t*targetPos.z;_this20.scene.view.radius=(1-t)*startRadius+t*_targetRadius2;_this20.viewer.setMoveSpeed(_this20.scene.view.radius/2.5);});tween.onComplete(function(){_this20.tweens=_this20.tweens.filter(function(e){return e!==tween;});});tween.start();}}},{key:'stopTweens',value:function stopTweens(){this.tweens.forEach(function(e){return e.stop();});this.tweens=[];}},{key:'update',value:function update(delta){var view=this.scene.view;{// apply rotation
        var progression=Math.min(1,this.fadeFactor*delta);var yaw=view.yaw;var pitch=view.pitch;var pivot=view.getPivot();yaw-=progression*this.yawDelta;pitch-=progression*this.pitchDelta;view.yaw=yaw;view.pitch=pitch;var V=this.scene.view.direction.multiplyScalar(-view.radius);var position=new THREE.Vector3().addVectors(pivot,V);view.position.copy(position);}{// apply pan
        var _progression=Math.min(1,this.fadeFactor*delta);var panDistance=_progression*view.radius*3;var px=-this.panDelta.x*panDistance;var py=this.panDelta.y*panDistance;view.pan(px,py);}{// apply zoom
        var _progression2=Math.min(1,this.fadeFactor*delta);// let radius = view.radius + progression * this.radiusDelta * view.radius * 0.1;
        var radius=view.radius+_progression2*this.radiusDelta;var _V=view.direction.multiplyScalar(-radius);var _position=new THREE.Vector3().addVectors(view.getPivot(),_V);view.radius=radius;view.position.copy(_position);}{var speed=view.radius/2.5;this.viewer.setMoveSpeed(speed);}{// decelerate over time
        var _progression3=Math.min(1,this.fadeFactor*delta);var attenuation=Math.max(0,1-this.fadeFactor*delta);this.yawDelta*=attenuation;this.pitchDelta*=attenuation;this.panDelta.multiplyScalar(attenuation);// this.radiusDelta *= attenuation;
        this.radiusDelta-=_progression3*this.radiusDelta;}}}]);return OrbitControls;}(THREE.EventDispatcher);Potree.EarthControls=function(_THREE$EventDispatche5){_inherits(EarthControls,_THREE$EventDispatche5);function EarthControls(viewer){_classCallCheck(this,EarthControls);var _this21=_possibleConstructorReturn(this,(EarthControls.__proto__||Object.getPrototypeOf(EarthControls)).call(this,viewer));_this21.viewer=viewer;_this21.renderer=viewer.renderer;_this21.scene=null;_this21.sceneControls=new THREE.Scene();_this21.rotationSpeed=10;_this21.fadeFactor=20;_this21.wheelDelta=0;_this21.zoomDelta=new THREE.Vector3();_this21.camStart=null;_this21.tweens=[];{var sg=new THREE.SphereGeometry(1,16,16);var sm=new THREE.MeshNormalMaterial();_this21.pivotIndicator=new THREE.Mesh(sg,sm);_this21.pivotIndicator.visible=false;_this21.sceneControls.add(_this21.pivotIndicator);}var drag=function drag(e){if(e.drag.object!==null){return;}if(!_this21.pivot){return;}if(e.drag.startHandled===undefined){e.drag.startHandled=true;_this21.dispatchEvent({type:'start'});}var camStart=_this21.camStart;var view=_this21.viewer.scene.view;// let camera = this.viewer.scene.camera;
    var mouse=e.drag.end;var domElement=_this21.viewer.renderer.domElement;if(e.drag.mouse===Potree.MOUSE.LEFT){var ray=Potree.utils.mouseToRay(mouse,camStart,domElement.clientWidth,domElement.clientHeight);var plane=new THREE.Plane().setFromNormalAndCoplanarPoint(new THREE.Vector3(0,0,1),_this21.pivot);var distanceToPlane=ray.distanceToPlane(plane);if(distanceToPlane>0){var I=new THREE.Vector3().addVectors(camStart.position,ray.direction.clone().multiplyScalar(distanceToPlane));var movedBy=new THREE.Vector3().subVectors(I,_this21.pivot);var newCamPos=camStart.position.clone().sub(movedBy);view.position.copy(newCamPos);//console.log("position",view.position);
        {var distance=newCamPos.distanceTo(_this21.pivot);view.radius=distance;var speed=view.radius/2.5;_this21.viewer.setMoveSpeed(speed);}}}else if(e.drag.mouse===Potree.MOUSE.RIGHT){var ndrag={x:e.drag.lastDrag.x/_this21.renderer.domElement.clientWidth,y:e.drag.lastDrag.y/_this21.renderer.domElement.clientHeight};var yawDelta=-ndrag.x*_this21.rotationSpeed*0.5;var pitchDelta=-ndrag.y*_this21.rotationSpeed*0.2;var originalPitch=view.pitch;var tmpView=view.clone();tmpView.pitch=tmpView.pitch+pitchDelta;pitchDelta=tmpView.pitch-originalPitch;var pivotToCam=new THREE.Vector3().subVectors(view.position,_this21.pivot);var pivotToCamTarget=new THREE.Vector3().subVectors(view.getPivot(),_this21.pivot);var side=view.getSide();pivotToCam.applyAxisAngle(side,pitchDelta);pivotToCamTarget.applyAxisAngle(side,pitchDelta);pivotToCam.applyAxisAngle(new THREE.Vector3(0,0,1),yawDelta);pivotToCamTarget.applyAxisAngle(new THREE.Vector3(0,0,1),yawDelta);var newCam=new THREE.Vector3().addVectors(_this21.pivot,pivotToCam);// TODO: Unused: let newCamTarget = new THREE.Vector3().addVectors(this.pivot, pivotToCamTarget);
        view.position.copy(newCam);view.yaw+=yawDelta;view.pitch+=pitchDelta;//console.log("position",view.position);
//console.log("yaw",view.yaw);
//console.log("pitch",view.pitch);
    }};var onMouseDown=function onMouseDown(e){var I=Potree.utils.getMousePointCloudIntersection(e.mouse,_this21.scene.getActiveCamera(),_this21.viewer,_this21.scene.pointclouds,{pickClipped:false});if(I===null){I=Potree.utils.getMouseObjectIntersection(e.mouse,_this21.scene.getActiveCamera(),_this21.viewer,_this21.scene.scene.children,{pickClipped:false});}if(I){_this21.pivot=I.location;_this21.camStart=_this21.scene.getActiveCamera().clone();_this21.pivotIndicator.visible=true;_this21.pivotIndicator.position.copy(I.location);}};var drop=function drop(e){_this21.dispatchEvent({type:'end'});};var onMouseUp=function onMouseUp(e){_this21.camStart=null;_this21.pivot=null;_this21.pivotIndicator.visible=false;};var scroll=function scroll(e){_this21.wheelDelta+=e.delta;};var dblclick=function dblclick(e){_this21.zoomToLocation(e.mouse);};_this21.addEventListener('drag',drag);_this21.addEventListener('drop',drop);_this21.addEventListener('mousewheel',scroll);_this21.addEventListener('mousedown',onMouseDown);_this21.addEventListener('mouseup',onMouseUp);_this21.addEventListener('dblclick',dblclick);return _this21;}_createClass(EarthControls,[{key:'setScene',value:function setScene(scene){this.scene=scene;}},{key:'stop',value:function stop(){this.wheelDelta=0;this.zoomDelta.set(0,0,0);}},{key:'zoomToLocation',value:function zoomToLocation(mouse){var _this22=this;var camera=this.scene.getActiveCamera();var targetRadius=0;var I=Potree.utils.getMousePointCloudIntersection(mouse,camera,this.viewer,this.scene.pointclouds);if(I===null){I=Potree.utils.getMouseObjectIntersection(mouse,camera,this.viewer,this.scene.scene.children);if(I===null){return;}{var minimumJumpDistance=0.2;var domElement=this.renderer.domElement;var ray=Potree.utils.mouseToRay(mouse,camera,domElement.clientWidth,domElement.clientHeight);var sphere=I.pointcloud.geometry.computeBoundingSphere();//let nodes = I.pointcloud.nodesOnRay(I.pointcloud.visibleNodes, ray);
//let lastNode = nodes[nodes.length - 1];
        var radius=sphere.radius;targetRadius=Math.min(this.scene.view.radius,radius);targetRadius=Math.max(minimumJumpDistance,targetRadius);}}/*if (I === null) {
			return;
		}*/{var _minimumJumpDistance=0.2;var _domElement=this.renderer.domElement;var _ray2=Potree.utils.mouseToRay(mouse,camera,_domElement.clientWidth,_domElement.clientHeight);var nodes=I.pointcloud.nodesOnRay(I.pointcloud.visibleNodes,_ray2);var lastNode=nodes[nodes.length-1];var _radius=lastNode.getBoundingSphere().radius;targetRadius=Math.min(this.scene.view.radius,_radius);targetRadius=Math.max(_minimumJumpDistance,targetRadius);}var d=this.scene.view.direction.multiplyScalar(-1);var cameraTargetPosition=new THREE.Vector3().addVectors(I.location,d.multiplyScalar(targetRadius));// TODO Unused: let controlsTargetPosition = I.location;
        var animationDuration=600;var easing=TWEEN.Easing.Quartic.Out;{// animate
            var value={x:0};var tween=new TWEEN.Tween(value).to({x:1},animationDuration);tween.easing(easing);this.tweens.push(tween);var startPos=this.scene.view.position.clone();var targetPos=cameraTargetPosition.clone();var startRadius=this.scene.view.radius;var _targetRadius3=cameraTargetPosition.distanceTo(I.location);tween.onUpdate(function(){var t=value.x;_this22.scene.view.position.x=(1-t)*startPos.x+t*targetPos.x;_this22.scene.view.position.y=(1-t)*startPos.y+t*targetPos.y;_this22.scene.view.position.z=(1-t)*startPos.z+t*targetPos.z;_this22.scene.view.radius=(1-t)*startRadius+t*_targetRadius3;_this22.viewer.setMoveSpeed(_this22.scene.view.radius/2.5);});tween.onComplete(function(){_this22.tweens=_this22.tweens.filter(function(e){return e!==tween;});});tween.start();}}},{key:'update',value:function update(delta){var view=this.scene.view;var fade=Math.pow(0.5,this.fadeFactor*delta);var progression=1-fade;var camera=this.scene.getActiveCamera();// compute zoom
        if(this.wheelDelta!==0){var I=Potree.utils.getMousePointCloudIntersection(this.viewer.inputHandler.mouse,this.scene.getActiveCamera(),this.viewer,this.scene.pointclouds);if(I===null){I=Potree.utils.getMouseObjectIntersection(this.viewer.inputHandler.mouse,this.scene.getActiveCamera(),this.viewer,this.scene.scene.children);}if(I){var resolvedPos=new THREE.Vector3().addVectors(view.position,this.zoomDelta);var distance=I.location.distanceTo(resolvedPos);var jumpDistance=distance*0.2*this.wheelDelta;var targetDir=new THREE.Vector3().subVectors(I.location,view.position);targetDir.normalize();resolvedPos.add(targetDir.multiplyScalar(jumpDistance));this.zoomDelta.subVectors(resolvedPos,view.position);{var _distance3=resolvedPos.distanceTo(I.location);view.radius=_distance3;var speed=view.radius/2.5;this.viewer.setMoveSpeed(speed);}}}// apply zoom
        if(this.zoomDelta.length()!==0){var p=this.zoomDelta.clone().multiplyScalar(progression);var newPos=new THREE.Vector3().addVectors(view.position,p);view.position.copy(newPos);}if(this.pivotIndicator.visible){var _distance4=this.pivotIndicator.position.distanceTo(view.position);var pixelwidth=this.renderer.domElement.clientwidth;var pixelHeight=this.renderer.domElement.clientHeight;var pr=Potree.utils.projectedRadius(1,camera,_distance4,pixelwidth,pixelHeight);var scale=10/pr;this.pivotIndicator.scale.set(scale,scale,scale);}// decelerate over time
        {this.zoomDelta.multiplyScalar(fade);this.wheelDelta=0;}}}]);return EarthControls;}(THREE.EventDispatcher);/**
 *
 * @param node
 * @class an item in the lru list.
 */function LRUItem(node){this.previous=null;this.next=null;this.node=node;}/**
 *
 * @class A doubly-linked-list of the least recently used elements.
 */function LRU(){// the least recently used item
    this.first=null;// the most recently used item
    this.last=null;// a list of all items in the lru list
    this.items={};this.elements=0;this.numPoints=0;}/**
 * number of elements in the list
 *
 * @returns {Number}
 */LRU.prototype.size=function(){return this.elements;};LRU.prototype.contains=function(node){return this.items[node.id]==null;};/**
 * makes node the most recently used item. if the list does not contain node, it will be added.
 *
 * @param node
 */LRU.prototype.touch=function(node){if(!node.loaded){return;}var item=void 0;if(this.items[node.id]==null){// add to list
    item=new LRUItem(node);item.previous=this.last;this.last=item;if(item.previous!==null){item.previous.next=item;}this.items[node.id]=item;this.elements++;if(this.first===null){this.first=item;}this.numPoints+=node.numPoints;}else{// update in list
    item=this.items[node.id];if(item.previous===null){// handle touch on first element
        if(item.next!==null){this.first=item.next;this.first.previous=null;item.previous=this.last;item.next=null;this.last=item;item.previous.next=item;}}else if(item.next===null){// handle touch on last element
    }else{// handle touch on any other element
        item.previous.next=item.next;item.next.previous=item.previous;item.previous=this.last;item.next=null;this.last=item;item.previous.next=item;}}};LRU.prototype.remove=function remove(node){var lruItem=this.items[node.id];if(lruItem){if(this.elements===1){this.first=null;this.last=null;}else{if(!lruItem.previous){this.first=lruItem.next;this.first.previous=null;}if(!lruItem.next){this.last=lruItem.previous;this.last.next=null;}if(lruItem.previous&&lruItem.next){lruItem.previous.next=lruItem.next;lruItem.next.previous=lruItem.previous;}}delete this.items[node.id];this.elements--;this.numPoints-=node.numPoints;}};LRU.prototype.getLRUItem=function(){if(this.first===null){return null;}var lru=this.first;return lru.node;};LRU.prototype.toString=function(){var string='{ ';var curr=this.first;while(curr!==null){string+=curr.node.id;if(curr.next!==null){string+=', ';}curr=curr.next;}string+='}';string+='('+this.size()+')';return string;};LRU.prototype.freeMemory=function(){if(this.elements<=1){return;}while(this.numPoints>Potree.pointLoadLimit){var element=this.first;var _node4=element.node;this.disposeDescendants(_node4);}};LRU.prototype.disposeDescendants=function(node){var stack=[];stack.push(node);while(stack.length>0){var current=stack.pop();// console.log(current);
    current.dispose();this.remove(current);for(var key in current.children){if(current.children.hasOwnProperty(key)){var child=current.children[key];if(child.loaded){stack.push(current.children[key]);}}}}};Potree.Annotation=function(_THREE$EventDispatche6){_inherits(_class3,_THREE$EventDispatche6);function _class3(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,_class3);var _this23=_possibleConstructorReturn(this,(_class3.__proto__||Object.getPrototypeOf(_class3)).call(this));var valueOrDefault=function valueOrDefault(a,b){if(a===null||a===undefined){return b;}else{return a;}};_this23.scene=null;_this23._title=args.title||'No Title';_this23._description=args.description||'';if(!args.position){_this23.position=null;}else if(args.position instanceof THREE.Vector3){_this23.position=args.position;}else{_this23.position=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(args.position))))();}_this23.cameraPosition=args.cameraPosition instanceof Array?new THREE.Vector3().fromArray(args.cameraPosition):args.cameraPosition;_this23.cameraTarget=args.cameraTarget instanceof Array?new THREE.Vector3().fromArray(args.cameraTarget):args.cameraTarget;_this23.radius=args.radius;_this23.view=args.view||null;_this23.keepOpen=false;_this23.descriptionVisible=false;_this23.showDescription=true;_this23.actions=args.actions||[];_this23.isHighlighted=false;_this23._visible=true;_this23.__visible=true;_this23._display=true;_this23._expand=false;_this23.collapseThreshold=[args.collapseThreshold,100].find(function(e){return e!==undefined;});_this23.children=[];_this23.parent=null;_this23.boundingBox=new THREE.Box3();var iconClose=Potree.resourcePath+'/icons/close.svg';_this23.domElement=$('\n\t\t\t<div class="annotation" oncontextmenu="return false;">\n\t\t\t\t<div class="annotation-titlebar">\n\t\t\t\t\t<span class="annotation-label"></span>\n\t\t\t\t</div>\n\t\t\t\t<div class="annotation-description">\n\t\t\t\t\t<span class="annotation-description-close">\n\t\t\t\t\t\t<img src="'+iconClose+'" width="16px">\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class="annotation-description-content">'+_this23._description+'</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t');_this23.elTitlebar=_this23.domElement.find('.annotation-titlebar');_this23.elTitle=_this23.elTitlebar.find('.annotation-label');_this23.elTitle.append(_this23._title);_this23.elDescription=_this23.domElement.find('.annotation-description');_this23.elDescriptionClose=_this23.elDescription.find('.annotation-description-close');// this.elDescriptionContent = this.elDescription.find(".annotation-description-content");
    _this23.clickTitle=function(){if(_this23.hasView()){_this23.moveHere(_this23.scene.getActiveCamera());}_this23.dispatchEvent({type:'click',target:_this23});};_this23.elTitle.click(_this23.clickTitle);_this23.actions=_this23.actions.map(function(a){if(a instanceof Potree.Action){return a;}else{return new Potree.Action(a);}});var _iteratorNormalCompletion42=true;var _didIteratorError42=false;var _iteratorError42=undefined;try{for(var _iterator42=_this23.actions[Symbol.iterator](),_step42;!(_iteratorNormalCompletion42=(_step42=_iterator42.next()).done);_iteratorNormalCompletion42=true){var action=_step42.value;action.pairWith(_this23);}}catch(err){_didIteratorError42=true;_iteratorError42=err;}finally{try{if(!_iteratorNormalCompletion42&&_iterator42.return){_iterator42.return();}}finally{if(_didIteratorError42){throw _iteratorError42;}}}var actions=_this23.actions.filter(function(a){return a.showIn===undefined||a.showIn.includes('scene');});var _iteratorNormalCompletion43=true;var _didIteratorError43=false;var _iteratorError43=undefined;try{var _loop2=function _loop2(){var action=_step43.value;var elButton=$('<img src="'+action.icon+'" class="annotation-action-icon">');_this23.elTitlebar.append(elButton);elButton.click(function(){return action.onclick({annotation:_this23});});};for(var _iterator43=actions[Symbol.iterator](),_step43;!(_iteratorNormalCompletion43=(_step43=_iterator43.next()).done);_iteratorNormalCompletion43=true){_loop2();}}catch(err){_didIteratorError43=true;_iteratorError43=err;}finally{try{if(!_iteratorNormalCompletion43&&_iterator43.return){_iterator43.return();}}finally{if(_didIteratorError43){throw _iteratorError43;}}}_this23.elDescriptionClose.hover(function(e){return _this23.elDescriptionClose.css('opacity','1');},function(e){return _this23.elDescriptionClose.css('opacity','0.5');});_this23.elDescriptionClose.click(function(e){return _this23.setHighlighted(false);});// this.elDescriptionContent.html(this._description);
    _this23.domElement.mouseenter(function(e){return _this23.setHighlighted(true);});_this23.domElement.mouseleave(function(e){return _this23.setHighlighted(false);});_this23.domElement.on('touchstart',function(e){_this23.setHighlighted(!_this23.isHighlighted);});_this23.display=false;//this.display = true;
    return _this23;}_createClass(_class3,[{key:'add',value:function add(annotation){if(!this.children.includes(annotation)){this.children.push(annotation);annotation.parent=this;var descendants=[];annotation.traverse(function(a){descendants.push(a);});var _iteratorNormalCompletion44=true;var _didIteratorError44=false;var _iteratorError44=undefined;try{for(var _iterator44=descendants[Symbol.iterator](),_step44;!(_iteratorNormalCompletion44=(_step44=_iterator44.next()).done);_iteratorNormalCompletion44=true){var descendant=_step44.value;var c=this;while(c!==null){c.dispatchEvent({'type':'annotation_added','annotation':descendant});c=c.parent;}}}catch(err){_didIteratorError44=true;_iteratorError44=err;}finally{try{if(!_iteratorNormalCompletion44&&_iterator44.return){_iterator44.return();}}finally{if(_didIteratorError44){throw _iteratorError44;}}}}}},{key:'level',value:function level(){if(this.parent===null){return 0;}else{return this.parent.level()+1;}}},{key:'hasChild',value:function hasChild(annotation){return this.children.includes(annotation);}},{key:'remove',value:function remove(annotation){if(this.hasChild(annotation)){annotation.removeAllChildren();annotation.dispose();this.children=this.children.filter(function(e){return e!==annotation;});annotation.parent=null;}}},{key:'removeAllChildren',value:function removeAllChildren(){var _this24=this;this.children.forEach(function(child){if(child.children.length>0){child.removeAllChildren();}_this24.remove(child);});}},{key:'updateBounds',value:function updateBounds(){var box=new THREE.Box3();if(this.position){box.expandByPoint(this.position);}var _iteratorNormalCompletion45=true;var _didIteratorError45=false;var _iteratorError45=undefined;try{for(var _iterator45=this.children[Symbol.iterator](),_step45;!(_iteratorNormalCompletion45=(_step45=_iterator45.next()).done);_iteratorNormalCompletion45=true){var child=_step45.value;child.updateBounds();box.union(child.boundingBox);}}catch(err){_didIteratorError45=true;_iteratorError45=err;}finally{try{if(!_iteratorNormalCompletion45&&_iterator45.return){_iterator45.return();}}finally{if(_didIteratorError45){throw _iteratorError45;}}}this.boundingBox.copy(box);}},{key:'traverse',value:function traverse(handler){var expand=handler(this);if(expand===undefined||expand===true){var _iteratorNormalCompletion46=true;var _didIteratorError46=false;var _iteratorError46=undefined;try{for(var _iterator46=this.children[Symbol.iterator](),_step46;!(_iteratorNormalCompletion46=(_step46=_iterator46.next()).done);_iteratorNormalCompletion46=true){var child=_step46.value;child.traverse(handler);}}catch(err){_didIteratorError46=true;_iteratorError46=err;}finally{try{if(!_iteratorNormalCompletion46&&_iterator46.return){_iterator46.return();}}finally{if(_didIteratorError46){throw _iteratorError46;}}}}}},{key:'traverseDescendants',value:function traverseDescendants(handler){var _iteratorNormalCompletion47=true;var _didIteratorError47=false;var _iteratorError47=undefined;try{for(var _iterator47=this.children[Symbol.iterator](),_step47;!(_iteratorNormalCompletion47=(_step47=_iterator47.next()).done);_iteratorNormalCompletion47=true){var child=_step47.value;child.traverse(handler);}}catch(err){_didIteratorError47=true;_iteratorError47=err;}finally{try{if(!_iteratorNormalCompletion47&&_iterator47.return){_iterator47.return();}}finally{if(_didIteratorError47){throw _iteratorError47;}}}}},{key:'flatten',value:function flatten(){var annotations=[];this.traverse(function(annotation){annotations.push(annotation);});return annotations;}},{key:'descendants',value:function descendants(){var _this25=this;var annotations=[];this.traverse(function(annotation){if(annotation!==_this25){annotations.push(annotation);}});return annotations;}},{key:'setHighlighted',value:function setHighlighted(highlighted){if(highlighted){this.domElement.css('opacity','0.8');this.elTitlebar.css('box-shadow','0 0 5px #fff');this.domElement.css('z-index','1000');if(this._description){this.descriptionVisible=true;this.elDescription.fadeIn(200);this.elDescription.css('position','relative');}}else{this.domElement.css('opacity','0.5');this.elTitlebar.css('box-shadow','');this.domElement.css('z-index','100');this.descriptionVisible=false;this.elDescription.css('display','none');}this.isHighlighted=highlighted;}},{key:'hasView',value:function hasView(){var hasPosTargetView=this.cameraTarget instanceof THREE.Vector3;hasPosTargetView=hasPosTargetView&&this.cameraPosition instanceof THREE.Vector3;var hasRadiusView=this.radius!==undefined;var hasView=hasPosTargetView||hasRadiusView;return hasView;}},{key:'moveHere',value:function moveHere(camera){if(!this.hasView()){return;}var view=this.scene.view;var animationDuration=500;var easing=TWEEN.Easing.Quartic.Out;var endTarget=void 0;if(this.cameraTarget){endTarget=this.cameraTarget;}else if(this.position){endTarget=this.position;}else{endTarget=this.boundingBox.getCenter();}if(this.cameraPosition){var endPosition=this.cameraPosition;Potree.utils.moveTo(this.scene,endPosition,endTarget);//{ // animate camera position
//	let tween = new TWEEN.Tween(view.position).to(endPosition, animationDuration);
//	tween.easing(easing);
//	tween.start();
//}
//{ // animate camera target
//	let camTargetDistance = camera.position.distanceTo(endTarget);
//	let target = new THREE.Vector3().addVectors(
//		camera.position,
//		camera.getWorldDirection().clone().multiplyScalar(camTargetDistance)
//	);
//	let tween = new TWEEN.Tween(target).to(endTarget, animationDuration);
//	tween.easing(easing);
//	tween.onUpdate(() => {
//		view.lookAt(target);
//	});
//	tween.onComplete(() => {
//		view.lookAt(target);
//		this.dispatchEvent({type: 'focusing_finished', target: this});
//	});
//	this.dispatchEvent({type: 'focusing_started', target: this});
//	tween.start();
//}
    }else if(this.radius){var direction=view.direction;var _endPosition=endTarget.clone().add(direction.multiplyScalar(-this.radius));var startRadius=view.radius;var endRadius=this.radius;{// animate camera position
        var tween=new TWEEN.Tween(view.position).to(_endPosition,animationDuration);tween.easing(easing);tween.start();}{// animate radius
        var t={x:0};var _tween=new TWEEN.Tween(t).to({x:1},animationDuration).onUpdate(function(){view.radius=this.x*endRadius+(1-this.x)*startRadius;});_tween.easing(easing);_tween.start();}}}},{key:'dispose',value:function dispose(){if(this.domElement.parentElement){this.domElement.parentElement.removeChild(this.domElement);}}},{key:'toString',value:function toString(){return'Annotation: '+this._title;}},{key:'visible',get:function get(){return this._visible;},set:function set(value){if(this._visible===value){return;}this._visible=value;//this.traverse(node => {
//	node.display = value;
//});
        this.dispatchEvent({type:'visibility_changed',annotation:this});}},{key:'display',get:function get(){return this._display;},set:function set(display){if(this._display===display){return;}this._display=display;if(display){// this.domElement.fadeIn(200);
        this.domElement.show();}else{// this.domElement.fadeOut(200);
        this.domElement.hide();}}},{key:'expand',get:function get(){return this._expand;},set:function set(expand){if(this._expand===expand){return;}if(expand){this.display=false;}else{this.display=true;this.traverseDescendants(function(node){node.display=false;});}this._expand=expand;}},{key:'title',get:function get(){return this._title;},set:function set(title){if(this._title===title){return;}this._title=title;this.elTitle.empty();this.elTitle.append(this._title);}},{key:'description',get:function get(){return this._description;},set:function set(description){if(this._description===description){return;}this._description=description;var elDescriptionContent=this.elDescription.find(".annotation-description-content");elDescriptionContent.empty();elDescriptionContent.append(this._description);}}]);return _class3;}(THREE.EventDispatcher);Potree.Action=function(_THREE$EventDispatche7){_inherits(Action,_THREE$EventDispatche7);function Action(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,Action);var _this26=_possibleConstructorReturn(this,(Action.__proto__||Object.getPrototypeOf(Action)).call(this));_this26.icon=args.icon||'';_this26.tooltip=args.tooltip;if(args.onclick!==undefined){_this26.onclick=args.onclick;}return _this26;}_createClass(Action,[{key:'onclick',value:function onclick(event){}},{key:'pairWith',value:function pairWith(object){}},{key:'setIcon',value:function setIcon(newIcon){var oldIcon=this.icon;if(newIcon===oldIcon){return;}this.icon=newIcon;this.dispatchEvent({type:'icon_changed',action:this,icon:newIcon,oldIcon:oldIcon});}}]);return Action;}(THREE.EventDispatcher);Potree.Actions={};Potree.Actions.ToggleAnnotationVisibility=function(_Potree$Action){_inherits(ToggleAnnotationVisibility,_Potree$Action);function ToggleAnnotationVisibility(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,ToggleAnnotationVisibility);var _this27=_possibleConstructorReturn(this,(ToggleAnnotationVisibility.__proto__||Object.getPrototypeOf(ToggleAnnotationVisibility)).call(this,args));_this27.icon=Potree.resourcePath+'/icons/eye.svg';_this27.showIn='sidebar';_this27.tooltip='toggle visibility';return _this27;}_createClass(ToggleAnnotationVisibility,[{key:'pairWith',value:function pairWith(annotation){var _this28=this;if(annotation.visible){this.setIcon(Potree.resourcePath+'/icons/eye.svg');}else{this.setIcon(Potree.resourcePath+'/icons/eye_crossed.svg');}annotation.addEventListener('visibility_changed',function(e){var annotation=e.annotation;if(annotation.visible){_this28.setIcon(Potree.resourcePath+'/icons/eye.svg');}else{_this28.setIcon(Potree.resourcePath+'/icons/eye_crossed.svg');}});}},{key:'onclick',value:function onclick(event){var annotation=event.annotation;annotation.visible=!annotation.visible;if(annotation.visible){this.setIcon(Potree.resourcePath+'/icons/eye.svg');}else{this.setIcon(Potree.resourcePath+'/icons/eye_crossed.svg');}}}]);return ToggleAnnotationVisibility;}(Potree.Action);Potree.ProfileData=function(){function ProfileData(profile){_classCallCheck(this,ProfileData);this.profile=profile;this.segments=[];this.boundingBox=new THREE.Box3();for(var _i20=0;_i20<profile.points.length-1;_i20++){var start=profile.points[_i20];var end=profile.points[_i20+1];var startGround=new THREE.Vector3(start.x,start.y,0);var endGround=new THREE.Vector3(end.x,end.y,0);var center=new THREE.Vector3().addVectors(endGround,startGround).multiplyScalar(0.5);var length=startGround.distanceTo(endGround);var side=new THREE.Vector3().subVectors(endGround,startGround).normalize();var up=new THREE.Vector3(0,0,1);var forward=new THREE.Vector3().crossVectors(side,up).normalize();var N=forward;var cutPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(N,startGround);var halfPlane=new THREE.Plane().setFromNormalAndCoplanarPoint(side,center);var segment={start:start,end:end,cutPlane:cutPlane,halfPlane:halfPlane,length:length,points:new Potree.Points()};this.segments.push(segment);}}_createClass(ProfileData,[{key:'size',value:function size(){var size=0;var _iteratorNormalCompletion48=true;var _didIteratorError48=false;var _iteratorError48=undefined;try{for(var _iterator48=this.segments[Symbol.iterator](),_step48;!(_iteratorNormalCompletion48=(_step48=_iterator48.next()).done);_iteratorNormalCompletion48=true){var segment=_step48.value;size+=segment.points.numPoints;}}catch(err){_didIteratorError48=true;_iteratorError48=err;}finally{try{if(!_iteratorNormalCompletion48&&_iterator48.return){_iterator48.return();}}finally{if(_didIteratorError48){throw _iteratorError48;}}}return size;}}]);return ProfileData;}();Potree.ProfileRequest=function(){function ProfileRequest(pointcloud,profile,maxDepth,callback){_classCallCheck(this,ProfileRequest);this.pointcloud=pointcloud;this.profile=profile;this.maxDepth=maxDepth||Number.MAX_VALUE;this.callback=callback;this.temporaryResult=new Potree.ProfileData(this.profile);this.pointsServed=0;this.highestLevelServed=0;this.priorityQueue=new BinaryHeap(function(x){return 1/x.weight;});this.initialize();}_createClass(ProfileRequest,[{key:'initialize',value:function initialize(){this.priorityQueue.push({node:this.pointcloud.pcoGeometry.root,weight:Infinity});}},{key:'traverse',// traverse the node and add intersecting descendants to queue
    value:function traverse(node){var stack=[];for(var _i21=0;_i21<8;_i21++){var child=node.children[_i21];if(child&&this.pointcloud.nodeIntersectsProfile(child,this.profile)){stack.push(child);}}while(stack.length>0){var _node5=stack.pop();var weight=_node5.boundingSphere.radius;this.priorityQueue.push({node:_node5,weight:weight});// add children that intersect the cutting plane
        if(_node5.level<this.maxDepth){for(var _i22=0;_i22<8;_i22++){var _child2=_node5.children[_i22];if(_child2&&this.pointcloud.nodeIntersectsProfile(_child2,this.profile)){stack.push(_child2);}}}}}},{key:'update',value:function update(){if(!this.updateGeneratorInstance){this.updateGeneratorInstance=this.updateGenerator();}var result=this.updateGeneratorInstance.next();if(result.done){this.updateGeneratorInstance=null;}}},{key:'updateGenerator',value:/*#__PURE__*/regeneratorRuntime.mark(function updateGenerator(){var start,maxNodesPerUpdate,intersectedNodes,_i23,element,_node6,doTraverse,_iteratorNormalCompletion49,_didIteratorError49,_iteratorError49,_iterator49,_step49,done,index;return regeneratorRuntime.wrap(function updateGenerator$(_context){while(1){switch(_context.prev=_context.next){case 0:// load nodes in queue
// if hierarchy expands, also load nodes from expanded hierarchy
// once loaded, add data to this.points and remove node from queue
// only evaluate 1-50 nodes per frame to maintain responsiveness
        start=performance.now();maxNodesPerUpdate=1;intersectedNodes=[];_i23=0;case 4:if(!(_i23<Math.min(maxNodesPerUpdate,this.priorityQueue.size()))){_context.next=13;break;}element=this.priorityQueue.pop();_node6=element.node;if(!(_node6.level>this.maxDepth)){_context.next=9;break;}return _context.abrupt('continue',10);case 9:if(_node6.loaded){// add points to result
        intersectedNodes.push(_node6);Potree.getLRU().touch(_node6);this.highestLevelServed=Math.max(_node6.getLevel(),this.highestLevelServed);doTraverse=_node6.level%_node6.pcoGeometry.hierarchyStepSize===0&&_node6.hasChildren;doTraverse=doTraverse||_node6.getLevel()===0;if(doTraverse){this.traverse(_node6);}}else{_node6.load();this.priorityQueue.push(element);}case 10:_i23++;_context.next=4;break;case 13:if(!(intersectedNodes.length>0)){_context.next=42;break;}_iteratorNormalCompletion49=true;_didIteratorError49=false;_iteratorError49=undefined;_context.prev=17;_iterator49=this.getPointsInsideProfile(intersectedNodes,this.temporaryResult)[Symbol.iterator]();case 19:if(_iteratorNormalCompletion49=(_step49=_iterator49.next()).done){_context.next=27;break;}done=_step49.value;if(done){_context.next=24;break;}_context.next=24;return false;case 24:_iteratorNormalCompletion49=true;_context.next=19;break;case 27:_context.next=33;break;case 29:_context.prev=29;_context.t0=_context['catch'](17);_didIteratorError49=true;_iteratorError49=_context.t0;case 33:_context.prev=33;_context.prev=34;if(!_iteratorNormalCompletion49&&_iterator49.return){_iterator49.return();}case 36:_context.prev=36;if(!_didIteratorError49){_context.next=39;break;}throw _iteratorError49;case 39:return _context.finish(36);case 40:return _context.finish(33);case 41:if(this.temporaryResult.size()>100){this.pointsServed+=this.temporaryResult.size();this.callback.onProgress({request:this,points:this.temporaryResult});this.temporaryResult=new Potree.ProfileData(this.profile);}case 42:if(this.priorityQueue.size()===0){// we're done! inform callback and remove from pending requests
        if(this.temporaryResult.size()>0){this.pointsServed+=this.temporaryResult.size();this.callback.onProgress({request:this,points:this.temporaryResult});this.temporaryResult=new Potree.ProfileData(this.profile);}this.callback.onFinish({request:this});index=this.pointcloud.profileRequests.indexOf(this);if(index>=0){this.pointcloud.profileRequests.splice(index,1);}}_context.next=45;return true;case 45:case'end':return _context.stop();}}},updateGenerator,this,[[17,29,33,41],[34,,36,40]]);})},{key:'getAccepted',value:/*#__PURE__*/regeneratorRuntime.mark(function getAccepted(numPoints,node,matrix,segment,segmentDir,points,totalMileage){var checkpoint,accepted,mileage,acceptedPositions,numAccepted,pos,svp,view,_i24,distance,centerDistance,localMileage,duration;return regeneratorRuntime.wrap(function getAccepted$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:checkpoint=performance.now();accepted=new Uint32Array(numPoints);mileage=new Float64Array(numPoints);acceptedPositions=new Float32Array(numPoints*3);numAccepted=0;pos=new THREE.Vector3();svp=new THREE.Vector3();view=new Float32Array(node.geometry.attributes.position.array);_i24=0;case 9:if(!(_i24<numPoints)){_context2.next=24;break;}pos.set(view[_i24*3+0],view[_i24*3+1],view[_i24*3+2]);pos.applyMatrix4(matrix);distance=Math.abs(segment.cutPlane.distanceToPoint(pos));centerDistance=Math.abs(segment.halfPlane.distanceToPoint(pos));if(distance<this.profile.width/2&&centerDistance<segment.length/2){svp.subVectors(pos,segment.start);localMileage=segmentDir.dot(svp);accepted[numAccepted]=_i24;mileage[numAccepted]=localMileage+totalMileage;points.boundingBox.expandByPoint(pos);acceptedPositions[3*numAccepted+0]=pos.x;acceptedPositions[3*numAccepted+1]=pos.y;acceptedPositions[3*numAccepted+2]=pos.z;numAccepted++;}if(!(_i24%1000===0)){_context2.next=21;break;}duration=performance.now()-checkpoint;if(!(duration>4)){_context2.next=21;break;}_context2.next=20;return false;case 20:checkpoint=performance.now();case 21:_i24++;_context2.next=9;break;case 24:accepted=accepted.subarray(0,numAccepted);mileage=mileage.subarray(0,numAccepted);acceptedPositions=acceptedPositions.subarray(0,numAccepted*3);//let end = performance.now();
//let duration = end - start;
//console.log("accepted duration ", duration)
//console.log(`getAccepted finished`);
        _context2.next=29;return[accepted,mileage,acceptedPositions];case 29:case'end':return _context2.stop();}}},getAccepted,this);})},{key:'getPointsInsideProfile',value:/*#__PURE__*/regeneratorRuntime.mark(function getPointsInsideProfile(nodes,target){var checkpoint,totalMileage,pointsProcessed,_iteratorNormalCompletion50,_didIteratorError50,_iteratorError50,_iterator50,_step50,segment,_iteratorNormalCompletion52,_didIteratorError52,_iteratorError52,_iterator52,_step52,_ref13,_node7,numPoints,_geometry,bbWorld,bsWorld,start,end,closest,distance,intersects,sv,segmentDir,points,nodeMatrix,matrix,accepted,mileage,acceptedPositions,_iteratorNormalCompletion53,_didIteratorError53,_iteratorError53,_iterator53,_step53,result,_duration2,_result,duration,relevantAttributes,_iteratorNormalCompletion54,_didIteratorError54,_iteratorError54,_iterator54,_step54,attributeName,attribute,numElements,Type,filteredBuffer,source,_target2,_i25,index,_start2,_end2,sub,_iteratorNormalCompletion51,_didIteratorError51,_iteratorError51,_iterator51,_step51,_segment;return regeneratorRuntime.wrap(function getPointsInsideProfile$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:checkpoint=performance.now();totalMileage=0;pointsProcessed=0;_iteratorNormalCompletion50=true;_didIteratorError50=false;_iteratorError50=undefined;_context3.prev=6;_iterator50=target.segments[Symbol.iterator]();case 8:if(_iteratorNormalCompletion50=(_step50=_iterator50.next()).done){_context3.next=124;break;}segment=_step50.value;_iteratorNormalCompletion52=true;_didIteratorError52=false;_iteratorError52=undefined;_context3.prev=13;_iterator52=nodes[Symbol.iterator]();case 15:if(_iteratorNormalCompletion52=(_step52=_iterator52.next()).done){_context3.next=106;break;}_node7=_step52.value;numPoints=_node7.numPoints;_geometry=_node7.geometry;if(numPoints){_context3.next=21;break;}return _context3.abrupt('continue',103);case 21:// skip if current node doesn't intersect current segment
        bbWorld=_node7.boundingBox.clone().applyMatrix4(this.pointcloud.matrixWorld);bsWorld=bbWorld.getBoundingSphere();start=new THREE.Vector3(segment.start.x,segment.start.y,bsWorld.center.z);end=new THREE.Vector3(segment.end.x,segment.end.y,bsWorld.center.z);closest=new THREE.Line3(start,end).closestPointToPoint(bsWorld.center,true);distance=closest.distanceTo(bsWorld.center);intersects=distance<bsWorld.radius+target.profile.width;if(intersects){_context3.next=30;break;}return _context3.abrupt('continue',103);case 30://{// DEBUG
//	console.log(node.name);
//	let boxHelper = new Potree.Box3Helper(node.getBoundingBox());
//	boxHelper.matrixAutoUpdate = false;
//	boxHelper.matrix.copy(viewer.scene.pointclouds[0].matrixWorld);
//	viewer.scene.scene.add(boxHelper);
//}
        sv=new THREE.Vector3().subVectors(segment.end,segment.start).setZ(0);segmentDir=sv.clone().normalize();points=new Potree.Points();nodeMatrix=(_ref13=new THREE.Matrix4()).makeTranslation.apply(_ref13,_toConsumableArray(_node7.boundingBox.min.toArray()));matrix=new THREE.Matrix4().multiplyMatrices(this.pointcloud.matrixWorld,nodeMatrix);pointsProcessed=pointsProcessed+numPoints;accepted=null;mileage=null;acceptedPositions=null;_iteratorNormalCompletion53=true;_didIteratorError53=false;_iteratorError53=undefined;_context3.prev=42;_iterator53=this.getAccepted(numPoints,_node7,matrix,segment,segmentDir,points,totalMileage)[Symbol.iterator]();case 44:if(_iteratorNormalCompletion53=(_step53=_iterator53.next()).done){_context3.next=60;break;}result=_step53.value;if(result){_context3.next=53;break;}_duration2=performance.now()-checkpoint;//console.log(`getPointsInsideProfile yield after ${duration}ms`);
        _context3.next=50;return false;case 50:checkpoint=performance.now();_context3.next=57;break;case 53:_result=_slicedToArray(result,3);accepted=_result[0];mileage=_result[1];acceptedPositions=_result[2];case 57:_iteratorNormalCompletion53=true;_context3.next=44;break;case 60:_context3.next=66;break;case 62:_context3.prev=62;_context3.t0=_context3['catch'](42);_didIteratorError53=true;_iteratorError53=_context3.t0;case 66:_context3.prev=66;_context3.prev=67;if(!_iteratorNormalCompletion53&&_iterator53.return){_iterator53.return();}case 69:_context3.prev=69;if(!_didIteratorError53){_context3.next=72;break;}throw _iteratorError53;case 72:return _context3.finish(69);case 73:return _context3.finish(66);case 74:duration=performance.now()-checkpoint;if(!(duration>4)){_context3.next=79;break;}_context3.next=78;return false;case 78:checkpoint=performance.now();case 79:points.data.position=acceptedPositions;relevantAttributes=Object.keys(_geometry.attributes).filter(function(a){return!["position","indices"].includes(a);});_iteratorNormalCompletion54=true;_didIteratorError54=false;_iteratorError54=undefined;_context3.prev=84;for(_iterator54=relevantAttributes[Symbol.iterator]();!(_iteratorNormalCompletion54=(_step54=_iterator54.next()).done);_iteratorNormalCompletion54=true){attributeName=_step54.value;attribute=_geometry.attributes[attributeName];numElements=attribute.array.length/numPoints;if(numElements!==parseInt(numElements)){debugger;}Type=attribute.array.constructor;filteredBuffer=new Type(numElements*accepted.length);source=attribute.array;_target2=filteredBuffer;for(_i25=0;_i25<accepted.length;_i25++){index=accepted[_i25];_start2=index*numElements;_end2=_start2+numElements;sub=source.subarray(_start2,_end2);_target2.set(sub,_i25*numElements);}points.data[attributeName]=filteredBuffer;}_context3.next=92;break;case 88:_context3.prev=88;_context3.t1=_context3['catch'](84);_didIteratorError54=true;_iteratorError54=_context3.t1;case 92:_context3.prev=92;_context3.prev=93;if(!_iteratorNormalCompletion54&&_iterator54.return){_iterator54.return();}case 95:_context3.prev=95;if(!_didIteratorError54){_context3.next=98;break;}throw _iteratorError54;case 98:return _context3.finish(95);case 99:return _context3.finish(92);case 100:points.data['mileage']=mileage;points.numPoints=accepted.length;segment.points.add(points);case 103:_iteratorNormalCompletion52=true;_context3.next=15;break;case 106:_context3.next=112;break;case 108:_context3.prev=108;_context3.t2=_context3['catch'](13);_didIteratorError52=true;_iteratorError52=_context3.t2;case 112:_context3.prev=112;_context3.prev=113;if(!_iteratorNormalCompletion52&&_iterator52.return){_iterator52.return();}case 115:_context3.prev=115;if(!_didIteratorError52){_context3.next=118;break;}throw _iteratorError52;case 118:return _context3.finish(115);case 119:return _context3.finish(112);case 120:totalMileage+=segment.length;case 121:_iteratorNormalCompletion50=true;_context3.next=8;break;case 124:_context3.next=130;break;case 126:_context3.prev=126;_context3.t3=_context3['catch'](6);_didIteratorError50=true;_iteratorError50=_context3.t3;case 130:_context3.prev=130;_context3.prev=131;if(!_iteratorNormalCompletion50&&_iterator50.return){_iterator50.return();}case 133:_context3.prev=133;if(!_didIteratorError50){_context3.next=136;break;}throw _iteratorError50;case 136:return _context3.finish(133);case 137:return _context3.finish(130);case 138:_iteratorNormalCompletion51=true;_didIteratorError51=false;_iteratorError51=undefined;_context3.prev=141;for(_iterator51=target.segments[Symbol.iterator]();!(_iteratorNormalCompletion51=(_step51=_iterator51.next()).done);_iteratorNormalCompletion51=true){_segment=_step51.value;target.boundingBox.union(_segment.points.boundingBox);}//console.log(`getPointsInsideProfile finished`);
        _context3.next=149;break;case 145:_context3.prev=145;_context3.t4=_context3['catch'](141);_didIteratorError51=true;_iteratorError51=_context3.t4;case 149:_context3.prev=149;_context3.prev=150;if(!_iteratorNormalCompletion51&&_iterator51.return){_iterator51.return();}case 152:_context3.prev=152;if(!_didIteratorError51){_context3.next=155;break;}throw _iteratorError51;case 155:return _context3.finish(152);case 156:return _context3.finish(149);case 157:_context3.next=159;return true;case 159:case'end':return _context3.stop();}}},getPointsInsideProfile,this,[[6,126,130,138],[13,108,112,120],[42,62,66,74],[67,,69,73],[84,88,92,100],[93,,95,99],[113,,115,119],[131,,133,137],[141,145,149,157],[150,,152,156]]);})},{key:'finishLevelThenCancel',value:function finishLevelThenCancel(){if(this.cancelRequested){return;}this.maxDepth=this.highestLevelServed;this.cancelRequested=true;//console.log(`maxDepth: ${this.maxDepth}`);
    }},{key:'cancel',value:function cancel(){this.callback.onCancel();this.priorityQueue=new BinaryHeap(function(x){return 1/x.weight;});var index=this.pointcloud.profileRequests.indexOf(this);if(index>=0){this.pointcloud.profileRequests.splice(index,1);}}}]);return ProfileRequest;}();Potree.PointCloudOctreeNode=function(_Potree$PointCloudTre){_inherits(PointCloudOctreeNode,_Potree$PointCloudTre);function PointCloudOctreeNode(){_classCallCheck(this,PointCloudOctreeNode);var _this29=_possibleConstructorReturn(this,(PointCloudOctreeNode.__proto__||Object.getPrototypeOf(PointCloudOctreeNode)).call(this));_this29.children={};_this29.sceneNode=null;_this29.octree=null;return _this29;}_createClass(PointCloudOctreeNode,[{key:'getNumPoints',value:function getNumPoints(){return this.geometryNode.numPoints;}},{key:'isLoaded',value:function isLoaded(){return true;}},{key:'isTreeNode',value:function isTreeNode(){return true;}},{key:'isGeometryNode',value:function isGeometryNode(){return false;}},{key:'getLevel',value:function getLevel(){return this.geometryNode.level;}},{key:'getBoundingSphere',value:function getBoundingSphere(){return this.geometryNode.boundingSphere;}},{key:'getBoundingBox',value:function getBoundingBox(){return this.geometryNode.boundingBox;}},{key:'getChildren',value:function getChildren(){var children=[];for(var _i26=0;_i26<8;_i26++){if(this.children[_i26]){children.push(this.children[_i26]);}}return children;}},{key:'getPointsInBox',value:function getPointsInBox(boxNode){if(!this.sceneNode){return null;}var buffer=this.geometryNode.buffer;var posOffset=buffer.offset("position");var stride=buffer.stride;var view=new DataView(buffer.data);var worldToBox=new THREE.Matrix4().getInverse(boxNode.matrixWorld);var objectToBox=new THREE.Matrix4().multiplyMatrices(worldToBox,this.sceneNode.matrixWorld);var inBox=[];var pos=new THREE.Vector4();for(var _i27=0;_i27<buffer.numElements;_i27++){var x=view.getFloat32(_i27*stride+posOffset+0,true);var y=view.getFloat32(_i27*stride+posOffset+4,true);var z=view.getFloat32(_i27*stride+posOffset+8,true);pos.set(x,y,z,1);pos.applyMatrix4(objectToBox);if(-0.5<pos.x&&pos.x<0.5){if(-0.5<pos.y&&pos.y<0.5){if(-0.5<pos.z&&pos.z<0.5){pos.set(x,y,z,1).applyMatrix4(this.sceneNode.matrixWorld);inBox.push(new THREE.Vector3(pos.x,pos.y,pos.z));}}}}return inBox;}},{key:'name',get:function get(){return this.geometryNode.name;}}]);return PointCloudOctreeNode;}(Potree.PointCloudTreeNode);Potree.PointCloudOctree=function(_Potree$PointCloudTre2){_inherits(_class4,_Potree$PointCloudTre2);function _class4(geometry,material){_classCallCheck(this,_class4);var _this30=_possibleConstructorReturn(this,(_class4.__proto__||Object.getPrototypeOf(_class4)).call(this));_this30.pointBudget=Infinity;_this30.pcoGeometry=geometry;_this30.boundingBox=_this30.pcoGeometry.boundingBox;_this30.boundingSphere=_this30.boundingBox.getBoundingSphere();_this30.material=material||new Potree.PointCloudMaterial();_this30.visiblePointsTarget=2*1000*1000;_this30.minimumNodePixelSize=150;_this30.level=0;_this30.position.copy(geometry.offset);_this30.updateMatrix();_this30.showBoundingBox=false;_this30.boundingBoxNodes=[];_this30.loadQueue=[];_this30.visibleBounds=new THREE.Box3();_this30.visibleNodes=[];_this30.visibleGeometry=[];_this30.generateDEM=false;_this30.profileRequests=[];_this30.name='';{var box=[_this30.pcoGeometry.tightBoundingBox,_this30.getBoundingBoxWorld()].find(function(v){return v!==undefined;});_this30.updateMatrixWorld(true);box=Potree.utils.computeTransformedBoundingBox(box,_this30.matrixWorld);var bMin=box.min.z;var bMax=box.max.z;_this30.material.heightMin=bMin;_this30.material.heightMax=bMax;}// TODO read projection from file instead
    _this30.projection=geometry.projection;_this30.root=_this30.pcoGeometry.root;return _this30;}_createClass(_class4,[{key:'setName',value:function setName(name){if(this.name!==name){this.name=name;this.dispatchEvent({type:'name_changed',name:name,pointcloud:this});}}},{key:'getName',value:function getName(){return this.name;}},{key:'toTreeNode',value:function toTreeNode(geometryNode,parent){var _this31=this;var node=new Potree.PointCloudOctreeNode();// if(geometryNode.name === "r40206"){
//	console.log("creating node for r40206");
// }
        var sceneNode=new THREE.Points(geometryNode.geometry,this.material);sceneNode.name=geometryNode.name;sceneNode.position.copy(geometryNode.boundingBox.min);sceneNode.frustumCulled=false;sceneNode.onBeforeRender=function(_this,scene,camera,geometry,material,group){if(material.program){_this.getContext().useProgram(material.program.program);if(material.program.getUniforms().map.level){var level=geometryNode.getLevel();material.uniforms.level.value=level;material.program.getUniforms().map.level.setValue(_this.getContext(),level);}if(_this31.visibleNodeTextureOffsets&&material.program.getUniforms().map.vnStart){var vnStart=_this31.visibleNodeTextureOffsets.get(node);material.uniforms.vnStart.value=vnStart;material.program.getUniforms().map.vnStart.setValue(_this.getContext(),vnStart);}if(material.program.getUniforms().map.pcIndex){var _i28=node.pcIndex?node.pcIndex:_this31.visibleNodes.indexOf(node);material.uniforms.pcIndex.value=_i28;material.program.getUniforms().map.pcIndex.setValue(_this.getContext(),_i28);}}};// { // DEBUG
//	let sg = new THREE.SphereGeometry(1, 16, 16);
//	let sm = new THREE.MeshNormalMaterial();
//	let s = new THREE.Mesh(sg, sm);
//	s.scale.set(5, 5, 5);
//	s.position.copy(geometryNode.mean)
//		.add(this.position)
//		.add(geometryNode.boundingBox.min);
//
//	viewer.scene.scene.add(s);
// }
        node.geometryNode=geometryNode;node.sceneNode=sceneNode;node.pointcloud=this;node.children={};for(var key in geometryNode.children){node.children[key]=geometryNode.children[key];}if(!parent){this.root=node;this.add(sceneNode);}else{var childIndex=parseInt(geometryNode.name[geometryNode.name.length-1]);parent.sceneNode.add(sceneNode);parent.children[childIndex]=node;}var disposeListener=function disposeListener(){var childIndex=parseInt(geometryNode.name[geometryNode.name.length-1]);parent.sceneNode.remove(node.sceneNode);parent.children[childIndex]=geometryNode;};geometryNode.oneTimeDisposeHandlers.push(disposeListener);return node;}},{key:'updateVisibleBounds',value:function updateVisibleBounds(){var leafNodes=[];for(var _i29=0;_i29<this.visibleNodes.length;_i29++){var _node8=this.visibleNodes[_i29];var _isLeaf=true;for(var j=0;j<_node8.children.length;j++){var child=_node8.children[j];if(child instanceof Potree.PointCloudOctreeNode){_isLeaf=_isLeaf&&!child.sceneNode.visible;}else if(child instanceof Potree.PointCloudOctreeGeometryNode){_isLeaf=true;}}if(_isLeaf){leafNodes.push(_node8);}}this.visibleBounds.min=new THREE.Vector3(Infinity,Infinity,Infinity);this.visibleBounds.max=new THREE.Vector3(-Infinity,-Infinity,-Infinity);for(var _i30=0;_i30<leafNodes.length;_i30++){var _node9=leafNodes[_i30];this.visibleBounds.expandByPoint(_node9.getBoundingBox().min);this.visibleBounds.expandByPoint(_node9.getBoundingBox().max);}}},{key:'updateMaterial',value:function updateMaterial(material,visibleNodes,camera,renderer){material.fov=camera.fov*(Math.PI/180);material.screenWidth=renderer.domElement.clientWidth;material.screenHeight=renderer.domElement.clientHeight;material.spacing=this.pcoGeometry.spacing*Math.max(this.scale.x,this.scale.y,this.scale.z);material.near=camera.near;material.far=camera.far;material.uniforms.octreeSize.value=this.pcoGeometry.boundingBox.getSize().x;}},{key:'computeVisibilityTextureData',value:function computeVisibilityTextureData(nodes,camera){if(Potree.measureTimings)performance.mark("computeVisibilityTextureData-start");var data=new Uint8Array(nodes.length*4);var visibleNodeTextureOffsets=new Map();// copy array
        nodes=nodes.slice();// sort by level and index, e.g. r, r0, r3, r4, r01, r07, r30, ...
        var sort=function sort(a,b){var na=a.geometryNode.name;var nb=b.geometryNode.name;if(na.length!==nb.length)return na.length-nb.length;if(na<nb)return-1;if(na>nb)return 1;return 0;};nodes.sort(sort);// code sample taken from three.js src/math/Ray.js
        var v1=new THREE.Vector3();var intersectSphereBack=function intersectSphereBack(ray,sphere){v1.subVectors(sphere.center,ray.origin);var tca=v1.dot(ray.direction);var d2=v1.dot(v1)-tca*tca;var radius2=sphere.radius*sphere.radius;if(d2>radius2){return null;}var thc=Math.sqrt(radius2-d2);// t1 = second intersect point - exit point on back of sphere
            var t1=tca+thc;if(t1<0){return null;}return t1;};var lodRanges=new Map();var leafNodeLodRanges=new Map();for(var _i31=0;_i31<nodes.length;_i31++){var _node10=nodes[_i31];visibleNodeTextureOffsets.set(_node10,_i31);var children=[];for(var j=0;j<8;j++){var child=_node10.children[j];if(child&&child.constructor===Potree.PointCloudOctreeNode&&nodes.includes(child,_i31)){children.push(child);}}var spacing=_node10.geometryNode.estimatedSpacing;var isLeafNode=void 0;data[_i31*4+0]=0;data[_i31*4+1]=0;data[_i31*4+2]=0;data[_i31*4+3]=_node10.getLevel();for(var _j2=0;_j2<children.length;_j2++){var _child3=children[_j2];var index=parseInt(_child3.geometryNode.name.substr(-1));data[_i31*4+0]+=Math.pow(2,index);if(_j2===0){var vArrayIndex=nodes.indexOf(_child3,_i31);data[_i31*4+1]=vArrayIndex-_i31>>8;data[_i31*4+2]=(vArrayIndex-_i31)%256;}}{// TODO performance optimization
// for some reason, this part can be extremely slow in chrome during a debugging session, but not during profiling
            var bBox=_node10.getBoundingBox().clone();//bBox.applyMatrix4(node.sceneNode.matrixWorld);
//bBox.applyMatrix4(camera.matrixWorldInverse);
            var bSphere=bBox.getBoundingSphere();bSphere.applyMatrix4(_node10.sceneNode.matrixWorld);bSphere.applyMatrix4(camera.matrixWorldInverse);var ray=new THREE.Ray(camera.position,camera.getWorldDirection());var distance=intersectSphereBack(ray,bSphere);var distance2=bSphere.center.distanceTo(camera.position)+bSphere.radius;if(distance===null){distance=distance2;}distance=Math.max(distance,distance2);if(!lodRanges.has(_node10.getLevel())){lodRanges.set(_node10.getLevel(),distance);}else{var prevDistance=lodRanges.get(_node10.getLevel());var newDistance=Math.max(prevDistance,distance);lodRanges.set(_node10.getLevel(),newDistance);}if(!_node10.geometryNode.hasChildren){var value={distance:distance,i:_i31};leafNodeLodRanges.set(_node10,value);}}}var _iteratorNormalCompletion55=true;var _didIteratorError55=false;var _iteratorError55=undefined;try{for(var _iterator55=leafNodeLodRanges[Symbol.iterator](),_step55;!(_iteratorNormalCompletion55=(_step55=_iterator55.next()).done);_iteratorNormalCompletion55=true){var _step55$value=_slicedToArray(_step55.value,2),_node11=_step55$value[0],_value=_step55$value[1];var level=_node11.getLevel();var _distance5=_value.distance;var _i32=_value.i;if(level<4){continue;}//if(node.name === "r6646"){
//	var a = 10;
//	a = 10 * 10;
//}
            var _iteratorNormalCompletion56=true;var _didIteratorError56=false;var _iteratorError56=undefined;try{for(var _iterator56=lodRanges[Symbol.iterator](),_step56;!(_iteratorNormalCompletion56=(_step56=_iterator56.next()).done);_iteratorNormalCompletion56=true){var _step56$value=_slicedToArray(_step56.value,2),lod=_step56$value[0],range=_step56$value[1];if(_distance5<range*1.2){data[_i32*4+3]=lod;}}}catch(err){_didIteratorError56=true;_iteratorError56=err;}finally{try{if(!_iteratorNormalCompletion56&&_iterator56.return){_iterator56.return();}}finally{if(_didIteratorError56){throw _iteratorError56;}}}}//{
//	if(!window.debugSizes){
//		let msg = viewer.postMessage("abc");
//		window.debugSizes = { msg: msg};
//	}
//	let msg = window.debugSizes.msg;
//	let txt = ``;
//	for(let entry of lodRanges){
//		txt += `${entry[0]}: ${entry[1]}<br>`;
//	}
//	msg.setMessage(txt);
//}
        }catch(err){_didIteratorError55=true;_iteratorError55=err;}finally{try{if(!_iteratorNormalCompletion55&&_iterator55.return){_iterator55.return();}}finally{if(_didIteratorError55){throw _iteratorError55;}}}if(Potree.measureTimings){performance.mark("computeVisibilityTextureData-end");performance.measure("render.computeVisibilityTextureData","computeVisibilityTextureData-start","computeVisibilityTextureData-end");}return{data:data,offsets:visibleNodeTextureOffsets};}},{key:'nodeIntersectsProfile',value:function nodeIntersectsProfile(node,profile){var bbWorld=node.boundingBox.clone().applyMatrix4(this.matrixWorld);var bsWorld=bbWorld.getBoundingSphere();var intersects=false;for(var _i33=0;_i33<profile.points.length-1;_i33++){var start=new THREE.Vector3(profile.points[_i33+0].x,profile.points[_i33+0].y,bsWorld.center.z);var end=new THREE.Vector3(profile.points[_i33+1].x,profile.points[_i33+1].y,bsWorld.center.z);var closest=new THREE.Line3(start,end).closestPointToPoint(bsWorld.center,true);var distance=closest.distanceTo(bsWorld.center);intersects=intersects||distance<bsWorld.radius+profile.width;}//console.log(`${node.name}: ${intersects}`);
        return intersects;}},{key:'nodesOnRay',value:function nodesOnRay(nodes,ray){var nodesOnRay=[];var _ray=ray.clone();for(var _i34=0;_i34<nodes.length;_i34++){var _node12=nodes[_i34];// let inverseWorld = new THREE.Matrix4().getInverse(node.matrixWorld);
// let sphere = node.getBoundingSphere().clone().applyMatrix4(node.sceneNode.matrixWorld);
        var sphere=_node12.getBoundingSphere().clone().applyMatrix4(this.matrixWorld);if(_ray.intersectsSphere(sphere)){nodesOnRay.push(_node12);}}return nodesOnRay;}},{key:'updateMatrixWorld',value:function updateMatrixWorld(force){if(this.matrixAutoUpdate===true)this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||force===true){if(!this.parent){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}}},{key:'hideDescendants',value:function hideDescendants(object){var stack=[];for(var _i35=0;_i35<object.children.length;_i35++){var child=object.children[_i35];if(child.visible){stack.push(child);}}while(stack.length>0){var _object=stack.shift();_object.visible=false;for(var _i36=0;_i36<_object.children.length;_i36++){var _child4=_object.children[_i36];if(_child4.visible){stack.push(_child4);}}}}},{key:'moveToOrigin',value:function moveToOrigin(){this.position.set(0,0,0);this.updateMatrixWorld(true);var box=this.boundingBox;var transform=this.matrixWorld;var tBox=Potree.utils.computeTransformedBoundingBox(box,transform);this.position.set(0,0,0).sub(tBox.getCenter());}},{key:'moveToGroundPlane',value:function moveToGroundPlane(){this.updateMatrixWorld(true);var box=this.boundingBox;var transform=this.matrixWorld;var tBox=Potree.utils.computeTransformedBoundingBox(box,transform);this.position.y+=-tBox.min.y;}},{key:'getBoundingBoxWorld',value:function getBoundingBoxWorld(){this.updateMatrixWorld(true);var box=this.boundingBox;var transform=this.matrixWorld;var tBox=Potree.utils.computeTransformedBoundingBox(box,transform);return tBox;}},{key:'getPointsInProfile',/**
     * returns points inside the profile points
     *
     * maxDepth:		search points up to the given octree depth
     *
     *
     * The return value is an array with all segments of the profile path
     *  let segment = {
     * 		start: 	THREE.Vector3,
     * 		end: 	THREE.Vector3,
     * 		points: {}
     * 		project: function()
     *  };
     *
     * The project() function inside each segment can be used to transform
     * that segments point coordinates to line up along the x-axis.
     *
     *
     */value:function getPointsInProfile(profile,maxDepth,callback){if(callback){var request=new Potree.ProfileRequest(this,profile,maxDepth,callback);this.profileRequests.push(request);return request;}var points={segments:[],boundingBox:new THREE.Box3(),projectedBoundingBox:new THREE.Box2()};// evaluate segments
        for(var _i37=0;_i37<profile.points.length-1;_i37++){var start=profile.points[_i37];var end=profile.points[_i37+1];var ps=this.getProfile(start,end,profile.width,maxDepth);var segment={start:start,end:end,points:ps,project:null};points.segments.push(segment);points.boundingBox.expandByPoint(ps.boundingBox.min);points.boundingBox.expandByPoint(ps.boundingBox.max);}// add projection functions to the segments
        var mileage=new THREE.Vector3();for(var _i38=0;_i38<points.segments.length;_i38++){var _segment2=points.segments[_i38];var _start3=_segment2.start;var _end3=_segment2.end;var project=function(_start,_end,_mileage,_boundingBox){var start=_start;var end=_end;var mileage=_mileage;var boundingBox=_boundingBox;var xAxis=new THREE.Vector3(1,0,0);var dir=new THREE.Vector3().subVectors(end,start);dir.y=0;dir.normalize();var alpha=Math.acos(xAxis.dot(dir));if(dir.z>0){alpha=-alpha;}return function(position){var toOrigin=new THREE.Matrix4().makeTranslation(-start.x,-boundingBox.min.y,-start.z);var alignWithX=new THREE.Matrix4().makeRotationY(-alpha);var applyMileage=new THREE.Matrix4().makeTranslation(mileage.x,0,0);var pos=position.clone();pos.applyMatrix4(toOrigin);pos.applyMatrix4(alignWithX);pos.applyMatrix4(applyMileage);return pos;};}(_start3,_end3,mileage.clone(),points.boundingBox.clone());_segment2.project=project;mileage.x+=new THREE.Vector3(_start3.x,0,_start3.z).distanceTo(new THREE.Vector3(_end3.x,0,_end3.z));mileage.y+=_end3.y-_start3.y;}points.projectedBoundingBox.min.x=0;points.projectedBoundingBox.min.y=points.boundingBox.min.y;points.projectedBoundingBox.max.x=mileage.x;points.projectedBoundingBox.max.y=points.boundingBox.max.y;return points;}/**
     * returns points inside the given profile bounds.
     *
     * start:
     * end:
     * width:
     * depth:		search points up to the given octree depth
     * callback:	if specified, points are loaded before searching
     *
     *
     */},{key:'getProfile',value:function getProfile(start,end,width,depth,callback){var request=new Potree.ProfileRequest(start,end,width,depth,callback);this.profileRequests.push(request);}},{key:'getVisibleExtent',value:function getVisibleExtent(){return this.visibleBounds.applyMatrix4(this.matrixWorld);}},{key:'pick',/**
     *
     *
     *
     * params.pickWindowSize:	Look for points inside a pixel window of this size.
     * 							Use odd values: 1, 3, 5, ...
     *
     *
     * TODO: only draw pixels that are actually read with readPixels().
     *
     */value:function pick(viewer,camera,ray){var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var renderer=viewer.renderer;var pRenderer=viewer.pRenderer;performance.mark("pick-start");var getVal=function getVal(a,b){return a!==undefined?a:b;};var pickWindowSize=getVal(params.pickWindowSize,17);var pickOutsideClipRegion=getVal(params.pickOutsideClipRegion,false);var size=renderer.getSize();var width=Math.ceil(getVal(params.width,size.width));var height=Math.ceil(getVal(params.height,size.height));var pointSizeType=getVal(params.pointSizeType,this.material.pointSizeType);var pointSize=getVal(params.pointSize,this.material.size);var nodes=this.nodesOnRay(this.visibleNodes,ray);if(nodes.length===0){return null;}if(!this.pickState){var scene=new THREE.Scene();var material=new Potree.PointCloudMaterial();material.pointColorType=Potree.PointColorType.POINT_INDEX;var renderTarget=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat});this.pickState={renderTarget:renderTarget,material:material,scene:scene};};var pickState=this.pickState;var pickMaterial=pickState.material;{// update pick material
        pickMaterial.pointSizeType=pointSizeType;pickMaterial.shape=this.material.shape;pickMaterial.size=pointSize;pickMaterial.uniforms.minSize.value=this.material.uniforms.minSize.value;pickMaterial.uniforms.maxSize.value=this.material.uniforms.maxSize.value;pickMaterial.classification=this.material.classification;if(params.pickClipped){pickMaterial.clipBoxes=this.material.clipBoxes;if(this.material.clipTask===Potree.ClipTask.HIGHLIGHT){pickMaterial.clipTask=Potree.ClipTask.NONE;}else{pickMaterial.clipTask=this.material.clipTask;}}else{pickMaterial.clipBoxes=[];}this.updateMaterial(pickMaterial,nodes,camera,renderer);}pickState.renderTarget.setSize(width,height);var pixelPos=new THREE.Vector2(params.x,params.y);var gl=renderer.getContext();gl.enable(gl.SCISSOR_TEST);gl.scissor(parseInt(pixelPos.x-(pickWindowSize-1)/2),parseInt(pixelPos.y-(pickWindowSize-1)/2),parseInt(pickWindowSize),parseInt(pickWindowSize));renderer.state.buffers.depth.setTest(pickMaterial.depthTest);renderer.state.buffers.depth.setMask(pickMaterial.depthWrite);renderer.state.setBlending(THREE.NoBlending);{// RENDER
        renderer.setRenderTarget(pickState.renderTarget);gl.clearColor(0,0,0,0);renderer.clearTarget(pickState.renderTarget,true,true,true);var tmp=this.material;this.material=pickMaterial;pRenderer.renderOctree(this,nodes,camera,pickState.renderTarget);this.material=tmp;}var clamp=function clamp(number,min,max){return Math.min(Math.max(min,number),max);};var x=parseInt(clamp(pixelPos.x-(pickWindowSize-1)/2,0,width));var y=parseInt(clamp(pixelPos.y-(pickWindowSize-1)/2,0,height));var w=parseInt(Math.min(x+pickWindowSize,width)-x);var h=parseInt(Math.min(y+pickWindowSize,height)-y);var pixelCount=w*h;var buffer=new Uint8Array(4*pixelCount);gl.readPixels(x,y,pickWindowSize,pickWindowSize,gl.RGBA,gl.UNSIGNED_BYTE,buffer);renderer.setRenderTarget(null);renderer.resetGLState();renderer.setScissorTest(false);gl.disable(gl.SCISSOR_TEST);var pixels=buffer;var ibuffer=new Uint32Array(buffer.buffer);// find closest hit inside pixelWindow boundaries
        var min=Number.MAX_VALUE;var hits=[];for(var u=0;u<pickWindowSize;u++){for(var v=0;v<pickWindowSize;v++){var offset=u+v*pickWindowSize;var distance=Math.pow(u-(pickWindowSize-1)/2,2)+Math.pow(v-(pickWindowSize-1)/2,2);var pcIndex=pixels[4*offset+3];pixels[4*offset+3]=0;var pIndex=ibuffer[offset];if(!(pcIndex===0&&pIndex===0)&&pcIndex!==undefined&&pIndex!==undefined){var hit={pIndex:pIndex,pcIndex:pcIndex,distanceToCenter:distance};if(params.all){hits.push(hit);}else{if(hits.length>0){if(distance<hits[0].distanceToCenter){hits[0]=hit;}}else{hits.push(hit);}}}}}//{ // open window with image
//	let img = Potree.utils.pixelsArrayToImage(buffer, w, h);
//	let screenshot = img.src;
//
//	if(!this.debugDIV){
//		this.debugDIV = $(`
//			<div id="pickDebug"
//			style="position: absolute;
//			right: 400px; width: 300px;
//			bottom: 44px; width: 300px;
//			z-index: 1000;
//			"></div>`);
//		$(document.body).append(this.debugDIV);
//	}
//
//	this.debugDIV.empty();
//	this.debugDIV.append($(`<img src="${screenshot}"
//		style="transform: scaleY(-1); width: 300px"/>`));
//	//$(this.debugWindow.document).append($(`<img src="${screenshot}"/>`));
//	//this.debugWindow.document.write('<img src="'+screenshot+'"/>');
//}
        var _iteratorNormalCompletion57=true;var _didIteratorError57=false;var _iteratorError57=undefined;try{for(var _iterator57=hits[Symbol.iterator](),_step57;!(_iteratorNormalCompletion57=(_step57=_iterator57.next()).done);_iteratorNormalCompletion57=true){var _hit=_step57.value;var point={};if(!nodes[_hit.pcIndex]){return null;}var _node13=nodes[_hit.pcIndex];var pc=_node13.sceneNode;var _geometry2=_node13.geometryNode.geometry;for(var attributeName in _geometry2.attributes){var attribute=_geometry2.attributes[attributeName];if(attributeName==='position'){var _x16=attribute.array[3*_hit.pIndex+0];var _y=attribute.array[3*_hit.pIndex+1];var z=attribute.array[3*_hit.pIndex+2];var position=new THREE.Vector3(_x16,_y,z);position.applyMatrix4(pc.matrixWorld);point[attributeName]=position;}else if(attributeName==='indices'){}else{//if (values.itemSize === 1) {
//	point[attribute.name] = values.array[hit.pIndex];
//} else {
//	let value = [];
//	for (let j = 0; j < values.itemSize; j++) {
//		value.push(values.array[values.itemSize * hit.pIndex + j]);
//	}
//	point[attribute.name] = value;
//}
        }}_hit.point=point;}}catch(err){_didIteratorError57=true;_iteratorError57=err;}finally{try{if(!_iteratorNormalCompletion57&&_iterator57.return){_iterator57.return();}}finally{if(_didIteratorError57){throw _iteratorError57;}}}performance.mark("pick-end");performance.measure("pick","pick-start","pick-end");if(params.all){return hits.map(function(hit){return hit.point;});}else{if(hits.length===0){return null;}else{return hits[0].point;//let sorted = hits.sort( (a, b) => a.distanceToCenter - b.distanceToCenter);
//return sorted[0].point;
        }}}},{key:'getFittedBoxGen',value:/*#__PURE__*/regeneratorRuntime.mark(function getFittedBoxGen(boxNode){var start,shrinkedLocalBounds,worldToBox,_iteratorNormalCompletion58,_didIteratorError58,_iteratorError58,_iterator58,_step58,_node14,buffer,posOffset,stride,view,objectToBox,pos,_i39,x,y,z,fittedPosition,fitted,ds,duration;return regeneratorRuntime.wrap(function getFittedBoxGen$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:start=performance.now();shrinkedLocalBounds=new THREE.Box3();worldToBox=new THREE.Matrix4().getInverse(boxNode.matrixWorld);_iteratorNormalCompletion58=true;_didIteratorError58=false;_iteratorError58=undefined;_context4.prev=6;_iterator58=this.visibleNodes[Symbol.iterator]();case 8:if(_iteratorNormalCompletion58=(_step58=_iterator58.next()).done){_context4.next=24;break;}_node14=_step58.value;if(_node14.sceneNode){_context4.next=12;break;}return _context4.abrupt('continue',21);case 12:buffer=_node14.geometryNode.buffer;posOffset=buffer.offset("position");stride=buffer.stride;view=new DataView(buffer.data);objectToBox=new THREE.Matrix4().multiplyMatrices(worldToBox,_node14.sceneNode.matrixWorld);pos=new THREE.Vector4();for(_i39=0;_i39<buffer.numElements;_i39++){x=view.getFloat32(_i39*stride+posOffset+0,true);y=view.getFloat32(_i39*stride+posOffset+4,true);z=view.getFloat32(_i39*stride+posOffset+8,true);pos.set(x,y,z,1);pos.applyMatrix4(objectToBox);if(-0.5<pos.x&&pos.x<0.5){if(-0.5<pos.y&&pos.y<0.5){if(-0.5<pos.z&&pos.z<0.5){shrinkedLocalBounds.expandByPoint(pos);}}}}_context4.next=21;return;case 21:_iteratorNormalCompletion58=true;_context4.next=8;break;case 24:_context4.next=30;break;case 26:_context4.prev=26;_context4.t0=_context4['catch'](6);_didIteratorError58=true;_iteratorError58=_context4.t0;case 30:_context4.prev=30;_context4.prev=31;if(!_iteratorNormalCompletion58&&_iterator58.return){_iterator58.return();}case 33:_context4.prev=33;if(!_didIteratorError58){_context4.next=36;break;}throw _iteratorError58;case 36:return _context4.finish(33);case 37:return _context4.finish(30);case 38:fittedPosition=shrinkedLocalBounds.getCenter().applyMatrix4(boxNode.matrixWorld);fitted=new THREE.Object3D();fitted.position.copy(fittedPosition);fitted.scale.copy(boxNode.scale);fitted.rotation.copy(boxNode.rotation);ds=new THREE.Vector3().subVectors(shrinkedLocalBounds.max,shrinkedLocalBounds.min);fitted.scale.multiply(ds);duration=performance.now()-start;console.log("duration: ",duration);_context4.next=49;return fitted;case 49:case'end':return _context4.stop();}}},getFittedBoxGen,this,[[6,26,30,38],[31,,33,37]]);})},{key:'getFittedBox',value:function getFittedBox(boxNode){var maxLevel=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Infinity;maxLevel=Infinity;var start=performance.now();var shrinkedLocalBounds=new THREE.Box3();var worldToBox=new THREE.Matrix4().getInverse(boxNode.matrixWorld);var _iteratorNormalCompletion59=true;var _didIteratorError59=false;var _iteratorError59=undefined;try{for(var _iterator59=this.visibleNodes[Symbol.iterator](),_step59;!(_iteratorNormalCompletion59=(_step59=_iterator59.next()).done);_iteratorNormalCompletion59=true){var _node15=_step59.value;if(!_node15.sceneNode||_node15.getLevel()>maxLevel){continue;}var buffer=_node15.geometryNode.buffer;var posOffset=buffer.offset("position");var stride=buffer.stride;var view=new DataView(buffer.data);var objectToBox=new THREE.Matrix4().multiplyMatrices(worldToBox,_node15.sceneNode.matrixWorld);var pos=new THREE.Vector4();for(var _i40=0;_i40<buffer.numElements;_i40++){var x=view.getFloat32(_i40*stride+posOffset+0,true);var y=view.getFloat32(_i40*stride+posOffset+4,true);var z=view.getFloat32(_i40*stride+posOffset+8,true);pos.set(x,y,z,1);pos.applyMatrix4(objectToBox);if(-0.5<pos.x&&pos.x<0.5){if(-0.5<pos.y&&pos.y<0.5){if(-0.5<pos.z&&pos.z<0.5){shrinkedLocalBounds.expandByPoint(pos);}}}}}}catch(err){_didIteratorError59=true;_iteratorError59=err;}finally{try{if(!_iteratorNormalCompletion59&&_iterator59.return){_iterator59.return();}}finally{if(_didIteratorError59){throw _iteratorError59;}}}var fittedPosition=shrinkedLocalBounds.getCenter().applyMatrix4(boxNode.matrixWorld);var fitted=new THREE.Object3D();fitted.position.copy(fittedPosition);fitted.scale.copy(boxNode.scale);fitted.rotation.copy(boxNode.rotation);var ds=new THREE.Vector3().subVectors(shrinkedLocalBounds.max,shrinkedLocalBounds.min);fitted.scale.multiply(ds);var duration=performance.now()-start;console.log("duration: ",duration);return fitted;}},{key:'progress',get:function get(){return this.visibleNodes.length/this.visibleGeometry.length;}}]);return _class4;}(Potree.PointCloudTree);Potree.PointCloudOctreeGeometry=function PointCloudOctreeGeometry(){_classCallCheck(this,PointCloudOctreeGeometry);this.url=null;this.octreeDir=null;this.spacing=0;this.boundingBox=null;this.root=null;this.nodes=null;this.pointAttributes=null;this.hierarchyStepSize=-1;this.loader=null;};Potree.PointCloudOctreeGeometryNode=function(_Potree$PointCloudTre3){_inherits(PointCloudOctreeGeometryNode,_Potree$PointCloudTre3);function PointCloudOctreeGeometryNode(name,pcoGeometry,boundingBox){_classCallCheck(this,PointCloudOctreeGeometryNode);var _this32=_possibleConstructorReturn(this,(PointCloudOctreeGeometryNode.__proto__||Object.getPrototypeOf(PointCloudOctreeGeometryNode)).call(this));_this32.id=Potree.PointCloudOctreeGeometryNode.IDCount++;_this32.name=name;_this32.index=parseInt(name.charAt(name.length-1));_this32.pcoGeometry=pcoGeometry;_this32.geometry=null;_this32.boundingBox=boundingBox;_this32.boundingSphere=boundingBox.getBoundingSphere();_this32.children={};_this32.numPoints=0;_this32.level=null;_this32.loaded=false;_this32.oneTimeDisposeHandlers=[];return _this32;}_createClass(PointCloudOctreeGeometryNode,[{key:'isGeometryNode',value:function isGeometryNode(){return true;}},{key:'getLevel',value:function getLevel(){return this.level;}},{key:'isTreeNode',value:function isTreeNode(){return false;}},{key:'isLoaded',value:function isLoaded(){return this.loaded;}},{key:'getBoundingSphere',value:function getBoundingSphere(){return this.boundingSphere;}},{key:'getBoundingBox',value:function getBoundingBox(){return this.boundingBox;}},{key:'getChildren',value:function getChildren(){var children=[];for(var _i41=0;_i41<8;_i41++){if(this.children[_i41]){children.push(this.children[_i41]);}}return children;}},{key:'getBoundingBox',value:function getBoundingBox(){return this.boundingBox;}},{key:'getURL',value:function getURL(){var url='';var version=this.pcoGeometry.loader.version;if(version.equalOrHigher('1.5')){url=this.pcoGeometry.octreeDir+'/'+this.getHierarchyPath()+'/'+this.name;}else if(version.equalOrHigher('1.4')){url=this.pcoGeometry.octreeDir+'/'+this.name;}else if(version.upTo('1.3')){url=this.pcoGeometry.octreeDir+'/'+this.name;}return url;}},{key:'getHierarchyPath',value:function getHierarchyPath(){var path='r/';var hierarchyStepSize=this.pcoGeometry.hierarchyStepSize;var indices=this.name.substr(1);var numParts=Math.floor(indices.length/hierarchyStepSize);for(var _i42=0;_i42<numParts;_i42++){path+=indices.substr(_i42*hierarchyStepSize,hierarchyStepSize)+'/';}path=path.slice(0,-1);return path;}},{key:'addChild',value:function addChild(child){this.children[child.index]=child;child.parent=this;}},{key:'load',value:function load(){if(this.loading===true||this.loaded===true||Potree.numNodesLoading>=Potree.maxNodesLoading){return;}this.loading=true;Potree.numNodesLoading++;if(this.pcoGeometry.loader.version.equalOrHigher('1.5')){if(this.level%this.pcoGeometry.hierarchyStepSize===0&&this.hasChildren){this.loadHierachyThenPoints();}else{this.loadPoints();}}else{this.loadPoints();}}},{key:'loadPoints',value:function loadPoints(){this.pcoGeometry.loader.load(this);}},{key:'loadHierachyThenPoints',value:function loadHierachyThenPoints(){var node=this;// load hierarchy
        var callback=function callback(node,hbuffer){var view=new DataView(hbuffer);var stack=[];var children=view.getUint8(0);var numPoints=view.getUint32(1,true);node.numPoints=numPoints;stack.push({children:children,numPoints:numPoints,name:node.name});var decoded=[];var offset=5;while(stack.length>0){var snode=stack.shift();var mask=1;for(var _i43=0;_i43<8;_i43++){if((snode.children&mask)!==0){var childName=snode.name+_i43;var childChildren=view.getUint8(offset);var childNumPoints=view.getUint32(offset+1,true);stack.push({children:childChildren,numPoints:childNumPoints,name:childName});decoded.push({children:childChildren,numPoints:childNumPoints,name:childName});offset+=5;}mask=mask*2;}if(offset===hbuffer.byteLength){break;}}// console.log(decoded);
            var nodes={};nodes[node.name]=node;var pco=node.pcoGeometry;for(var _i44=0;_i44<decoded.length;_i44++){var name=decoded[_i44].name;var decodedNumPoints=decoded[_i44].numPoints;var index=parseInt(name.charAt(name.length-1));var parentName=name.substring(0,name.length-1);var parentNode=nodes[parentName];var level=name.length-1;var boundingBox=Potree.POCLoader.createChildAABB(parentNode.boundingBox,index);var currentNode=new Potree.PointCloudOctreeGeometryNode(name,pco,boundingBox);currentNode.level=level;currentNode.numPoints=decodedNumPoints;currentNode.hasChildren=decoded[_i44].children>0;currentNode.spacing=pco.spacing/Math.pow(2,level);parentNode.addChild(currentNode);nodes[name]=currentNode;}node.loadPoints();};if(node.level%node.pcoGeometry.hierarchyStepSize===0){// let hurl = node.pcoGeometry.octreeDir + "/../hierarchy/" + node.name + ".hrc";
            var hurl=node.pcoGeometry.octreeDir+'/'+node.getHierarchyPath()+'/'+node.name+'.hrc';var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',hurl,true);xhr.responseType='arraybuffer';xhr.overrideMimeType('text/plain; charset=x-user-defined');xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){var hbuffer=xhr.response;callback(node,hbuffer);}else{console.log('Failed to load file! HTTP status: '+xhr.status+', file: '+hurl);Potree.numNodesLoading--;}}};try{xhr.send(null);}catch(e){console.log('fehler beim laden der punktwolke: '+e);}}}},{key:'getNumPoints',value:function getNumPoints(){return this.numPoints;}},{key:'dispose',value:function dispose(){if(this.geometry&&this.parent!=null){this.geometry.dispose();this.geometry=null;this.loaded=false;// this.dispatchEvent( { type: 'dispose' } );
        for(var _i45=0;_i45<this.oneTimeDisposeHandlers.length;_i45++){var handler=this.oneTimeDisposeHandlers[_i45];handler();}this.oneTimeDisposeHandlers=[];}}}]);return PointCloudOctreeGeometryNode;}(Potree.PointCloudTreeNode);Potree.PointCloudOctreeGeometryNode.IDCount=0;Object.assign(Potree.PointCloudOctreeGeometryNode.prototype,THREE.EventDispatcher.prototype);Potree.PointCloudGreyhoundGeometry=function(){this.spacing=0;this.boundingBox=null;this.root=null;this.nodes=null;this.pointAttributes={};this.hierarchyStepSize=-1;this.loader=null;this.schema=null;this.baseDepth=null;this.offset=null;this.projection=null;this.boundingSphere=null;// the serverURL will contain the base URL of the greyhound server. f.e. http://dev.greyhound.io/resource/autzen/
    this.serverURL=null;this.normalize={color:false,intensity:false};};Potree.PointCloudGreyhoundGeometryNode=function(name,pcoGeometry,boundingBox,scale,offset){this.id=Potree.PointCloudGreyhoundGeometryNode.IDCount++;this.name=name;this.index=parseInt(name.charAt(name.length-1));this.pcoGeometry=pcoGeometry;this.geometry=null;this.boundingBox=boundingBox;this.boundingSphere=boundingBox.getBoundingSphere();this.scale=scale;this.offset=offset;this.children={};this.numPoints=0;this.level=null;this.loaded=false;this.oneTimeDisposeHandlers=[];this.baseLoaded=false;var bounds=this.boundingBox.clone();bounds.min.sub(this.pcoGeometry.boundingBox.getCenter());bounds.max.sub(this.pcoGeometry.boundingBox.getCenter());if(this.scale){bounds.min.multiplyScalar(1/this.scale);bounds.max.multiplyScalar(1/this.scale);}// This represents the bounds for this node in the reference frame of the
// global bounds from `info`, centered around the origin, and then scaled
// by our selected scale.
    this.greyhoundBounds=bounds;// This represents the offset between the coordinate system described above
// and our pcoGeometry bounds.
    this.greyhoundOffset=this.pcoGeometry.offset.clone().add(this.pcoGeometry.boundingBox.getSize().multiplyScalar(0.5));};Potree.PointCloudGreyhoundGeometryNode.IDCount=0;Potree.PointCloudGreyhoundGeometryNode.prototype=Object.create(Potree.PointCloudTreeNode.prototype);Potree.PointCloudGreyhoundGeometryNode.prototype.isGeometryNode=function(){return true;};Potree.PointCloudGreyhoundGeometryNode.prototype.isTreeNode=function(){return false;};Potree.PointCloudGreyhoundGeometryNode.prototype.isLoaded=function(){return this.loaded;};Potree.PointCloudGreyhoundGeometryNode.prototype.getBoundingSphere=function(){return this.boundingSphere;};Potree.PointCloudGreyhoundGeometryNode.prototype.getBoundingBox=function(){return this.boundingBox;};Potree.PointCloudGreyhoundGeometryNode.prototype.getLevel=function(){return this.level;};Potree.PointCloudGreyhoundGeometryNode.prototype.getChildren=function(){var children=[];for(var _i46=0;_i46<8;++_i46){if(this.children[_i46]){children.push(this.children[_i46]);}}return children;};Potree.PointCloudGreyhoundGeometryNode.prototype.getURL=function(){var schema=this.pcoGeometry.schema;var bounds=this.greyhoundBounds;var boundsString=bounds.min.x+','+bounds.min.y+','+bounds.min.z+','+bounds.max.x+','+bounds.max.y+','+bounds.max.z;var url=''+this.pcoGeometry.serverURL+'read?depthBegin='+(this.baseLoaded?this.level+this.pcoGeometry.baseDepth:0)+'&depthEnd='+(this.level+this.pcoGeometry.baseDepth+1)+'&bounds=['+boundsString+']'+'&schema='+JSON.stringify(schema)+'&compress=true';if(this.scale){url+='&scale='+this.scale;}if(this.greyhoundOffset){var offset=this.greyhoundOffset;url+='&offset=['+offset.x+','+offset.y+','+offset.z+']';}if(!this.baseLoaded)this.baseLoaded=true;return url;};Potree.PointCloudGreyhoundGeometryNode.prototype.addChild=function(child){this.children[child.index]=child;child.parent=this;};Potree.PointCloudGreyhoundGeometryNode.prototype.load=function(){if(this.loading===true||this.loaded===true||Potree.numNodesLoading>=Potree.maxNodesLoading){return;}this.loading=true;Potree.numNodesLoading++;if(this.level%this.pcoGeometry.hierarchyStepSize===0&&this.hasChildren){this.loadHierarchyThenPoints();}else{this.loadPoints();}};Potree.PointCloudGreyhoundGeometryNode.prototype.loadPoints=function(){this.pcoGeometry.loader.load(this);};Potree.PointCloudGreyhoundGeometryNode.prototype.loadHierarchyThenPoints=function(){// From Greyhound (Cartesian) ordering for the octree to Potree-default
    var transform=[0,2,1,3,4,6,5,7];var makeBitMask=function makeBitMask(node){var mask=0;Object.keys(node).forEach(function(key){if(key==='swd')mask+=1<<transform[0];else if(key==='nwd')mask+=1<<transform[1];else if(key==='swu')mask+=1<<transform[2];else if(key==='nwu')mask+=1<<transform[3];else if(key==='sed')mask+=1<<transform[4];else if(key==='ned')mask+=1<<transform[5];else if(key==='seu')mask+=1<<transform[6];else if(key==='neu')mask+=1<<transform[7];});return mask;};var parseChildrenCounts=function parseChildrenCounts(base,parentName,stack){var keys=Object.keys(base);var child=void 0;var childName=void 0;keys.forEach(function(key){if(key==='n')return;switch(key){case'swd':child=base.swd;childName=parentName+transform[0];break;case'nwd':child=base.nwd;childName=parentName+transform[1];break;case'swu':child=base.swu;childName=parentName+transform[2];break;case'nwu':child=base.nwu;childName=parentName+transform[3];break;case'sed':child=base.sed;childName=parentName+transform[4];break;case'ned':child=base.ned;childName=parentName+transform[5];break;case'seu':child=base.seu;childName=parentName+transform[6];break;case'neu':child=base.neu;childName=parentName+transform[7];break;default:break;}stack.push({children:makeBitMask(child),numPoints:child.n,name:childName});parseChildrenCounts(child,childName,stack);});};// Load hierarchy.
    var callback=function callback(node,greyhoundHierarchy){var decoded=[];node.numPoints=greyhoundHierarchy.n;parseChildrenCounts(greyhoundHierarchy,node.name,decoded);var nodes={};nodes[node.name]=node;var pgg=node.pcoGeometry;for(var _i47=0;_i47<decoded.length;_i47++){var name=decoded[_i47].name;var numPoints=decoded[_i47].numPoints;var index=parseInt(name.charAt(name.length-1));var parentName=name.substring(0,name.length-1);var parentNode=nodes[parentName];var level=name.length-1;var boundingBox=Potree.GreyhoundLoader.createChildAABB(parentNode.boundingBox,index);var currentNode=new Potree.PointCloudGreyhoundGeometryNode(name,pgg,boundingBox,node.scale,node.offset);currentNode.level=level;currentNode.numPoints=numPoints;currentNode.hasChildren=decoded[_i47].children>0;currentNode.spacing=pgg.spacing/Math.pow(2,level);parentNode.addChild(currentNode);nodes[name]=currentNode;}node.loadPoints();};if(this.level%this.pcoGeometry.hierarchyStepSize===0){var depthBegin=this.level+this.pcoGeometry.baseDepth;var depthEnd=depthBegin+this.pcoGeometry.hierarchyStepSize+2;var bounds=this.greyhoundBounds;var boundsString=bounds.min.x+','+bounds.min.y+','+bounds.min.z+','+bounds.max.x+','+bounds.max.y+','+bounds.max.z;var hurl=''+this.pcoGeometry.serverURL+'hierarchy?bounds=['+boundsString+']'+'&depthBegin='+depthBegin+'&depthEnd='+depthEnd;if(this.scale){hurl+='&scale='+this.scale;}if(this.greyhoundOffset){var offset=this.greyhoundOffset;hurl+='&offset=['+offset.x+','+offset.y+','+offset.z+']';}var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',hurl,true);var that=this;xhr.onreadystatechange=function(){if(xhr.readyState===4){if(xhr.status===200||xhr.status===0){var greyhoundHierarchy=JSON.parse(xhr.responseText)||{};callback(that,greyhoundHierarchy);}else{console.log('Failed to load file! HTTP status:',xhr.status,'file:',hurl);}}};try{xhr.send(null);}catch(e){console.log('fehler beim laden der punktwolke: '+e);}}};Potree.PointCloudGreyhoundGeometryNode.prototype.getNumPoints=function(){return this.numPoints;};Potree.PointCloudGreyhoundGeometryNode.prototype.dispose=function(){if(this.geometry&&this.parent!=null){this.geometry.dispose();this.geometry=null;this.loaded=false;// this.dispatchEvent( { type: 'dispose' } );
    for(var _i48=0;_i48<this.oneTimeDisposeHandlers.length;_i48++){var handler=this.oneTimeDisposeHandlers[_i48];handler();}this.oneTimeDisposeHandlers=[];}};// THREE.EventDispatcher.prototype.apply(
//        Potree.PointCloudGreyhoundGeometryNode.prototype);
Object.assign(Potree.PointCloudGreyhoundGeometryNode.prototype,THREE.EventDispatcher.prototype);Potree.utils=function(){function _class5(){_classCallCheck(this,_class5);}_createClass(_class5,null,[{key:'loadShapefileFeatures',value:function loadShapefileFeatures(file,callback){var features=[];var handleFinish=function handleFinish(){callback(features);};shapefile.open(file).then(function(source){source.read().then(function log(result){if(result.done){handleFinish();return;}// console.log(result.value);
        if(result.value&&result.value.type==='Feature'&&result.value.geometry!==undefined){features.push(result.value);}return source.read().then(log);});});}},{key:'toString',value:function toString(value){if(value instanceof THREE.Vector3){return value.x.toFixed(2)+', '+value.y.toFixed(2)+', '+value.z.toFixed(2);}else{return''+value+'';}}},{key:'normalizeURL',value:function normalizeURL(url){var u=new URL(url);return u.protocol+'//'+u.hostname+u.pathname.replace(/\/+/g,'/');}},{key:'pathExists',value:function pathExists(url){var req=Potree.XHRFactory.createXMLHttpRequest();req.open('GET',url,false);req.send(null);if(req.status!==200){return false;}return true;}},{key:'debugSphere',value:function debugSphere(parent,position,scale,color){var geometry=new THREE.SphereGeometry(1,8,8);var material=void 0;if(color!==undefined){material=new THREE.MeshBasicMaterial({color:color});}else{material=new THREE.MeshNormalMaterial();}var sphere=new THREE.Mesh(geometry,material);sphere.position.copy(position);sphere.scale.set(scale,scale,scale);parent.add(sphere);}},{key:'debugLine',value:function debugLine(parent,start,end,color){var material=new THREE.LineBasicMaterial({color:color});var geometry=new THREE.Geometry();geometry.vertices.push(start,end);var tl=new THREE.Line(geometry,material);parent.add(tl);}/**
     * adapted from mhluska at https://github.com/mrdoob/three.js/issues/1561
     */},{key:'computeTransformedBoundingBox',value:function computeTransformedBoundingBox(box,transform){var vertices=[new THREE.Vector3(box.min.x,box.min.y,box.min.z).applyMatrix4(transform),new THREE.Vector3(box.min.x,box.min.y,box.min.z).applyMatrix4(transform),new THREE.Vector3(box.max.x,box.min.y,box.min.z).applyMatrix4(transform),new THREE.Vector3(box.min.x,box.max.y,box.min.z).applyMatrix4(transform),new THREE.Vector3(box.min.x,box.min.y,box.max.z).applyMatrix4(transform),new THREE.Vector3(box.min.x,box.max.y,box.max.z).applyMatrix4(transform),new THREE.Vector3(box.max.x,box.max.y,box.min.z).applyMatrix4(transform),new THREE.Vector3(box.max.x,box.min.y,box.max.z).applyMatrix4(transform),new THREE.Vector3(box.max.x,box.max.y,box.max.z).applyMatrix4(transform)];var boundingBox=new THREE.Box3();boundingBox.setFromPoints(vertices);return boundingBox;}},{key:'addCommas',/**
     * add separators to large numbers
     *
     * @param nStr
     * @returns
     */value:function addCommas(nStr){nStr+='';var x=nStr.split('.');var x1=x[0];var x2=x.length>1?'.'+x[1]:'';var rgx=/(\d+)(\d{3})/;while(rgx.test(x1)){x1=x1.replace(rgx,'$1'+','+'$2');}return x1+x2;}},{key:'removeCommas',value:function removeCommas(str){return str.replace(/,/g,'');}/**
     * create worker from a string
     *
     * code from http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string
     */},{key:'createWorker',value:function createWorker(code){var blob=new Blob([code],{type:'application/javascript'});var worker=new Worker(URL.createObjectURL(blob));return worker;}},{key:'moveTo',value:function moveTo(scene,endPosition,endTarget){var view=scene.view;var camera=scene.getActiveCamera();var animationDuration=500;var easing=TWEEN.Easing.Quartic.Out;{// animate camera position
        var tween=new TWEEN.Tween(view.position).to(endPosition,animationDuration);tween.easing(easing);tween.start();}{// animate camera target
        var camTargetDistance=camera.position.distanceTo(endTarget);var target=new THREE.Vector3().addVectors(camera.position,camera.getWorldDirection().clone().multiplyScalar(camTargetDistance));var _tween2=new TWEEN.Tween(target).to(endTarget,animationDuration);_tween2.easing(easing);_tween2.onUpdate(function(){view.lookAt(target);});_tween2.onComplete(function(){view.lookAt(target);});_tween2.start();}}},{key:'loadSkybox',value:function loadSkybox(path){var camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,100000);camera.up.set(0,0,1);var scene=new THREE.Scene();var format='.png';var urls=[path+'px'+format,path+'nx'+format,path+'py'+format,path+'ny'+format,path+'pz'+format,path+'nz'+format];var materialArray=[];{var _loop3=function _loop3(_i49){var material=new THREE.MeshBasicMaterial({map:null,side:THREE.BackSide,depthTest:false,depthWrite:false,color:0x424556});materialArray.push(material);var loader=new THREE.TextureLoader();loader.load(urls[_i49],function loaded(texture){material.map=texture;material.needsUpdate=true;material.color.setHex(0xffffff);},function progress(xhr){// console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );
    },function error(xhr){console.log('An error happened',xhr);});};for(var _i49=0;_i49<6;_i49++){_loop3(_i49);}}var skyGeometry=new THREE.CubeGeometry(5000,5000,5000);var skybox=new THREE.Mesh(skyGeometry,materialArray);scene.add(skybox);// z up
        scene.rotation.x=Math.PI/2;return{'camera':camera,'scene':scene};}},{key:'createGrid',value:function createGrid(width,length,spacing,color){var material=new THREE.LineBasicMaterial({color:color||0x888888});var geometry=new THREE.Geometry();for(var _i50=0;_i50<=length;_i50++){geometry.vertices.push(new THREE.Vector3(-(spacing*width)/2,_i50*spacing-spacing*length/2,0));geometry.vertices.push(new THREE.Vector3(+(spacing*width)/2,_i50*spacing-spacing*length/2,0));}for(var _i51=0;_i51<=width;_i51++){geometry.vertices.push(new THREE.Vector3(_i51*spacing-spacing*width/2,-(spacing*length)/2,0));geometry.vertices.push(new THREE.Vector3(_i51*spacing-spacing*width/2,+(spacing*length)/2,0));}var line=new THREE.LineSegments(geometry,material,THREE.LinePieces);line.receiveShadow=true;return line;}},{key:'createBackgroundTexture',value:function createBackgroundTexture(width,height){function gauss(x,y){return 1/(2*Math.PI)*Math.exp(-(x*x+y*y)/2);};// map.magFilter = THREE.NearestFilter;
        var size=width*height;var data=new Uint8Array(3*size);var chroma=[1,1.5,1.7];var max=gauss(0,0);for(var x=0;x<width;x++){for(var y=0;y<height;y++){var u=2*(x/width)-1;var v=2*(y/height)-1;var _i52=x+width*y;var d=gauss(2*u,2*v)/max;var r=(Math.random()+Math.random()+Math.random())/3;r=(d*0.5+0.5)*r*0.03;r=r*0.4;// d = Math.pow(d, 0.6);
            data[3*_i52+0]=255*(d/15+0.05+r)*chroma[0];data[3*_i52+1]=255*(d/15+0.05+r)*chroma[1];data[3*_i52+2]=255*(d/15+0.05+r)*chroma[2];}}var texture=new THREE.DataTexture(data,width,height,THREE.RGBFormat);texture.needsUpdate=true;return texture;}},{key:'getMousePointCloudIntersection',value:function getMousePointCloudIntersection(mouse,camera,viewer,pointclouds){var params=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var renderer=viewer.renderer;var nmouse={x:mouse.x/renderer.domElement.clientWidth*2-1,y:-(mouse.y/renderer.domElement.clientHeight)*2+1};var pickParams={};if(params.pickClipped){pickParams.pickClipped=params.pickClipped;}pickParams.x=mouse.x;pickParams.y=renderer.domElement.clientHeight-mouse.y;var raycaster=new THREE.Raycaster();raycaster.setFromCamera(nmouse,camera);var ray=raycaster.ray;var selectedPointcloud=null;var closestDistance=Infinity;var closestIntersection=null;var closestPoint=null;var _iteratorNormalCompletion60=true;var _didIteratorError60=false;var _iteratorError60=undefined;try{for(var _iterator60=pointclouds[Symbol.iterator](),_step60;!(_iteratorNormalCompletion60=(_step60=_iterator60.next()).done);_iteratorNormalCompletion60=true){var pointcloud=_step60.value;var point=pointcloud.pick(viewer,camera,ray,pickParams);if(!point){continue;}var distance=camera.position.distanceTo(point.position);if(distance<closestDistance){closestDistance=distance;selectedPointcloud=pointcloud;closestIntersection=point.position;closestPoint=point;}}}catch(err){_didIteratorError60=true;_iteratorError60=err;}finally{try{if(!_iteratorNormalCompletion60&&_iterator60.return){_iterator60.return();}}finally{if(_didIteratorError60){throw _iteratorError60;}}}if(selectedPointcloud){return{location:closestIntersection,distance:closestDistance,pointcloud:selectedPointcloud,point:closestPoint};}else{return null;}}},{key:'getMouseObjectIntersection',value:function getMouseObjectIntersection(mouse,camera,viewer,objs){var params=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var renderer=viewer.renderer;var nmouse={x:mouse.x/renderer.domElement.clientWidth*2-1,y:-(mouse.y/renderer.domElement.clientHeight)*2+1};var pickParams={};if(params.pickClipped){pickParams.pickClipped=params.pickClipped;}pickParams.x=mouse.x;pickParams.y=renderer.domElement.clientHeight-mouse.y;var raycaster=new THREE.Raycaster();raycaster.setFromCamera(nmouse,camera);var _ray=raycaster.ray.clone();var nodes=[];var closestDistance=Infinity;var selectedPointcloud=null;var closestIntersection=null;var closestPoint=null;for(var _i53=0;_i53<objs.length;_i53++){var _node16=objs[_i53];var tmpNodes=[];if(_node16.type!="DirectionalLight"){tmpNodes=raycaster.intersectObjects(_node16.children,true);if(tmpNodes&&tmpNodes.length>0){nodes.push(tmpNodes[0]);}else{continue;}}}if(nodes.length==0){return null;}else{for(var _i54=0,len=nodes.length;_i54<len;_i54++){var _point=nodes[_i54].point;var _distance=nodes[_i54].distance;if(_distance<closestDistance){closestDistance=_distance;closestPoint=_point;selectedPointcloud=nodes[_i54].object;closestIntersection=_point;}}}if(selectedPointcloud){return{location:closestIntersection,distance:closestDistance,pointcloud:selectedPointcloud,point:closestPoint};}else{return null;}}},{key:'pixelsArrayToImage',value:function pixelsArrayToImage(pixels,width,height){var canvas=document.createElement('canvas');canvas.width=width;canvas.height=height;var context=canvas.getContext('2d');pixels=new pixels.constructor(pixels);for(var _i55=0;_i55<pixels.length;_i55++){pixels[_i55*4+3]=255;}var imageData=context.createImageData(width,height);imageData.data.set(pixels);context.putImageData(imageData,0,0);var img=new Image();img.src=canvas.toDataURL();// img.style.transform = "scaleY(-1)";
        return img;}},{key:'pixelsArrayToDataUrl',value:function pixelsArrayToDataUrl(pixels,width,height){var canvas=document.createElement('canvas');canvas.width=width;canvas.height=height;var context=canvas.getContext('2d');pixels=new pixels.constructor(pixels);for(var _i56=0;_i56<pixels.length;_i56++){pixels[_i56*4+3]=255;}var imageData=context.createImageData(width,height);imageData.data.set(pixels);context.putImageData(imageData,0,0);var dataURL=canvas.toDataURL();return dataURL;}},{key:'pixelsArrayToCanvas',value:function pixelsArrayToCanvas(pixels,width,height){var canvas=document.createElement('canvas');canvas.width=width;canvas.height=height;var context=canvas.getContext('2d');pixels=new pixels.constructor(pixels);//for (let i = 0; i < pixels.length; i++) {
//	pixels[i * 4 + 3] = 255;
//}
// flip vertically
        var bytesPerLine=width*4;for(var _i57=0;_i57<parseInt(height/2);_i57++){var j=height-_i57-1;var lineI=pixels.slice(_i57*bytesPerLine,_i57*bytesPerLine+bytesPerLine);var lineJ=pixels.slice(j*bytesPerLine,j*bytesPerLine+bytesPerLine);pixels.set(lineJ,_i57*bytesPerLine);pixels.set(lineI,j*bytesPerLine);}var imageData=context.createImageData(width,height);imageData.data.set(pixels);context.putImageData(imageData,0,0);return canvas;}},{key:'removeListeners',value:function removeListeners(dispatcher,type){if(dispatcher._listeners===undefined){return;}if(dispatcher._listeners[type]){delete dispatcher._listeners[type];}}},{key:'mouseToRay',value:function mouseToRay(mouse,camera,width,height){var normalizedMouse={x:mouse.x/width*2-1,y:-(mouse.y/height)*2+1};var vector=new THREE.Vector3(normalizedMouse.x,normalizedMouse.y,0.5);var origin=new THREE.Vector3(normalizedMouse.x,normalizedMouse.y,0);vector.unproject(camera);origin.unproject(camera);var direction=new THREE.Vector3().subVectors(vector,origin).normalize();var ray=new THREE.Ray(origin,direction);return ray;}},{key:'projectedRadius',value:function projectedRadius(radius,camera,distance,screenWidth,screenHeight){if(camera instanceof THREE.OrthographicCamera){return Potree.utils.projectedRadiusOrtho(radius,camera.projectionMatrix,screenWidth,screenHeight);}else if(camera instanceof THREE.PerspectiveCamera){return Potree.utils.projectedRadiusPerspective(radius,camera.fov*Math.PI/180,distance,screenHeight);}else{throw new Error("invalid parameters");}}},{key:'projectedRadiusPerspective',value:function projectedRadiusPerspective(radius,fov,distance,screenHeight){var projFactor=1/Math.tan(fov/2)/distance;projFactor=projFactor*screenHeight/2;return radius*projFactor;}},{key:'projectedRadiusOrtho',value:function projectedRadiusOrtho(radius,proj,screenWidth,screenHeight){var p1=new THREE.Vector4(0);var p2=new THREE.Vector4(radius);p1.applyMatrix4(proj);p2.applyMatrix4(proj);p1=new THREE.Vector3(p1.x,p1.y,p1.z);p2=new THREE.Vector3(p2.x,p2.y,p2.z);p1.x=(p1.x+1.0)*0.5*screenWidth;p1.y=(p1.y+1.0)*0.5*screenHeight;p2.x=(p2.x+1.0)*0.5*screenWidth;p2.y=(p2.y+1.0)*0.5*screenHeight;return p1.distanceTo(p2);}},{key:'topView',value:function topView(camera,node){camera.position.set(0,1,0);camera.rotation.set(-Math.PI/2,0,0);camera.zoomTo(node,1);}},{key:'frontView',value:function frontView(camera,node){camera.position.set(0,0,1);camera.rotation.set(0,0,0);camera.zoomTo(node,1);}},{key:'leftView',value:function leftView(camera,node){camera.position.set(-1,0,0);camera.rotation.set(0,-Math.PI/2,0);camera.zoomTo(node,1);}},{key:'rightView',value:function rightView(camera,node){camera.position.set(1,0,0);camera.rotation.set(0,Math.PI/2,0);camera.zoomTo(node,1);}},{key:'frustumSphereIntersection',/**
     *
     * 0: no intersection
     * 1: intersection
     * 2: fully inside
     */value:function frustumSphereIntersection(frustum,sphere){var planes=frustum.planes;var center=sphere.center;var negRadius=-sphere.radius;var minDistance=Number.MAX_VALUE;for(var _i58=0;_i58<6;_i58++){var distance=planes[_i58].distanceToPoint(center);if(distance<negRadius){return 0;}minDistance=Math.min(minDistance,distance);}return minDistance>=sphere.radius?2:1;}},{key:'generateDataTexture',// code taken from three.js
// ImageUtils - generateDataTexture()
    value:function generateDataTexture(width,height,color){var size=width*height;var data=new Uint8Array(4*width*height);var r=Math.floor(color.r*255);var g=Math.floor(color.g*255);var b=Math.floor(color.b*255);for(var _i59=0;_i59<size;_i59++){data[_i59*3]=r;data[_i59*3+1]=g;data[_i59*3+2]=b;}var texture=new THREE.DataTexture(data,width,height,THREE.RGBAFormat);texture.needsUpdate=true;texture.magFilter=THREE.NearestFilter;return texture;}},{key:'getParameterByName',// from http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript
    value:function getParameterByName(name){name=name.replace(/[[]/,'\\[').replace(/[\]]/,'\\]');var regex=new RegExp('[\\?&]'+name+'=([^&#]*)');var results=regex.exec(document.location.search);return results===null?null:decodeURIComponent(results[1].replace(/\+/g,' '));}},{key:'setParameter',value:function setParameter(name,value){// value = encodeURIComponent(value);
        name=name.replace(/[[]/,'\\[').replace(/[\]]/,'\\]');var regex=new RegExp('([\\?&])('+name+'=([^&#]*))');var results=regex.exec(document.location.search);var url=window.location.href;if(results===null){if(window.location.search.length===0){url=url+'?';}else{url=url+'&';}url=url+name+'='+value;}else{var newValue=name+'='+value;url=url.replace(results[2],newValue);}window.history.replaceState({},'',url);}// see https://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript
},{key:'clipboardCopy',value:function clipboardCopy(text){var textArea=document.createElement("textarea");textArea.style.position='fixed';textArea.style.top=0;textArea.style.left=0;textArea.style.width='2em';textArea.style.height='2em';textArea.style.padding=0;textArea.style.border='none';textArea.style.outline='none';textArea.style.boxShadow='none';textArea.style.background='transparent';textArea.value=text;document.body.appendChild(textArea);textArea.select();try{var success=document.execCommand('copy');if(success){console.log("copied text to clipboard");}else{console.log("copy to clipboard failed");}}catch(err){console.log("error while trying to copy to clipboard");}document.body.removeChild(textArea);}}]);return _class5;}();Potree.utils.screenPass=new function(){this.screenScene=new THREE.Scene();this.screenQuad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,0));this.screenQuad.material.depthTest=true;this.screenQuad.material.depthWrite=true;this.screenQuad.material.transparent=true;this.screenScene.add(this.screenQuad);this.camera=new THREE.Camera();this.render=function(renderer,material,target){this.screenQuad.material=material;if(typeof target==='undefined'){renderer.render(this.screenScene,this.camera);}else{renderer.render(this.screenScene,this.camera,target);}};}();Potree.Features=function(){var ftCanvas=document.createElement('canvas');var gl=ftCanvas.getContext('webgl')||ftCanvas.getContext('experimental-webgl');if(gl===null){return null;}// -- code taken from THREE.WebGLRenderer --
    var _vertexShaderPrecisionHighpFloat=gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_FLOAT);var _vertexShaderPrecisionMediumpFloat=gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.MEDIUM_FLOAT);// Unused: let _vertexShaderPrecisionLowpFloat = gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.LOW_FLOAT);
    var _fragmentShaderPrecisionHighpFloat=gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_FLOAT);var _fragmentShaderPrecisionMediumpFloat=gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.MEDIUM_FLOAT);// Unused: let _fragmentShaderPrecisionLowpFloat = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.LOW_FLOAT);
    var highpAvailable=_vertexShaderPrecisionHighpFloat.precision>0&&_fragmentShaderPrecisionHighpFloat.precision>0;var mediumpAvailable=_vertexShaderPrecisionMediumpFloat.precision>0&&_fragmentShaderPrecisionMediumpFloat.precision>0;// -----------------------------------------
    var precision=void 0;if(highpAvailable){precision='highp';}else if(mediumpAvailable){precision='mediump';}else{precision='lowp';}return{SHADER_INTERPOLATION:{isSupported:function isSupported(){var supported=true;supported=supported&&gl.getExtension('EXT_frag_depth');supported=supported&&gl.getParameter(gl.MAX_VARYING_VECTORS)>=8;return supported;}},SHADER_SPLATS:{isSupported:function isSupported(){var supported=true;supported=supported&&gl.getExtension('EXT_frag_depth');supported=supported&&gl.getExtension('OES_texture_float');supported=supported&&gl.getParameter(gl.MAX_VARYING_VECTORS)>=8;return supported;}},SHADER_EDL:{isSupported:function isSupported(){var supported=true;//supported = supported && gl.getExtension('EXT_frag_depth');
                supported=supported&&gl.getExtension('OES_texture_float');supported=supported&&gl.getParameter(gl.MAX_VARYING_VECTORS)>=8;return supported;}},precision:precision};}();/**
 * adapted from http://stemkoski.github.io/Three.js/Sprite-Text-Labels.html
 */Potree.TextSprite=function(_THREE$Object3D2){_inherits(TextSprite,_THREE$Object3D2);function TextSprite(text){_classCallCheck(this,TextSprite);var _this33=_possibleConstructorReturn(this,(TextSprite.__proto__||Object.getPrototypeOf(TextSprite)).call(this));var texture=new THREE.Texture();texture.minFilter=THREE.LinearFilter;texture.magFilter=THREE.LinearFilter;var spriteMaterial=new THREE.SpriteMaterial({map:texture,depthTest:false,depthWrite:false});_this33.material=spriteMaterial;_this33.sprite=new THREE.Sprite(spriteMaterial);_this33.add(_this33.sprite);_this33.borderThickness=4;_this33.fontface='Arial';_this33.fontsize=28;_this33.borderColor={r:0,g:0,b:0,a:1.0};_this33.backgroundColor={r:255,g:255,b:255,a:1.0};_this33.textColor={r:255,g:255,b:255,a:1.0};_this33.text='';_this33.setText(text);return _this33;}_createClass(TextSprite,[{key:'setText',value:function setText(text){if(this.text!==text){this.text=text;this.update();}}},{key:'setTextColor',value:function setTextColor(color){this.textColor=color;this.update();}},{key:'setBorderColor',value:function setBorderColor(color){this.borderColor=color;this.update();}},{key:'setBackgroundColor',value:function setBackgroundColor(color){this.backgroundColor=color;this.update();}},{key:'update',value:function update(){var canvas=document.createElement('canvas');var context=canvas.getContext('2d');context.font='Bold '+this.fontsize+'px '+this.fontface;// get size data (height depends only on font size)
        var metrics=context.measureText(this.text);var textWidth=metrics.width;var margin=5;var spriteWidth=2*margin+textWidth+2*this.borderThickness;var spriteHeight=this.fontsize*1.4+2*this.borderThickness;context.canvas.width=spriteWidth;context.canvas.height=spriteHeight;context.font='Bold '+this.fontsize+'px '+this.fontface;// background color
        context.fillStyle='rgba('+this.backgroundColor.r+','+this.backgroundColor.g+','+this.backgroundColor.b+','+this.backgroundColor.a+')';// border color
        context.strokeStyle='rgba('+this.borderColor.r+','+this.borderColor.g+','+this.borderColor.b+','+this.borderColor.a+')';context.lineWidth=this.borderThickness;this.roundRect(context,this.borderThickness/2,this.borderThickness/2,textWidth+this.borderThickness+2*margin,this.fontsize*1.4+this.borderThickness,6);// text color
        context.strokeStyle='rgba(0, 0, 0, 1.0)';context.strokeText(this.text,this.borderThickness+margin,this.fontsize+this.borderThickness);context.fillStyle='rgba('+this.textColor.r+','+this.textColor.g+','+this.textColor.b+','+this.textColor.a+')';context.fillText(this.text,this.borderThickness+margin,this.fontsize+this.borderThickness);var texture=new THREE.Texture(canvas);texture.minFilter=THREE.LinearFilter;texture.magFilter=THREE.LinearFilter;texture.needsUpdate=true;this.sprite.material.map=texture;this.sprite.scale.set(spriteWidth*0.01,spriteHeight*0.01,1.0);}},{key:'roundRect',value:function roundRect(ctx,x,y,w,h,r){ctx.beginPath();ctx.moveTo(x+r,y);ctx.lineTo(x+w-r,y);ctx.quadraticCurveTo(x+w,y,x+w,y+r);ctx.lineTo(x+w,y+h-r);ctx.quadraticCurveTo(x+w,y+h,x+w-r,y+h);ctx.lineTo(x+r,y+h);ctx.quadraticCurveTo(x,y+h,x,y+h-r);ctx.lineTo(x,y+r);ctx.quadraticCurveTo(x,y,x+r,y);ctx.closePath();ctx.fill();ctx.stroke();}}]);return TextSprite;}(THREE.Object3D);Potree.PathAnimation=function(){function _class6(path,start,end,speed,callback){_classCallCheck(this,_class6);this.path=path;this.length=this.path.spline.getLength();this.speed=speed;this.callback=callback;this.tween=null;this.startPoint=Math.max(start,0);this.endPoint=Math.min(end,this.length);this.t=0.0;}_createClass(_class6,[{key:'start',value:function start(){var _this34=this;var resume=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(this.tween){this.tween.stop();this.tween=null;}var tStart=void 0;if(resume){tStart=this.t;}else{tStart=this.startPoint/this.length;}var tEnd=this.endPoint/this.length;var animationDuration=(tEnd-tStart)*this.length*1000/this.speed;var progress={t:tStart};this.tween=new TWEEN.Tween(progress).to({t:tEnd},animationDuration);this.tween.easing(TWEEN.Easing.Linear.None);this.tween.onUpdate(function(e){_this34.t=progress.t;_this34.callback(progress.t);});this.tween.onComplete(function(){if(_this34.repeat){_this34.start();}});setTimeout(function(){_this34.tween.start();},0);}},{key:'stop',value:function stop(){if(!this.tween){return;}this.tween.stop();this.tween=null;this.t=0;}},{key:'pause',value:function pause(){if(!this.tween){return;}this.tween.stop();TWEEN.remove(this.tween);this.tween=null;}},{key:'resume',value:function resume(){this.start(true);}},{key:'getPoint',value:function getPoint(t){return this.path.spline.getPoint(t);}}]);return _class6;}();Potree.AnimationPath=function(){function _class7(){var points=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_classCallCheck(this,_class7);this.points=points;this.spline=new THREE.CatmullRomCurve3(points);//this.spline.reparametrizeByArcLength(1 / this.spline.getLength().total);
}_createClass(_class7,[{key:'get',value:function get(t){return this.spline.getPoint(t);}},{key:'getLength',value:function getLength(){return this.spline.getLength();}},{key:'animate',value:function animate(start,end,speed,callback){var animation=new Potree.PathAnimation(this,start,end,speed,callback);animation.start();return animation;}},{key:'pause',value:function pause(){if(this.tween){this.tween.stop();}}},{key:'resume',value:function resume(){if(this.tween){this.tween.start();}}},{key:'getGeometry',value:function getGeometry(){var geometry=new THREE.Geometry();var samples=500;var i=0;for(var u=0;u<=1;u+=1/samples){var position=this.spline.getPoint(u);geometry.vertices[i]=new THREE.Vector3(position.x,position.y,position.z);i++;}if(this.closed){var _position2=this.spline.getPoint(0);geometry.vertices[i]=new THREE.Vector3(_position2.x,_position2.y,_position2.z);}return geometry;}},{key:'closed',get:function get(){return this.spline.closed;},set:function set(value){this.spline.closed=value;}}]);return _class7;}();/*
	{
		let target = new THREE.Vector3(589854.34, 231411.19, 692.77);
		let points = [
			new THREE.Vector3(589815.52, 231738.31, 959.48 ),
			new THREE.Vector3(589604.73, 231615.00, 968.10 ),
			new THREE.Vector3(589579.11, 231354.41, 1010.06),
			new THREE.Vector3(589723.00, 231169.95, 1015.57),
			new THREE.Vector3(589960.76, 231116.87, 978.60 ),
			new THREE.Vector3(590139.29, 231268.71, 972.33 )
		];

		let path = new Potree.AnimationPath(points);

		let geometry = path.getGeometry();
		let material = new THREE.LineBasicMaterial();
		let line = new THREE.Line(geometry, material);
		viewer.scene.scene.add(line);

		let [start, end, speed] = [0, path.getLength(), 10];
		path.animate(start, end, speed, t => {
			viewer.scene.view.position.copy(path.spline.getPoint(t));
		});

	}
	*/Potree.Version=function(version){this.version=version;var vmLength=version.indexOf('.')===-1?version.length:version.indexOf('.');this.versionMajor=parseInt(version.substr(0,vmLength));this.versionMinor=parseInt(version.substr(vmLength+1));if(this.versionMinor.length===0){this.versionMinor=0;}};Potree.Version.prototype.newerThan=function(version){var v=new Potree.Version(version);if(this.versionMajor>v.versionMajor){return true;}else if(this.versionMajor===v.versionMajor&&this.versionMinor>v.versionMinor){return true;}else{return false;}};Potree.Version.prototype.equalOrHigher=function(version){var v=new Potree.Version(version);if(this.versionMajor>v.versionMajor){return true;}else if(this.versionMajor===v.versionMajor&&this.versionMinor>=v.versionMinor){return true;}else{return false;}};Potree.Version.prototype.upTo=function(version){return!this.newerThan(version);};Potree.Measure=function(_THREE$Object3D3){_inherits(Measure,_THREE$Object3D3);function Measure(){_classCallCheck(this,Measure);var _this35=_possibleConstructorReturn(this,(Measure.__proto__||Object.getPrototypeOf(Measure)).call(this));_this35.constructor.counter=_this35.constructor.counter===undefined?0:_this35.constructor.counter+1;_this35.name='Measure_'+_this35.constructor.counter;_this35.points=[];_this35._showDistances=true;_this35._showCoordinates=false;_this35._showArea=false;_this35._closed=true;_this35._showAngles=false;_this35._showHeight=false;_this35.maxMarkers=Number.MAX_SAFE_INTEGER;_this35.sphereGeometry=new THREE.SphereGeometry(0.4,10,10);_this35.color=new THREE.Color(0xff0000);_this35.lengthUnit={code:'m'};_this35.spheres=[];_this35.edges=[];_this35.sphereLabels=[];_this35.edgeLabels=[];_this35.angleLabels=[];_this35.coordinateLabels=[];// this.heightEdge;
// this.heightLabel;
    {// height stuff
        {// height line
            var lineGeometry=new THREE.Geometry();lineGeometry.vertices.push(new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3(),new THREE.Vector3());lineGeometry.colors.push(_this35.color,_this35.color,_this35.color);var lineMaterial=new THREE.LineDashedMaterial({color:0xff0000,dashSize:5,gapSize:2});lineMaterial.depthTest=false;_this35.heightEdge=new THREE.Line(lineGeometry,lineMaterial);_this35.heightEdge.visible=false;_this35.add(_this35.heightEdge);}{// height label
        _this35.heightLabel=new Potree.TextSprite('');_this35.heightLabel.setBorderColor({r:0,g:0,b:0,a:0.8});_this35.heightLabel.setBackgroundColor({r:0,g:0,b:0,a:0.3});_this35.heightLabel.setTextColor({r:180,g:220,b:180,a:1.0});_this35.heightLabel.material.depthTest=false;_this35.heightLabel.material.opacity=1;_this35.heightLabel.visible=false;;_this35.add(_this35.heightLabel);}}_this35.areaLabel=new Potree.TextSprite('');_this35.areaLabel.setBorderColor({r:0,g:0,b:0,a:0.8});_this35.areaLabel.setBackgroundColor({r:0,g:0,b:0,a:0.3});_this35.areaLabel.setTextColor({r:180,g:220,b:180,a:1.0});_this35.areaLabel.material.depthTest=false;_this35.areaLabel.material.opacity=1;_this35.areaLabel.visible=false;;_this35.add(_this35.areaLabel);return _this35;}_createClass(Measure,[{key:'createSphereMaterial',value:function createSphereMaterial(){var sphereMaterial=new THREE.MeshLambertMaterial({shading:THREE.SmoothShading,color:this.color,depthTest:false,depthWrite:false});return sphereMaterial;}},{key:'addMarker',value:function addMarker(point){var _this36=this;if(point instanceof THREE.Vector3){point={position:point};}else if(point instanceof Array){point={position:new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(point))))()};}this.points.push(point);// sphere
        var sphere=new THREE.Mesh(this.sphereGeometry,this.createSphereMaterial());this.add(sphere);this.spheres.push(sphere);{// edges
            var lineGeometry=new THREE.Geometry();lineGeometry.vertices.push(new THREE.Vector3(),new THREE.Vector3());lineGeometry.colors.push(this.color,this.color,this.color);var lineMaterial=new THREE.LineBasicMaterial({linewidth:1});lineMaterial.depthTest=false;var edge=new THREE.Line(lineGeometry,lineMaterial);edge.visible=true;this.add(edge);this.edges.push(edge);}{// edge labels
            var edgeLabel=new Potree.TextSprite();edgeLabel.setBorderColor({r:0,g:0,b:0,a:0.8});edgeLabel.setBackgroundColor({r:0,g:0,b:0,a:0.3});edgeLabel.material.depthTest=false;edgeLabel.visible=false;this.edgeLabels.push(edgeLabel);this.add(edgeLabel);}{// angle labels
            var angleLabel=new Potree.TextSprite();angleLabel.setBorderColor({r:0,g:0,b:0,a:0.8});angleLabel.setBackgroundColor({r:0,g:0,b:0,a:0.3});angleLabel.material.depthTest=false;angleLabel.material.opacity=1;angleLabel.visible=false;this.angleLabels.push(angleLabel);this.add(angleLabel);}{// coordinate labels
            var coordinateLabel=new Potree.TextSprite();coordinateLabel.setBorderColor({r:0,g:0,b:0,a:0.8});coordinateLabel.setBackgroundColor({r:0,g:0,b:0,a:0.3});coordinateLabel.material.depthTest=false;coordinateLabel.material.opacity=1;coordinateLabel.visible=false;this.coordinateLabels.push(coordinateLabel);this.add(coordinateLabel);}{// Event Listeners
            var drag=function drag(e){var I=Potree.utils.getMousePointCloudIntersection(e.drag.end,e.viewer.scene.getActiveCamera(),e.viewer,e.viewer.scene.pointclouds,{pickClipped:true});if(I){var _i60=_this36.spheres.indexOf(e.drag.object);if(_i60!==-1){var _point2=_this36.points[_i60];var _iteratorNormalCompletion61=true;var _didIteratorError61=false;var _iteratorError61=undefined;try{for(var _iterator61=Object.keys(I.point).filter(function(e){return e!=='position';})[Symbol.iterator](),_step61;!(_iteratorNormalCompletion61=(_step61=_iterator61.next()).done);_iteratorNormalCompletion61=true){var key=_step61.value;_point2[key]=I.point[key];}}catch(err){_didIteratorError61=true;_iteratorError61=err;}finally{try{if(!_iteratorNormalCompletion61&&_iterator61.return){_iterator61.return();}}finally{if(_didIteratorError61){throw _iteratorError61;}}}_this36.setPosition(_i60,I.location);}}};var drop=function drop(e){var i=_this36.spheres.indexOf(e.drag.object);if(i!==-1){_this36.dispatchEvent({'type':'marker_dropped','measurement':_this36,'index':i});}};var mouseover=function mouseover(e){return e.object.material.emissive.setHex(0x888888);};var mouseleave=function mouseleave(e){return e.object.material.emissive.setHex(0x000000);};sphere.addEventListener('drag',drag);sphere.addEventListener('drop',drop);sphere.addEventListener('mouseover',mouseover);sphere.addEventListener('mouseleave',mouseleave);}var event={type:'marker_added',measurement:this,sphere:sphere};this.dispatchEvent(event);this.setMarker(this.points.length-1,point);}},{key:'removeMarker',value:function removeMarker(index){this.points.splice(index,1);this.remove(this.spheres[index]);var edgeIndex=index===0?0:index-1;this.remove(this.edges[edgeIndex]);this.edges.splice(edgeIndex,1);this.remove(this.edgeLabels[edgeIndex]);this.edgeLabels.splice(edgeIndex,1);this.coordinateLabels.splice(index,1);this.spheres.splice(index,1);this.update();this.dispatchEvent({type:'marker_removed',measurement:this});}},{key:'setMarker',value:function setMarker(index,point){this.points[index]=point;var event={type:'marker_moved',measure:this,index:index,position:point.position.clone()};this.dispatchEvent(event);this.update();}},{key:'setPosition',value:function setPosition(index,position){var point=this.points[index];point.position.copy(position);var event={type:'marker_moved',measure:this,index:index,position:position.clone()};this.dispatchEvent(event);this.update();}},{key:'getArea',value:function getArea(){var area=0;var j=this.points.length-1;for(var _i61=0;_i61<this.points.length;_i61++){var p1=this.points[_i61].position;var p2=this.points[j].position;area+=(p2.x+p1.x)*(p1.y-p2.y);j=_i61;}return Math.abs(area/2);}},{key:'getTotalDistance',value:function getTotalDistance(){if(this.points.length===0){return 0;}var distance=0;for(var _i62=1;_i62<this.points.length;_i62++){var prev=this.points[_i62-1].position;var curr=this.points[_i62].position;var d=prev.distanceTo(curr);distance+=d;}if(this.closed&&this.points.length>1){var first=this.points[0].position;var last=this.points[this.points.length-1].position;var _d=last.distanceTo(first);distance+=_d;}return distance;}},{key:'getAngleBetweenLines',value:function getAngleBetweenLines(cornerPoint,point1,point2){var v1=new THREE.Vector3().subVectors(point1.position,cornerPoint.position);var v2=new THREE.Vector3().subVectors(point2.position,cornerPoint.position);return v1.angleTo(v2);}},{key:'getAngle',value:function getAngle(index){if(this.points.length<3||index>=this.points.length){return 0;}var previous=index===0?this.points[this.points.length-1]:this.points[index-1];var point=this.points[index];var next=this.points[(index+1)%this.points.length];return this.getAngleBetweenLines(point,previous,next);}},{key:'update',value:function update(){if(this.points.length===0){return;}else if(this.points.length===1){var point=this.points[0];var position=point.position;this.spheres[0].position.copy(position);{// coordinate labels
        var coordinateLabel=this.coordinateLabels[0];var msg=position.toArray().map(function(p){return Potree.utils.addCommas(p.toFixed(2));}).join(", ");//let msg = Potree.utils.addCommas(position.z.toFixed(2) + " " + this.lengthUnit.code);
        coordinateLabel.setText(msg);coordinateLabel.visible=this.showCoordinates;}return;}var lastIndex=this.points.length-1;var centroid=new THREE.Vector3();for(var _i63=0;_i63<=lastIndex;_i63++){var _point3=this.points[_i63];centroid.add(_point3.position);}centroid.divideScalar(this.points.length);for(var _i64=0;_i64<=lastIndex;_i64++){var index=_i64;var nextIndex=_i64+1>lastIndex?0:_i64+1;var previousIndex=_i64===0?lastIndex:_i64-1;var _point4=this.points[index];var nextPoint=this.points[nextIndex];var previousPoint=this.points[previousIndex];var sphere=this.spheres[index];// spheres
        sphere.position.copy(_point4.position);sphere.material.color=this.color;{// edges
            var edge=this.edges[index];edge.material.color=this.color;edge.position.copy(_point4.position);edge.geometry.vertices[0].set(0,0,0);edge.geometry.vertices[1].copy(nextPoint.position).sub(_point4.position);edge.geometry.verticesNeedUpdate=true;edge.geometry.computeBoundingSphere();edge.visible=index<lastIndex||this.closed;}{// edge labels
            var edgeLabel=this.edgeLabels[_i64];var center=new THREE.Vector3().add(_point4.position);center.add(nextPoint.position);center=center.multiplyScalar(0.5);var distance=_point4.position.distanceTo(nextPoint.position);edgeLabel.position.copy(center);edgeLabel.setText(Potree.utils.addCommas(distance.toFixed(2))+' '+this.lengthUnit.code);edgeLabel.visible=this.showDistances&&(index<lastIndex||this.closed)&&this.points.length>=2&&distance>0;}{// angle labels
            var angleLabel=this.angleLabels[_i64];var angle=this.getAngleBetweenLines(_point4,previousPoint,nextPoint);var dir=nextPoint.position.clone().sub(previousPoint.position);dir.multiplyScalar(0.5);dir=previousPoint.position.clone().add(dir).sub(_point4.position).normalize();var dist=Math.min(_point4.position.distanceTo(previousPoint.position),_point4.position.distanceTo(nextPoint.position));dist=dist/9;var labelPos=_point4.position.clone().add(dir.multiplyScalar(dist));angleLabel.position.copy(labelPos);var _msg=Potree.utils.addCommas((angle*(180.0/Math.PI)).toFixed(1))+'\xB0';angleLabel.setText(_msg);angleLabel.visible=this.showAngles&&(index<lastIndex||this.closed)&&this.points.length>=3&&angle>0;}}{// update height stuff
        var heightEdge=this.heightEdge;heightEdge.visible=this.showHeight;this.heightLabel.visible=this.showHeight;if(this.showHeight){var sorted=this.points.slice().sort(function(a,b){return a.position.z-b.position.z;});var lowPoint=sorted[0].position.clone();var highPoint=sorted[sorted.length-1].position.clone();var min=lowPoint.z;var max=highPoint.z;var height=max-min;var start=new THREE.Vector3(highPoint.x,highPoint.y,min);var end=new THREE.Vector3(highPoint.x,highPoint.y,max);heightEdge.position.copy(lowPoint);heightEdge.geometry.vertices[0].set(0,0,0);heightEdge.geometry.vertices[1].copy(start).sub(lowPoint);heightEdge.geometry.vertices[2].copy(start).sub(lowPoint);heightEdge.geometry.vertices[3].copy(end).sub(lowPoint);heightEdge.geometry.verticesNeedUpdate=true;// heightEdge.geometry.computeLineDistances();
// heightEdge.geometry.lineDistancesNeedUpdate = true;
            heightEdge.geometry.computeBoundingSphere();// heightEdge.material.dashSize = height / 40;
// heightEdge.material.gapSize = height / 40;
            var heightLabelPosition=start.clone().add(end).multiplyScalar(0.5);this.heightLabel.position.copy(heightLabelPosition);var _msg2=Potree.utils.addCommas(height.toFixed(2))+' '+this.lengthUnit.code;this.heightLabel.setText(_msg2);}}{// update area label
        this.areaLabel.position.copy(centroid);this.areaLabel.visible=this.showArea&&this.points.length>=3;var _msg3=Potree.utils.addCommas(this.getArea().toFixed(1))+' '+this.lengthUnit.code+'\xB2';this.areaLabel.setText(_msg3);}}},{key:'raycast',value:function raycast(raycaster,intersects){for(var _i65=0;_i65<this.points.length;_i65++){var sphere=this.spheres[_i65];sphere.raycast(raycaster,intersects);}// recalculate distances because they are not necessarely correct
// for scaled objects.
// see https://github.com/mrdoob/three.js/issues/5827
// TODO: remove this once the bug has been fixed
        for(var _i66=0;_i66<intersects.length;_i66++){var I=intersects[_i66];I.distance=raycaster.ray.origin.distanceTo(I.point);}intersects.sort(function(a,b){return a.distance-b.distance;});}},{key:'showCoordinates',get:function get(){return this._showCoordinates;},set:function set(value){this._showCoordinates=value;this.update();}},{key:'showAngles',get:function get(){return this._showAngles;},set:function set(value){this._showAngles=value;this.update();}},{key:'showHeight',get:function get(){return this._showHeight;},set:function set(value){this._showHeight=value;this.update();}},{key:'showArea',get:function get(){return this._showArea;},set:function set(value){this._showArea=value;this.update();}},{key:'closed',get:function get(){return this._closed;},set:function set(value){this._closed=value;this.update();}},{key:'showDistances',get:function get(){return this._showDistances;},set:function set(value){this._showDistances=value;this.update();}}]);return Measure;}(THREE.Object3D);Potree.MeasuringTool=function(_THREE$EventDispatche8){_inherits(MeasuringTool,_THREE$EventDispatche8);function MeasuringTool(viewer){_classCallCheck(this,MeasuringTool);var _this37=_possibleConstructorReturn(this,(MeasuringTool.__proto__||Object.getPrototypeOf(MeasuringTool)).call(this));_this37.viewer=viewer;_this37.renderer=viewer.renderer;_this37.addEventListener('start_inserting_measurement',function(e){_this37.viewer.dispatchEvent({type:'cancel_insertions'});});_this37.scene=new THREE.Scene();_this37.scene.name='scene_measurement';_this37.light=new THREE.PointLight(0xffffff,1.0);_this37.scene.add(_this37.light);_this37.viewer.inputHandler.registerInteractiveScene(_this37.scene);_this37.onRemove=function(e){_this37.scene.remove(e.measurement);};_this37.onAdd=function(e){_this37.scene.add(e.measurement);};var _iteratorNormalCompletion62=true;var _didIteratorError62=false;var _iteratorError62=undefined;try{for(var _iterator62=viewer.scene.measurements[Symbol.iterator](),_step62;!(_iteratorNormalCompletion62=(_step62=_iterator62.next()).done);_iteratorNormalCompletion62=true){var measurement=_step62.value;_this37.onAdd({measurement:measurement});}}catch(err){_didIteratorError62=true;_iteratorError62=err;}finally{try{if(!_iteratorNormalCompletion62&&_iterator62.return){_iterator62.return();}}finally{if(_didIteratorError62){throw _iteratorError62;}}}viewer.addEventListener("update",_this37.update.bind(_this37));viewer.addEventListener("render.pass.perspective_overlay",_this37.render.bind(_this37));viewer.addEventListener("scene_changed",_this37.onSceneChange.bind(_this37));viewer.scene.addEventListener('measurement_added',_this37.onAdd);viewer.scene.addEventListener('measurement_removed',_this37.onRemove);return _this37;}_createClass(MeasuringTool,[{key:'onSceneChange',value:function onSceneChange(e){if(e.oldScene){e.oldScene.removeEventListener('measurement_added',this.onAdd);e.oldScene.removeEventListener('measurement_removed',this.onRemove);}e.scene.addEventListener('measurement_added',this.onAdd);e.scene.addEventListener('measurement_removed',this.onRemove);}},{key:'startInsertion',value:function startInsertion(){var _this38=this;var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var domElement=this.viewer.renderer.domElement;var measure=new Potree.Measure();this.dispatchEvent({type:'start_inserting_measurement',measure:measure});measure.showDistances=args.showDistances===null?true:args.showDistances;measure.showArea=args.showArea||false;measure.showAngles=args.showAngles||false;measure.showCoordinates=args.showCoordinates||false;measure.showHeight=args.showHeight||false;measure.closed=args.closed||false;measure.maxMarkers=args.maxMarkers||Infinity;measure.name=args.name||'Measurement';this.scene.add(measure);var cancel={removeLastMarker:measure.maxMarkers>3,callback:null};var insertionCallback=function insertionCallback(e){if(e.button===THREE.MOUSE.LEFT){measure.addMarker(measure.points[measure.points.length-1].position.clone());if(measure.points.length>=measure.maxMarkers){cancel.callback();}_this38.viewer.inputHandler.startDragging(measure.spheres[measure.spheres.length-1]);}else if(e.button===THREE.MOUSE.RIGHT){cancel.callback();}};cancel.callback=function(e){if(cancel.removeLastMarker){measure.removeMarker(measure.points.length-1);}domElement.removeEventListener('mouseup',insertionCallback,true);_this38.viewer.removeEventListener('cancel_insertions',cancel.callback);};if(measure.maxMarkers>1){this.viewer.addEventListener('cancel_insertions',cancel.callback);domElement.addEventListener('mouseup',insertionCallback,true);}measure.addMarker(new THREE.Vector3(0,0,0));this.viewer.inputHandler.startDragging(measure.spheres[measure.spheres.length-1]);this.viewer.scene.addMeasurement(measure);return measure;}},{key:'update',value:function update(){var camera=this.viewer.scene.getActiveCamera();var domElement=this.renderer.domElement;var measurements=this.viewer.scene.measurements;var clientWidth=this.renderer.getSize().width;var clientHeight=this.renderer.getSize().height;this.light.position.copy(camera.position);// make size independant of distance
        var _iteratorNormalCompletion63=true;var _didIteratorError63=false;var _iteratorError63=undefined;try{for(var _iterator63=measurements[Symbol.iterator](),_step63;!(_iteratorNormalCompletion63=(_step63=_iterator63.next()).done);_iteratorNormalCompletion63=true){var measure=_step63.value;measure.lengthUnit=this.viewer.lengthUnit;measure.update();// spheres
            var _iteratorNormalCompletion64=true;var _didIteratorError64=false;var _iteratorError64=undefined;try{for(var _iterator64=measure.spheres[Symbol.iterator](),_step64;!(_iteratorNormalCompletion64=(_step64=_iterator64.next()).done);_iteratorNormalCompletion64=true){var _sphere=_step64.value;var _distance8=camera.position.distanceTo(_sphere.getWorldPosition());var _pr3=Potree.utils.projectedRadius(1,camera,_distance8,clientWidth,clientHeight);var _scale3=15/_pr3;_sphere.scale.set(_scale3,_scale3,_scale3);}// labels
            }catch(err){_didIteratorError64=true;_iteratorError64=err;}finally{try{if(!_iteratorNormalCompletion64&&_iterator64.return){_iterator64.return();}}finally{if(_didIteratorError64){throw _iteratorError64;}}}var labels=measure.edgeLabels.concat(measure.angleLabels);var _iteratorNormalCompletion65=true;var _didIteratorError65=false;var _iteratorError65=undefined;try{for(var _iterator65=labels[Symbol.iterator](),_step65;!(_iteratorNormalCompletion65=(_step65=_iterator65.next()).done);_iteratorNormalCompletion65=true){var _label3=_step65.value;var _distance9=camera.position.distanceTo(_label3.getWorldPosition());var _pr4=Potree.utils.projectedRadius(1,camera,_distance9,clientWidth,clientHeight);var _scale4=70/_pr4;_label3.scale.set(_scale4,_scale4,_scale4);}// coordinate labels
            }catch(err){_didIteratorError65=true;_iteratorError65=err;}finally{try{if(!_iteratorNormalCompletion65&&_iterator65.return){_iterator65.return();}}finally{if(_didIteratorError65){throw _iteratorError65;}}}for(var j=0;j<measure.coordinateLabels.length;j++){var label=measure.coordinateLabels[j];var sphere=measure.spheres[j];// measure.points[j]
                var distance=camera.position.distanceTo(sphere.getWorldPosition());var screenPos=sphere.getWorldPosition().clone().project(camera);screenPos.x=Math.round((screenPos.x+1)*clientWidth/2);screenPos.y=Math.round((-screenPos.y+1)*clientHeight/2);screenPos.z=0;screenPos.y-=30;var labelPos=new THREE.Vector3(screenPos.x/clientWidth*2-1,-(screenPos.y/clientHeight)*2+1,0.5);labelPos.unproject(camera);if(this.viewer.scene.cameraMode==Potree.CameraMode.PERSPECTIVE){var direction=labelPos.sub(camera.position).normalize();labelPos=new THREE.Vector3().addVectors(camera.position,direction.multiplyScalar(distance));}label.position.copy(labelPos);var pr=Potree.utils.projectedRadius(1,camera,distance,clientWidth,clientHeight);var scale=70/pr;label.scale.set(scale,scale,scale);}// height label
            if(measure.showHeight){var _label=measure.heightLabel;{var _distance6=_label.position.distanceTo(camera.position);var _pr=Potree.utils.projectedRadius(1,camera,_distance6,clientWidth,clientHeight);var _scale=70/_pr;_label.scale.set(_scale,_scale,_scale);}{// height edge
                var edge=measure.heightEdge;var lowpoint=edge.geometry.vertices[0].clone().add(edge.position);var start=edge.geometry.vertices[2].clone().add(edge.position);var end=edge.geometry.vertices[3].clone().add(edge.position);var lowScreen=lowpoint.clone().project(camera);var startScreen=start.clone().project(camera);var endScreen=end.clone().project(camera);var toPixelCoordinates=function toPixelCoordinates(v){var r=v.clone().addScalar(1).divideScalar(2);r.x=r.x*clientWidth;r.y=r.y*clientHeight;r.z=0;return r;};var lowEL=toPixelCoordinates(lowScreen);var startEL=toPixelCoordinates(startScreen);var endEL=toPixelCoordinates(endScreen);var lToS=lowEL.distanceTo(startEL);var sToE=startEL.distanceTo(endEL);edge.geometry.lineDistances=[0,lToS,lToS,lToS+sToE];edge.geometry.lineDistancesNeedUpdate=true;edge.material.dashSize=10;edge.material.gapSize=10;}}{// area label
                var _label2=measure.areaLabel;var _distance7=_label2.position.distanceTo(camera.position);var _pr2=Potree.utils.projectedRadius(1,camera,_distance7,clientWidth,clientHeight);var _scale2=70/_pr2;_label2.scale.set(_scale2,_scale2,_scale2);}}}catch(err){_didIteratorError63=true;_iteratorError63=err;}finally{try{if(!_iteratorNormalCompletion63&&_iterator63.return){_iterator63.return();}}finally{if(_didIteratorError63){throw _iteratorError63;}}}}},{key:'render',value:function render(){this.viewer.renderer.render(this.scene,this.viewer.scene.getActiveCamera());}}]);return MeasuringTool;}(THREE.EventDispatcher);Potree.Profile=function(_THREE$Object3D4){_inherits(_class8,_THREE$Object3D4);function _class8(){_classCallCheck(this,_class8);var _this39=_possibleConstructorReturn(this,(_class8.__proto__||Object.getPrototypeOf(_class8)).call(this));_this39.constructor.counter=_this39.constructor.counter===undefined?0:_this39.constructor.counter+1;_this39.name='Profile_'+_this39.constructor.counter;_this39.points=[];_this39.spheres=[];_this39.edges=[];_this39.boxes=[];_this39.width=1;_this39.height=20;_this39._modifiable=true;_this39.sphereGeometry=new THREE.SphereGeometry(0.4,10,10);_this39.color=new THREE.Color(0xff0000);_this39.lineColor=new THREE.Color(0xff0000);return _this39;}_createClass(_class8,[{key:'createSphereMaterial',value:function createSphereMaterial(){var sphereMaterial=new THREE.MeshLambertMaterial({shading:THREE.SmoothShading,color:0xff0000,depthTest:false,depthWrite:false});return sphereMaterial;}},{key:'getSegments',value:function getSegments(){var segments=[];for(var _i67=0;_i67<this.points.length-1;_i67++){var start=this.points[_i67].clone();var end=this.points[_i67+1].clone();segments.push({start:start,end:end});}return segments;}},{key:'getSegmentMatrices',value:function getSegmentMatrices(){var segments=this.getSegments();var matrices=[];var _iteratorNormalCompletion66=true;var _didIteratorError66=false;var _iteratorError66=undefined;try{for(var _iterator66=segments[Symbol.iterator](),_step66;!(_iteratorNormalCompletion66=(_step66=_iterator66.next()).done);_iteratorNormalCompletion66=true){var segment=_step66.value;var start=segment.start,end=segment.end;var box=new THREE.Object3D();var length=start.clone().setZ(0).distanceTo(end.clone().setZ(0));box.scale.set(length,10000,this.width);box.up.set(0,0,1);var center=new THREE.Vector3().addVectors(start,end).multiplyScalar(0.5);var diff=new THREE.Vector3().subVectors(end,start);var target=new THREE.Vector3(diff.y,-diff.x,0);box.position.set(0,0,0);box.lookAt(target);box.position.copy(center);box.updateMatrixWorld();matrices.push(box.matrixWorld);}}catch(err){_didIteratorError66=true;_iteratorError66=err;}finally{try{if(!_iteratorNormalCompletion66&&_iterator66.return){_iterator66.return();}}finally{if(_didIteratorError66){throw _iteratorError66;}}}return matrices;}},{key:'addMarker',value:function addMarker(point){var _this40=this;this.points.push(point);var sphere=new THREE.Mesh(this.sphereGeometry,this.createSphereMaterial());this.add(sphere);this.spheres.push(sphere);// edges & boxes
        if(this.points.length>1){var lineGeometry=new THREE.Geometry();lineGeometry.vertices.push(new THREE.Vector3(),new THREE.Vector3());lineGeometry.colors.push(this.lineColor,this.lineColor,this.lineColor);var lineMaterial=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,linewidth:2,transparent:true,opacity:0.4});lineMaterial.depthTest=false;var edge=new THREE.Line(lineGeometry,lineMaterial);edge.visible=false;this.add(edge);this.edges.push(edge);var boxGeometry=new THREE.BoxGeometry(1,1,1);var boxMaterial=new THREE.MeshBasicMaterial({color:0xff0000,transparent:true,opacity:0.2});var box=new THREE.Mesh(boxGeometry,boxMaterial);box.visible=false;this.add(box);this.boxes.push(box);}{// event listeners
            var drag=function drag(e){var I=Potree.utils.getMousePointCloudIntersection(e.drag.end,e.viewer.scene.getActiveCamera(),e.viewer,e.viewer.scene.pointclouds);if(I){var _i68=_this40.spheres.indexOf(e.drag.object);if(_i68!==-1){_this40.setPosition(_i68,I.location);//this.dispatchEvent({
//	'type': 'marker_moved',
//	'profile': this,
//	'index': i
//});
            }}};var drop=function drop(e){var i=_this40.spheres.indexOf(e.drag.object);if(i!==-1){_this40.dispatchEvent({'type':'marker_dropped','profile':_this40,'index':i});}};var mouseover=function mouseover(e){return e.object.material.emissive.setHex(0x888888);};var mouseleave=function mouseleave(e){return e.object.material.emissive.setHex(0x000000);};sphere.addEventListener('drag',drag);sphere.addEventListener('drop',drop);sphere.addEventListener('mouseover',mouseover);sphere.addEventListener('mouseleave',mouseleave);}var event={type:'marker_added',profile:this,sphere:sphere};this.dispatchEvent(event);this.setPosition(this.points.length-1,point);}},{key:'removeMarker',value:function removeMarker(index){this.points.splice(index,1);this.remove(this.spheres[index]);var edgeIndex=index===0?0:index-1;this.remove(this.edges[edgeIndex]);this.edges.splice(edgeIndex,1);this.remove(this.boxes[edgeIndex]);this.boxes.splice(edgeIndex,1);this.spheres.splice(index,1);this.update();this.dispatchEvent({'type':'marker_removed','profile':this});}},{key:'setPosition',value:function setPosition(index,position){var point=this.points[index];point.copy(position);var event={type:'marker_moved',profile:this,index:index,position:point.clone()};this.dispatchEvent(event);this.update();}},{key:'setWidth',value:function setWidth(width){this.width=width;var event={type:'width_changed',profile:this,width:width};this.dispatchEvent(event);this.update();}},{key:'getWidth',value:function getWidth(){return this.width;}},{key:'update',value:function update(){if(this.points.length===0){return;}else if(this.points.length===1){var point=this.points[0];this.spheres[0].position.copy(point);return;}var min=this.points[0].clone();var max=this.points[0].clone();var centroid=new THREE.Vector3();var lastIndex=this.points.length-1;for(var _i69=0;_i69<=lastIndex;_i69++){var _point5=this.points[_i69];var sphere=this.spheres[_i69];var leftIndex=_i69===0?lastIndex:_i69-1;// let rightIndex = (i === lastIndex) ? 0 : i + 1;
        var leftVertex=this.points[leftIndex];// let rightVertex = this.points[rightIndex];
        var leftEdge=this.edges[leftIndex];var rightEdge=this.edges[_i69];var leftBox=this.boxes[leftIndex];// rightBox = this.boxes[i];
// let leftEdgeLength = point.distanceTo(leftVertex);
// let rightEdgeLength = point.distanceTo(rightVertex);
// let leftEdgeCenter = new THREE.Vector3().addVectors(leftVertex, point).multiplyScalar(0.5);
// let rightEdgeCenter = new THREE.Vector3().addVectors(point, rightVertex).multiplyScalar(0.5);
        sphere.position.copy(_point5);if(this._modifiable){sphere.visible=true;}else{sphere.visible=false;}if(leftEdge){leftEdge.geometry.vertices[1].copy(_point5);leftEdge.geometry.verticesNeedUpdate=true;leftEdge.geometry.computeBoundingSphere();}if(rightEdge){rightEdge.geometry.vertices[0].copy(_point5);rightEdge.geometry.verticesNeedUpdate=true;rightEdge.geometry.computeBoundingSphere();}if(leftBox){var start=leftVertex;var end=_point5;var length=start.clone().setZ(0).distanceTo(end.clone().setZ(0));leftBox.scale.set(length,1000000,this.width);leftBox.up.set(0,0,1);var center=new THREE.Vector3().addVectors(start,end).multiplyScalar(0.5);var diff=new THREE.Vector3().subVectors(end,start);var target=new THREE.Vector3(diff.y,-diff.x,0);leftBox.position.set(0,0,0);leftBox.lookAt(target);leftBox.position.copy(center);}centroid.add(_point5);min.min(_point5);max.max(_point5);}centroid.multiplyScalar(1/this.points.length);for(var _i70=0;_i70<this.boxes.length;_i70++){var box=this.boxes[_i70];box.position.z=min.z+(max.z-min.z)/2;}}},{key:'raycast',value:function raycast(raycaster,intersects){for(var _i71=0;_i71<this.points.length;_i71++){var sphere=this.spheres[_i71];sphere.raycast(raycaster,intersects);}// recalculate distances because they are not necessarely correct
// for scaled objects.
// see https://github.com/mrdoob/three.js/issues/5827
// TODO: remove this once the bug has been fixed
        for(var _i72=0;_i72<intersects.length;_i72++){var I=intersects[_i72];I.distance=raycaster.ray.origin.distanceTo(I.point);}intersects.sort(function(a,b){return a.distance-b.distance;});}},{key:'modifiable',get:function get(){return this._modifiable;},set:function set(value){this._modifiable=value;this.update();}}]);return _class8;}(THREE.Object3D);Potree.ProfileTool=function(_THREE$EventDispatche9){_inherits(ProfileTool,_THREE$EventDispatche9);function ProfileTool(viewer){_classCallCheck(this,ProfileTool);var _this41=_possibleConstructorReturn(this,(ProfileTool.__proto__||Object.getPrototypeOf(ProfileTool)).call(this));_this41.viewer=viewer;_this41.renderer=viewer.renderer;_this41.addEventListener('start_inserting_profile',function(e){_this41.viewer.dispatchEvent({type:'cancel_insertions'});});_this41.scene=new THREE.Scene();_this41.scene.name='scene_profile';_this41.light=new THREE.PointLight(0xffffff,1.0);_this41.scene.add(_this41.light);_this41.viewer.inputHandler.registerInteractiveScene(_this41.scene);_this41.onRemove=function(e){return _this41.scene.remove(e.profile);};_this41.onAdd=function(e){return _this41.scene.add(e.profile);};var _iteratorNormalCompletion67=true;var _didIteratorError67=false;var _iteratorError67=undefined;try{for(var _iterator67=viewer.scene.profiles[Symbol.iterator](),_step67;!(_iteratorNormalCompletion67=(_step67=_iterator67.next()).done);_iteratorNormalCompletion67=true){var profile=_step67.value;_this41.onAdd({profile:profile});}}catch(err){_didIteratorError67=true;_iteratorError67=err;}finally{try{if(!_iteratorNormalCompletion67&&_iterator67.return){_iterator67.return();}}finally{if(_didIteratorError67){throw _iteratorError67;}}}viewer.addEventListener("update",_this41.update.bind(_this41));viewer.addEventListener("render.pass.perspective_overlay",_this41.render.bind(_this41));viewer.addEventListener("scene_changed",_this41.onSceneChange.bind(_this41));viewer.scene.addEventListener('profile_added',_this41.onAdd);viewer.scene.addEventListener('profile_removed',_this41.onRemove);return _this41;}_createClass(ProfileTool,[{key:'onSceneChange',value:function onSceneChange(e){if(e.oldScene){e.oldScene.removeEventListeners('profile_added',this.onAdd);e.oldScene.removeEventListeners('profile_removed',this.onRemove);}e.scene.addEventListener('profile_added',this.onAdd);e.scene.addEventListener('profile_removed',this.onRemove);}},{key:'startInsertion',value:function startInsertion(){var _this42=this;var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var domElement=this.viewer.renderer.domElement;var profile=new Potree.Profile();profile.name=args.name||'Profile';this.dispatchEvent({type:'start_inserting_profile',profile:profile});this.scene.add(profile);var cancel={callback:null};var insertionCallback=function insertionCallback(e){if(e.button===THREE.MOUSE.LEFT){if(profile.points.length<=1){var camera=_this42.viewer.scene.getActiveCamera();var distance=camera.position.distanceTo(profile.points[0]);var clientSize=_this42.viewer.renderer.getSize();var pr=Potree.utils.projectedRadius(1,camera,distance,clientSize.width,clientSize.height);var width=10/pr;profile.setWidth(width);}profile.addMarker(profile.points[profile.points.length-1].clone());_this42.viewer.inputHandler.startDragging(profile.spheres[profile.spheres.length-1]);}else if(e.button===THREE.MOUSE.RIGHT){cancel.callback();}};cancel.callback=function(e){profile.removeMarker(profile.points.length-1);domElement.removeEventListener('mouseup',insertionCallback,true);_this42.viewer.removeEventListener('cancel_insertions',cancel.callback);};this.viewer.addEventListener('cancel_insertions',cancel.callback);domElement.addEventListener('mouseup',insertionCallback,true);profile.addMarker(new THREE.Vector3(0,0,0));this.viewer.inputHandler.startDragging(profile.spheres[profile.spheres.length-1]);this.viewer.scene.addProfile(profile);return profile;}},{key:'update',value:function update(){var camera=this.viewer.scene.getActiveCamera();var profiles=this.viewer.scene.profiles;var clientWidth=this.renderer.getSize().width;var clientHeight=this.renderer.getSize().height;this.light.position.copy(camera.position);// make size independant of distance
        var _iteratorNormalCompletion68=true;var _didIteratorError68=false;var _iteratorError68=undefined;try{for(var _iterator68=profiles[Symbol.iterator](),_step68;!(_iteratorNormalCompletion68=(_step68=_iterator68.next()).done);_iteratorNormalCompletion68=true){var profile=_step68.value;var _iteratorNormalCompletion69=true;var _didIteratorError69=false;var _iteratorError69=undefined;try{for(var _iterator69=profile.spheres[Symbol.iterator](),_step69;!(_iteratorNormalCompletion69=(_step69=_iterator69.next()).done);_iteratorNormalCompletion69=true){var sphere=_step69.value;var distance=camera.position.distanceTo(sphere.getWorldPosition());var pr=Potree.utils.projectedRadius(1,camera,distance,clientWidth,clientHeight);var scale=15/pr;sphere.scale.set(scale,scale,scale);}}catch(err){_didIteratorError69=true;_iteratorError69=err;}finally{try{if(!_iteratorNormalCompletion69&&_iterator69.return){_iterator69.return();}}finally{if(_didIteratorError69){throw _iteratorError69;}}}}}catch(err){_didIteratorError68=true;_iteratorError68=err;}finally{try{if(!_iteratorNormalCompletion68&&_iterator68.return){_iterator68.return();}}finally{if(_didIteratorError68){throw _iteratorError68;}}}}},{key:'render',value:function render(){this.viewer.renderer.render(this.scene,this.viewer.scene.getActiveCamera());}}]);return ProfileTool;}(THREE.EventDispatcher);Potree.TransformationTool=function(){function TransformationTool(viewer){var _this43=this;_classCallCheck(this,TransformationTool);this.viewer=viewer;this.scene=new THREE.Scene();this.selection=[];this.pivot=new THREE.Vector3();this.dragging=false;this.showPickVolumes=false;this.viewer.inputHandler.registerInteractiveScene(this.scene);this.viewer.inputHandler.addEventListener('selection_changed',function(e){var _iteratorNormalCompletion70=true;var _didIteratorError70=false;var _iteratorError70=undefined;try{for(var _iterator70=_this43.selection[Symbol.iterator](),_step70;!(_iteratorNormalCompletion70=(_step70=_iterator70.next()).done);_iteratorNormalCompletion70=true){var selected=_step70.value;_this43.viewer.inputHandler.blacklist.delete(selected);}}catch(err){_didIteratorError70=true;_iteratorError70=err;}finally{try{if(!_iteratorNormalCompletion70&&_iterator70.return){_iterator70.return();}}finally{if(_didIteratorError70){throw _iteratorError70;}}}_this43.selection=e.selection;var _iteratorNormalCompletion71=true;var _didIteratorError71=false;var _iteratorError71=undefined;try{for(var _iterator71=_this43.selection[Symbol.iterator](),_step71;!(_iteratorNormalCompletion71=(_step71=_iterator71.next()).done);_iteratorNormalCompletion71=true){var _selected=_step71.value;_this43.viewer.inputHandler.blacklist.add(_selected);}}catch(err){_didIteratorError71=true;_iteratorError71=err;}finally{try{if(!_iteratorNormalCompletion71&&_iterator71.return){_iterator71.return();}}finally{if(_didIteratorError71){throw _iteratorError71;}}}});var red=0xE73100;var green=0x44A24A;var blue=0x2669E7;this.activeHandle=null;this.scaleHandles={"scale.x+":{name:"scale.x+",node:new THREE.Object3D(),color:red,alignment:[+1,+0,+0]},"scale.x-":{name:"scale.x-",node:new THREE.Object3D(),color:red,alignment:[-1,+0,+0]},"scale.y+":{name:"scale.y+",node:new THREE.Object3D(),color:green,alignment:[+0,+1,+0]},"scale.y-":{name:"scale.y-",node:new THREE.Object3D(),color:green,alignment:[+0,-1,+0]},"scale.z+":{name:"scale.z+",node:new THREE.Object3D(),color:blue,alignment:[+0,+0,+1]},"scale.z-":{name:"scale.z-",node:new THREE.Object3D(),color:blue,alignment:[+0,+0,-1]}};this.focusHandles={"focus.x+":{name:"focus.x+",node:new THREE.Object3D(),color:red,alignment:[+1,+0,+0]},"focus.x-":{name:"focus.x-",node:new THREE.Object3D(),color:red,alignment:[-1,+0,+0]},"focus.y+":{name:"focus.y+",node:new THREE.Object3D(),color:green,alignment:[+0,+1,+0]},"focus.y-":{name:"focus.y-",node:new THREE.Object3D(),color:green,alignment:[+0,-1,+0]},"focus.z+":{name:"focus.z+",node:new THREE.Object3D(),color:blue,alignment:[+0,+0,+1]},"focus.z-":{name:"focus.z-",node:new THREE.Object3D(),color:blue,alignment:[+0,+0,-1]}};this.translationHandles={"translation.x":{name:"translation.x",node:new THREE.Object3D(),color:red,alignment:[1,0,0]},"translation.y":{name:"translation.y",node:new THREE.Object3D(),color:green,alignment:[0,1,0]},"translation.z":{name:"translation.z",node:new THREE.Object3D(),color:blue,alignment:[0,0,1]}};this.rotationHandles={"rotation.x":{name:"rotation.x",node:new THREE.Object3D(),color:red,alignment:[1,0,0]},"rotation.y":{name:"rotation.y",node:new THREE.Object3D(),color:green,alignment:[0,1,0]},"rotation.z":{name:"rotation.z",node:new THREE.Object3D(),color:blue,alignment:[0,0,1]}};this.handles=Object.assign({},this.scaleHandles,this.focusHandles,this.translationHandles,this.rotationHandles);this.pickVolumes=[];this.initializeScaleHandles();this.initializeFocusHandles();this.initializeTranslationHandles();this.initializeRotationHandles();var boxFrameGeometry=new THREE.Geometry();{// bottom
    boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));// top
    boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));// sides
    boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));}this.frame=new THREE.LineSegments(boxFrameGeometry,new THREE.LineBasicMaterial({color:0xffff00}));this.scene.add(this.frame);}_createClass(TransformationTool,[{key:'initializeScaleHandles',value:function initializeScaleHandles(){var _this44=this;var sgSphere=new THREE.SphereGeometry(1,32,32);var sgLowPolySphere=new THREE.SphereGeometry(1,16,16);var _iteratorNormalCompletion72=true;var _didIteratorError72=false;var _iteratorError72=undefined;try{var _loop4=function _loop4(){var _node$position;var handleName=_step72.value;var handle=_this44.scaleHandles[handleName];var node=handle.node;_this44.scene.add(node);(_node$position=node.position).set.apply(_node$position,_toConsumableArray(handle.alignment)).multiplyScalar(0.5);var material=new THREE.MeshBasicMaterial({color:handle.color,opacity:0.4,transparent:true});var outlineMaterial=new THREE.MeshBasicMaterial({color:0x000000,side:THREE.BackSide,opacity:0.4,transparent:true});var pickMaterial=new THREE.MeshNormalMaterial({opacity:0.2,transparent:true,visible:_this44.showPickVolumes});var sphere=new THREE.Mesh(sgSphere,material);sphere.scale.set(1.3,1.3,1.3);sphere.name=handleName+'.handle';node.add(sphere);var outline=new THREE.Mesh(sgSphere,outlineMaterial);outline.scale.set(1.4,1.4,1.4);outline.name=handleName+'.outline';sphere.add(outline);var pickSphere=new THREE.Mesh(sgLowPolySphere,pickMaterial);pickSphere.name=handleName+'.pick_volume';pickSphere.scale.set(3,3,3);sphere.add(pickSphere);pickSphere.handle=handleName;_this44.pickVolumes.push(pickSphere);node.setOpacity=function(target){var opacity={x:material.opacity};var t=new TWEEN.Tween(opacity).to({x:target},100);t.onUpdate(function(){sphere.visible=opacity.x>0;pickSphere.visible=opacity.x>0;material.opacity=opacity.x;outlineMaterial.opacity=opacity.x;pickSphere.material.opacity=opacity.x*0.5;});t.start();};pickSphere.addEventListener("drag",function(e){return _this44.dragScaleHandle(e);});pickSphere.addEventListener("drop",function(e){return _this44.dropScaleHandle(e);});pickSphere.addEventListener("mouseover",function(e){//node.setOpacity(1);
    });pickSphere.addEventListener("click",function(e){e.consume();});pickSphere.addEventListener("mouseleave",function(e){//node.setOpacity(0.4);
    });};for(var _iterator72=Object.keys(this.scaleHandles)[Symbol.iterator](),_step72;!(_iteratorNormalCompletion72=(_step72=_iterator72.next()).done);_iteratorNormalCompletion72=true){_loop4();}}catch(err){_didIteratorError72=true;_iteratorError72=err;}finally{try{if(!_iteratorNormalCompletion72&&_iterator72.return){_iterator72.return();}}finally{if(_didIteratorError72){throw _iteratorError72;}}}}},{key:'initializeFocusHandles',value:function initializeFocusHandles(){var _this45=this;//let sgBox = new THREE.BoxGeometry(1, 1, 1);
        var sgPlane=new THREE.PlaneGeometry(4,4,1,1);var sgLowPolySphere=new THREE.SphereGeometry(1,16,16);var texture=new THREE.TextureLoader().load(Potree.resourcePath+'/icons/eye_2.png');var _iteratorNormalCompletion73=true;var _didIteratorError73=false;var _iteratorError73=undefined;try{var _loop5=function _loop5(){var handleName=_step73.value;var handle=_this45.focusHandles[handleName];var node=handle.node;_this45.scene.add(node);var align=handle.alignment;//node.lookAt(new THREE.Vector3().addVectors(node.position, new THREE.Vector3(...align)));
            node.lookAt(new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(align))))());var off=0.8;if(align[0]===1){node.position.set(1,off,-off).multiplyScalar(0.5);node.rotation.z=Math.PI/2;}else if(align[0]===-1){node.position.set(-1,-off,-off).multiplyScalar(0.5);node.rotation.z=Math.PI/2;}else if(align[1]===1){node.position.set(-off,1,-off).multiplyScalar(0.5);node.rotation.set(Math.PI/2,Math.PI,0.0);}else if(align[1]===-1){node.position.set(off,-1,-off).multiplyScalar(0.5);node.rotation.set(Math.PI/2,0.0,0.0);}else if(align[2]===1){node.position.set(off,off,1).multiplyScalar(0.5);}else if(align[2]===-1){node.position.set(-off,off,-1).multiplyScalar(0.5);}var material=new THREE.MeshBasicMaterial({color:handle.color,opacity:0,transparent:true,map:texture});//let outlineMaterial = new THREE.MeshBasicMaterial({
//	color: 0x000000,
//	side: THREE.BackSide,
//	opacity: 0,
//	transparent: true});
            var pickMaterial=new THREE.MeshNormalMaterial({//opacity: 0,
                transparent:true,visible:_this45.showPickVolumes});var box=new THREE.Mesh(sgPlane,material);box.name=handleName+'.handle';box.scale.set(1.5,1.5,1.5);box.position.set(0,0,0);box.visible=false;node.add(box);//handle.focusNode = box;
//let outline = new THREE.Mesh(sgPlane, outlineMaterial);
//outline.scale.set(1.4, 1.4, 1.4);
//outline.name = `${handleName}.outline`;
//box.add(outline);
            var pickSphere=new THREE.Mesh(sgLowPolySphere,pickMaterial);pickSphere.name=handleName+'.pick_volume';pickSphere.scale.set(3,3,3);box.add(pickSphere);pickSphere.handle=handleName;_this45.pickVolumes.push(pickSphere);node.setOpacity=function(target){var opacity={x:material.opacity};var t=new TWEEN.Tween(opacity).to({x:target},100);t.onUpdate(function(){pickSphere.visible=opacity.x>0;box.visible=opacity.x>0;material.opacity=opacity.x;//outlineMaterial.opacity = opacity.x;
                pickSphere.material.opacity=opacity.x*0.5;});t.start();};pickSphere.addEventListener("drag",function(e){});pickSphere.addEventListener("mouseup",function(e){e.consume();});pickSphere.addEventListener("mousedown",function(e){e.consume();});pickSphere.addEventListener("click",function(e){e.consume();var selected=_this45.selection[0];var maxScale=Math.max.apply(Math,_toConsumableArray(selected.scale.toArray()));var minScale=Math.min.apply(Math,_toConsumableArray(selected.scale.toArray()));var handleLength=Math.abs(selected.scale.dot(new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(handle.alignment))))()));var alignment=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(handle.alignment))))().multiplyScalar(2*maxScale/handleLength);alignment.applyMatrix4(selected.matrixWorld);var newCamPos=alignment;var newCamTarget=selected.getWorldPosition();Potree.utils.moveTo(_this45.viewer.scene,newCamPos,newCamTarget);});pickSphere.addEventListener("mouseover",function(e){//box.setOpacity(1);
            });pickSphere.addEventListener("mouseleave",function(e){//box.setOpacity(0.4);
            });};for(var _iterator73=Object.keys(this.focusHandles)[Symbol.iterator](),_step73;!(_iteratorNormalCompletion73=(_step73=_iterator73.next()).done);_iteratorNormalCompletion73=true){_loop5();}}catch(err){_didIteratorError73=true;_iteratorError73=err;}finally{try{if(!_iteratorNormalCompletion73&&_iterator73.return){_iterator73.return();}}finally{if(_didIteratorError73){throw _iteratorError73;}}}}},{key:'initializeTranslationHandles',value:function initializeTranslationHandles(){var _this46=this;var boxGeometry=new THREE.BoxGeometry(1,1,1);var _iteratorNormalCompletion74=true;var _didIteratorError74=false;var _iteratorError74=undefined;try{var _loop6=function _loop6(){var handleName=_step74.value;var handle=_this46.handles[handleName];var node=handle.node;_this46.scene.add(node);var material=new THREE.MeshBasicMaterial({color:handle.color,opacity:0.4,transparent:true});var outlineMaterial=new THREE.MeshBasicMaterial({color:0x000000,side:THREE.BackSide,opacity:0.4,transparent:true});var pickMaterial=new THREE.MeshNormalMaterial({opacity:0.2,transparent:true,visible:_this46.showPickVolumes});var box=new THREE.Mesh(boxGeometry,material);box.name=handleName+'.handle';box.scale.set(0.2,0.2,40);box.lookAt(new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(handle.alignment))))());box.renderOrder=10;node.add(box);handle.translateNode=box;var outline=new THREE.Mesh(boxGeometry,outlineMaterial);outline.name=handleName+'.outline';outline.scale.set(3,3,1.03);outline.renderOrder=0;box.add(outline);var pickVolume=new THREE.Mesh(boxGeometry,pickMaterial);pickVolume.name=handleName+'.pick_volume';pickVolume.scale.set(12,12,1.1);pickVolume.handle=handleName;box.add(pickVolume);_this46.pickVolumes.push(pickVolume);node.setOpacity=function(target){var opacity={x:material.opacity};var t=new TWEEN.Tween(opacity).to({x:target},100);t.onUpdate(function(){box.visible=opacity.x>0;pickVolume.visible=opacity.x>0;material.opacity=opacity.x;outlineMaterial.opacity=opacity.x;pickMaterial.opacity=opacity.x*0.5;});t.start();};pickVolume.addEventListener("drag",function(e){_this46.dragTranslationHandle(e);});pickVolume.addEventListener("drop",function(e){_this46.dropTranslationHandle(e);});};for(var _iterator74=Object.keys(this.translationHandles)[Symbol.iterator](),_step74;!(_iteratorNormalCompletion74=(_step74=_iterator74.next()).done);_iteratorNormalCompletion74=true){_loop6();}}catch(err){_didIteratorError74=true;_iteratorError74=err;}finally{try{if(!_iteratorNormalCompletion74&&_iterator74.return){_iterator74.return();}}finally{if(_didIteratorError74){throw _iteratorError74;}}}}},{key:'initializeRotationHandles',value:function initializeRotationHandles(){var _this47=this;var adjust=0.5;var torusGeometry=new THREE.TorusGeometry(1,adjust*0.015,8,64,Math.PI/2);var outlineGeometry=new THREE.TorusGeometry(1,adjust*0.04,8,64,Math.PI/2);var pickGeometry=new THREE.TorusGeometry(1,adjust*0.1,6,4,Math.PI/2);var _iteratorNormalCompletion75=true;var _didIteratorError75=false;var _iteratorError75=undefined;try{var _loop7=function _loop7(){var handleName=_step75.value;var handle=_this47.handles[handleName];var node=handle.node;_this47.scene.add(node);var material=new THREE.MeshBasicMaterial({color:handle.color,opacity:0.4,transparent:true});var outlineMaterial=new THREE.MeshBasicMaterial({color:0x000000,side:THREE.BackSide,opacity:0.4,transparent:true});var pickMaterial=new THREE.MeshNormalMaterial({opacity:0.2,transparent:true,visible:_this47.showPickVolumes});var box=new THREE.Mesh(torusGeometry,material);box.name=handleName+'.handle';box.scale.set(20,20,20);box.lookAt(new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(handle.alignment))))());node.add(box);handle.translateNode=box;var outline=new THREE.Mesh(outlineGeometry,outlineMaterial);outline.name=handleName+'.outline';outline.scale.set(1,1,1);outline.renderOrder=0;box.add(outline);var pickVolume=new THREE.Mesh(pickGeometry,pickMaterial);pickVolume.name=handleName+'.pick_volume';pickVolume.scale.set(1,1,1);pickVolume.handle=handleName;box.add(pickVolume);_this47.pickVolumes.push(pickVolume);node.setOpacity=function(target){var opacity={x:material.opacity};var t=new TWEEN.Tween(opacity).to({x:target},100);t.onUpdate(function(){box.visible=opacity.x>0;pickVolume.visible=opacity.x>0;material.opacity=opacity.x;outlineMaterial.opacity=opacity.x;pickMaterial.opacity=opacity.x*0.5;});t.start();};//pickVolume.addEventListener("mouseover", (e) => {
//	//let a = this.viewer.scene.getActiveCamera().getWorldDirection().dot(pickVolume.getWorldDirection());
//	console.log(pickVolume.getWorldDirection());
//});
        pickVolume.addEventListener("drag",function(e){_this47.dragRotationHandle(e);});pickVolume.addEventListener("drop",function(e){_this47.dropRotationHandle(e);});};for(var _iterator75=Object.keys(this.rotationHandles)[Symbol.iterator](),_step75;!(_iteratorNormalCompletion75=(_step75=_iterator75.next()).done);_iteratorNormalCompletion75=true){_loop7();}}catch(err){_didIteratorError75=true;_iteratorError75=err;}finally{try{if(!_iteratorNormalCompletion75&&_iterator75.return){_iterator75.return();}}finally{if(_didIteratorError75){throw _iteratorError75;}}}}},{key:'dragRotationHandle',value:function dragRotationHandle(e){var drag=e.drag;var handle=this.activeHandle;var camera=this.viewer.scene.getActiveCamera();if(!handle){return;};var localNormal=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(handle.alignment))))();var n=new THREE.Vector3();n.copy(new(Function.prototype.bind.apply(THREE.Vector4,[null].concat(_toConsumableArray(localNormal.toArray()),[0])))().applyMatrix4(handle.node.matrixWorld));n.normalize();if(!drag.intersectionStart){//this.viewer.scene.scene.remove(this.debug);
//this.debug = new THREE.Object3D();
//this.viewer.scene.scene.add(this.debug);
//Potree.utils.debugSphere(this.debug, drag.location, 3, 0xaaaaaa);
//let debugEnd = drag.location.clone().add(n.clone().multiplyScalar(20));
//Potree.utils.debugLine(this.debug, drag.location, debugEnd, 0xff0000);
        drag.intersectionStart=drag.location;drag.objectStart=drag.object.getWorldPosition();drag.handle=handle;var plane=new THREE.Plane().setFromNormalAndCoplanarPoint(n,drag.intersectionStart);drag.dragPlane=plane;drag.pivot=drag.intersectionStart;}else{handle=drag.handle;}this.dragging=true;var mouse=drag.end;var domElement=this.viewer.renderer.domElement;var ray=Potree.utils.mouseToRay(mouse,camera,domElement.clientWidth,domElement.clientHeight);var I=ray.intersectPlane(drag.dragPlane);if(I){var center=this.scene.getWorldPosition();var from=drag.pivot;var to=I;var v1=from.clone().sub(center).normalize();var v2=to.clone().sub(center).normalize();var angle=Math.acos(v1.dot(v2));var sign=Math.sign(v1.cross(v2).dot(n));angle=angle*sign;if(Number.isNaN(angle)){return;}var normal=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(handle.alignment))))();var _iteratorNormalCompletion76=true;var _didIteratorError76=false;var _iteratorError76=undefined;try{for(var _iterator76=this.selection[Symbol.iterator](),_step76;!(_iteratorNormalCompletion76=(_step76=_iterator76.next()).done);_iteratorNormalCompletion76=true){var selection=_step76.value;selection.rotateOnAxis(normal,angle);selection.dispatchEvent({type:"orientation_changed",object:selection});}}catch(err){_didIteratorError76=true;_iteratorError76=err;}finally{try{if(!_iteratorNormalCompletion76&&_iterator76.return){_iterator76.return();}}finally{if(_didIteratorError76){throw _iteratorError76;}}}drag.pivot=I;}}},{key:'dropRotationHandle',value:function dropRotationHandle(e){this.dragging=false;this.setActiveHandle(null);}},{key:'dragTranslationHandle',value:function dragTranslationHandle(e){var drag=e.drag;var handle=this.activeHandle;var camera=this.viewer.scene.getActiveCamera();if(!drag.intersectionStart&&handle){drag.intersectionStart=drag.location;drag.objectStart=drag.object.getWorldPosition();var start=drag.intersectionStart;var dir=new(Function.prototype.bind.apply(THREE.Vector4,[null].concat(_toConsumableArray(handle.alignment),[0])))().applyMatrix4(this.scene.matrixWorld);var end=new THREE.Vector3().addVectors(start,dir);var line=new THREE.Line3(start.clone(),end.clone());drag.line=line;var camOnLine=line.closestPointToPoint(camera.position,false);var normal=new THREE.Vector3().subVectors(camera.position,camOnLine);var plane=new THREE.Plane().setFromNormalAndCoplanarPoint(normal,drag.intersectionStart);drag.dragPlane=plane;drag.pivot=drag.intersectionStart;}else{handle=drag.handle;}this.dragging=true;{var mouse=drag.end;var domElement=this.viewer.renderer.domElement;var ray=Potree.utils.mouseToRay(mouse,camera,domElement.clientWidth,domElement.clientHeight);var I=ray.intersectPlane(drag.dragPlane);if(I){var iOnLine=drag.line.closestPointToPoint(I,false);var diff=new THREE.Vector3().subVectors(iOnLine,drag.pivot);var _iteratorNormalCompletion77=true;var _didIteratorError77=false;var _iteratorError77=undefined;try{for(var _iterator77=this.selection[Symbol.iterator](),_step77;!(_iteratorNormalCompletion77=(_step77=_iterator77.next()).done);_iteratorNormalCompletion77=true){var selection=_step77.value;selection.position.add(diff);selection.dispatchEvent({type:"position_changed",object:selection});}}catch(err){_didIteratorError77=true;_iteratorError77=err;}finally{try{if(!_iteratorNormalCompletion77&&_iterator77.return){_iterator77.return();}}finally{if(_didIteratorError77){throw _iteratorError77;}}}drag.pivot=drag.pivot.add(diff);}}}},{key:'dropTranslationHandle',value:function dropTranslationHandle(e){this.dragging=false;this.setActiveHandle(null);}},{key:'dropScaleHandle',value:function dropScaleHandle(e){this.dragging=false;this.setActiveHandle(null);}},{key:'dragScaleHandle',value:function dragScaleHandle(e){var drag=e.drag;var handle=this.activeHandle;var camera=this.viewer.scene.getActiveCamera();if(!drag.intersectionStart){drag.intersectionStart=drag.location;drag.objectStart=drag.object.getWorldPosition();drag.handle=handle;var start=drag.intersectionStart;var dir=new(Function.prototype.bind.apply(THREE.Vector4,[null].concat(_toConsumableArray(handle.alignment),[0])))().applyMatrix4(this.scene.matrixWorld);var end=new THREE.Vector3().addVectors(start,dir);var line=new THREE.Line3(start.clone(),end.clone());drag.line=line;var camOnLine=line.closestPointToPoint(camera.position,false);var normal=new THREE.Vector3().subVectors(camera.position,camOnLine);var plane=new THREE.Plane().setFromNormalAndCoplanarPoint(normal,drag.intersectionStart);drag.dragPlane=plane;drag.pivot=drag.intersectionStart;//Potree.utils.debugSphere(viewer.scene.scene, drag.pivot, 0.05);
    }else{handle=drag.handle;}this.dragging=true;{var mouse=drag.end;var domElement=this.viewer.renderer.domElement;var ray=Potree.utils.mouseToRay(mouse,camera,domElement.clientWidth,domElement.clientHeight);var I=ray.intersectPlane(drag.dragPlane);if(I){var iOnLine=drag.line.closestPointToPoint(I,false);var direction=handle.alignment.reduce(function(a,v){return a+v;},0);var toObjectSpace=new THREE.Matrix4().getInverse(this.selection[0].matrixWorld);var iOnLineOS=iOnLine.clone().applyMatrix4(toObjectSpace);var pivotOS=drag.pivot.clone().applyMatrix4(toObjectSpace);var diffOS=new THREE.Vector3().subVectors(iOnLineOS,pivotOS);var dragDirectionOS=diffOS.clone().normalize();if(iOnLine.distanceTo(drag.pivot)===0){dragDirectionOS.set(0,0,0);}var dragDirection=dragDirectionOS.dot(new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(handle.alignment))))());var diff=new THREE.Vector3().subVectors(iOnLine,drag.pivot);var diffScale=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(handle.alignment))))().multiplyScalar(diff.length()*direction*dragDirection);var diffPosition=diff.clone().multiplyScalar(0.5);var _iteratorNormalCompletion78=true;var _didIteratorError78=false;var _iteratorError78=undefined;try{for(var _iterator78=this.selection[Symbol.iterator](),_step78;!(_iteratorNormalCompletion78=(_step78=_iterator78.next()).done);_iteratorNormalCompletion78=true){var selection=_step78.value;selection.scale.add(diffScale);selection.scale.x=Math.max(0.1,selection.scale.x);selection.scale.y=Math.max(0.1,selection.scale.y);selection.scale.z=Math.max(0.1,selection.scale.z);selection.position.add(diffPosition);selection.dispatchEvent({type:"position_changed",object:selection});selection.dispatchEvent({type:"scale_changed",object:selection});}}catch(err){_didIteratorError78=true;_iteratorError78=err;}finally{try{if(!_iteratorNormalCompletion78&&_iterator78.return){_iterator78.return();}}finally{if(_didIteratorError78){throw _iteratorError78;}}}drag.pivot.copy(iOnLine);//Potree.utils.debugSphere(viewer.scene.scene, drag.pivot, 0.05);
    }}}},{key:'setActiveHandle',value:function setActiveHandle(handle){if(this.dragging){return;}if(this.activeHandle===handle){return;}this.activeHandle=handle;if(handle===null){var _iteratorNormalCompletion79=true;var _didIteratorError79=false;var _iteratorError79=undefined;try{for(var _iterator79=Object.keys(this.handles)[Symbol.iterator](),_step79;!(_iteratorNormalCompletion79=(_step79=_iterator79.next()).done);_iteratorNormalCompletion79=true){var handleName=_step79.value;var _handle=this.handles[handleName];_handle.node.setOpacity(0);}}catch(err){_didIteratorError79=true;_iteratorError79=err;}finally{try{if(!_iteratorNormalCompletion79&&_iterator79.return){_iterator79.return();}}finally{if(_didIteratorError79){throw _iteratorError79;}}}}var _iteratorNormalCompletion80=true;var _didIteratorError80=false;var _iteratorError80=undefined;try{for(var _iterator80=Object.keys(this.focusHandles)[Symbol.iterator](),_step80;!(_iteratorNormalCompletion80=(_step80=_iterator80.next()).done);_iteratorNormalCompletion80=true){var _handleName=_step80.value;var _handle2=this.focusHandles[_handleName];if(this.activeHandle===_handle2){_handle2.node.setOpacity(1.0);}else{_handle2.node.setOpacity(0.4);}}}catch(err){_didIteratorError80=true;_iteratorError80=err;}finally{try{if(!_iteratorNormalCompletion80&&_iterator80.return){_iterator80.return();}}finally{if(_didIteratorError80){throw _iteratorError80;}}}var _iteratorNormalCompletion81=true;var _didIteratorError81=false;var _iteratorError81=undefined;try{for(var _iterator81=Object.keys(this.translationHandles)[Symbol.iterator](),_step81;!(_iteratorNormalCompletion81=(_step81=_iterator81.next()).done);_iteratorNormalCompletion81=true){var _handleName2=_step81.value;var _handle3=this.translationHandles[_handleName2];if(this.activeHandle===_handle3){_handle3.node.setOpacity(1.0);}else{_handle3.node.setOpacity(0.4);}}}catch(err){_didIteratorError81=true;_iteratorError81=err;}finally{try{if(!_iteratorNormalCompletion81&&_iterator81.return){_iterator81.return();}}finally{if(_didIteratorError81){throw _iteratorError81;}}}var _iteratorNormalCompletion82=true;var _didIteratorError82=false;var _iteratorError82=undefined;try{for(var _iterator82=Object.keys(this.rotationHandles)[Symbol.iterator](),_step82;!(_iteratorNormalCompletion82=(_step82=_iterator82.next()).done);_iteratorNormalCompletion82=true){var _handleName3=_step82.value;var _handle4=this.rotationHandles[_handleName3];//if(this.activeHandle === handle){
//	handle.node.setOpacity(1.0);
//}else{
//	handle.node.setOpacity(0.4)
//}
        _handle4.node.setOpacity(0.4);}}catch(err){_didIteratorError82=true;_iteratorError82=err;}finally{try{if(!_iteratorNormalCompletion82&&_iterator82.return){_iterator82.return();}}finally{if(_didIteratorError82){throw _iteratorError82;}}}var _iteratorNormalCompletion83=true;var _didIteratorError83=false;var _iteratorError83=undefined;try{for(var _iterator83=Object.keys(this.scaleHandles)[Symbol.iterator](),_step83;!(_iteratorNormalCompletion83=(_step83=_iterator83.next()).done);_iteratorNormalCompletion83=true){var _handleName4=_step83.value;var _handle5=this.scaleHandles[_handleName4];if(this.activeHandle===_handle5){_handle5.node.setOpacity(1.0);var relatedFocusHandle=this.focusHandles[_handle5.name.replace("scale","focus")];var relatedFocusNode=relatedFocusHandle.node;relatedFocusNode.setOpacity(0.4);var _iteratorNormalCompletion84=true;var _didIteratorError84=false;var _iteratorError84=undefined;try{for(var _iterator84=Object.keys(this.translationHandles)[Symbol.iterator](),_step84;!(_iteratorNormalCompletion84=(_step84=_iterator84.next()).done);_iteratorNormalCompletion84=true){var translationHandleName=_step84.value;var translationHandle=this.translationHandles[translationHandleName];translationHandle.node.setOpacity(0.4);}//let relatedTranslationHandle = this.translationHandles[
//	handle.name.replace("scale", "translation").replace(/[+-]/g, "")];
//let relatedTranslationNode = relatedTranslationHandle.node;
//relatedTranslationNode.setOpacity(0.4);
    }catch(err){_didIteratorError84=true;_iteratorError84=err;}finally{try{if(!_iteratorNormalCompletion84&&_iterator84.return){_iterator84.return();}}finally{if(_didIteratorError84){throw _iteratorError84;}}}}else{_handle5.node.setOpacity(0.4);}}}catch(err){_didIteratorError83=true;_iteratorError83=err;}finally{try{if(!_iteratorNormalCompletion83&&_iterator83.return){_iterator83.return();}}finally{if(_didIteratorError83){throw _iteratorError83;}}}if(handle){handle.node.setOpacity(1.0);}}},{key:'update',value:function update(){if(this.selection.length===1){this.scene.visible=true;this.scene.updateMatrix();this.scene.updateMatrixWorld();var selected=this.selection[0];var _world=selected.matrixWorld;var camera=this.viewer.scene.getActiveCamera();var domElement=this.viewer.renderer.domElement;var mouse=this.viewer.inputHandler.mouse;var center=selected.boundingBox.getCenter().clone().applyMatrix4(selected.matrixWorld);this.scene.scale.copy(selected.boundingBox.getSize().multiply(selected.scale));this.scene.position.copy(center);this.scene.rotation.copy(selected.rotation);this.scene.updateMatrixWorld();{// adjust scale of components
        var _iteratorNormalCompletion85=true;var _didIteratorError85=false;var _iteratorError85=undefined;try{for(var _iterator85=Object.keys(this.handles)[Symbol.iterator](),_step85;!(_iteratorNormalCompletion85=(_step85=_iterator85.next()).done);_iteratorNormalCompletion85=true){var _handleName5=_step85.value;var _handle6=this.handles[_handleName5];var _node17=_handle6.node;var handlePos=_node17.getWorldPosition();var distance=handlePos.distanceTo(camera.position);var pr=Potree.utils.projectedRadius(1,camera,distance,domElement.clientWidth,domElement.clientHeight);var ws=_node17.parent.getWorldScale();var s=7/pr;var scale=new THREE.Vector3(s,s,s).divide(ws);var rot=new THREE.Matrix4().makeRotationFromEuler(_node17.rotation);var rotInv=new THREE.Matrix4().getInverse(rot);scale.applyMatrix4(rotInv);scale.x=Math.abs(scale.x);scale.y=Math.abs(scale.y);scale.z=Math.abs(scale.z);_node17.scale.copy(scale);}// adjust rotation handles
        }catch(err){_didIteratorError85=true;_iteratorError85=err;}finally{try{if(!_iteratorNormalCompletion85&&_iterator85.return){_iterator85.return();}}finally{if(_didIteratorError85){throw _iteratorError85;}}}if(!this.dragging){var tWorld=this.scene.matrixWorld;var tObject=new THREE.Matrix4().getInverse(tWorld);var camObjectPos=camera.getWorldPosition().applyMatrix4(tObject);var x=this.rotationHandles["rotation.x"].node.rotation;var y=this.rotationHandles["rotation.y"].node.rotation;var z=this.rotationHandles["rotation.z"].node.rotation;x.order="ZYX";y.order="ZYX";var above=camObjectPos.z>0;var below=!above;var PI_HALF=Math.PI/2;if(above){if(camObjectPos.x>0&&camObjectPos.y>0){x.x=1*PI_HALF;y.y=3*PI_HALF;z.z=0*PI_HALF;}else if(camObjectPos.x<0&&camObjectPos.y>0){x.x=1*PI_HALF;y.y=2*PI_HALF;z.z=1*PI_HALF;}else if(camObjectPos.x<0&&camObjectPos.y<0){x.x=2*PI_HALF;y.y=2*PI_HALF;z.z=2*PI_HALF;}else if(camObjectPos.x>0&&camObjectPos.y<0){x.x=2*PI_HALF;y.y=3*PI_HALF;z.z=3*PI_HALF;}}else if(below){if(camObjectPos.x>0&&camObjectPos.y>0){x.x=0*PI_HALF;y.y=0*PI_HALF;z.z=0*PI_HALF;}else if(camObjectPos.x<0&&camObjectPos.y>0){x.x=0*PI_HALF;y.y=1*PI_HALF;z.z=1*PI_HALF;}else if(camObjectPos.x<0&&camObjectPos.y<0){x.x=3*PI_HALF;y.y=1*PI_HALF;z.z=2*PI_HALF;}else if(camObjectPos.x>0&&camObjectPos.y<0){x.x=3*PI_HALF;y.y=0*PI_HALF;z.z=3*PI_HALF;}}}{var ray=Potree.utils.mouseToRay(mouse,camera,domElement.clientWidth,domElement.clientHeight);var raycaster=new THREE.Raycaster(ray.origin,ray.direction);var intersects=raycaster.intersectObjects(this.pickVolumes.filter(function(v){return v.visible;}),true);if(intersects.length>0){var I=intersects[0];var handleName=I.object.handle;this.setActiveHandle(this.handles[handleName]);}else{this.setActiveHandle(null);}}//
        var _iteratorNormalCompletion86=true;var _didIteratorError86=false;var _iteratorError86=undefined;try{for(var _iterator86=Object.keys(this.scaleHandles)[Symbol.iterator](),_step86;!(_iteratorNormalCompletion86=(_step86=_iterator86.next()).done);_iteratorNormalCompletion86=true){var _handleName6=_step86.value;var _handle7=this.handles[_handleName6];var _node18=_handle7.node;var alignment=_handle7.alignment;}}catch(err){_didIteratorError86=true;_iteratorError86=err;}finally{try{if(!_iteratorNormalCompletion86&&_iterator86.return){_iterator86.return();}}finally{if(_didIteratorError86){throw _iteratorError86;}}}}{var axisScale=function axisScale(alignment){var transformed=new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(_toConsumableArray(alignment))))().applyMatrix4(selected.matrixWorld);var distance=transformed.distanceTo(selected.getWorldPosition());return distance;};var _scale5=new THREE.Vector3(axisScale([1,0,0]),axisScale([0,1,0]),axisScale([0,0,1]));}}else{this.scene.visible=false;}}}]);return TransformationTool;}();Potree.Volume=function(_THREE$Object3D5){_inherits(_class9,_THREE$Object3D5);function _class9(){var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};_classCallCheck(this,_class9);var _this48=_possibleConstructorReturn(this,(_class9.__proto__||Object.getPrototypeOf(_class9)).call(this));_this48.constructor.counter=_this48.constructor.counter===undefined?0:_this48.constructor.counter+1;_this48.name='volume_'+_this48.constructor.counter;_this48._clip=args.clip||false;_this48._visible=true;_this48.showVolumeLabel=true;_this48._modifiable=args.modifiable||true;var boxGeometry=new THREE.BoxGeometry(1,1,1);boxGeometry.computeBoundingBox();var boxFrameGeometry=new THREE.Geometry();{// bottom
    boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));// top
    boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));// sides
    boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));}_this48.dimension=new THREE.Vector3(1,1,1);_this48.material=new THREE.MeshBasicMaterial({color:0x00ff00,transparent:true,opacity:0.3,depthTest:true,depthWrite:false});_this48.box=new THREE.Mesh(boxGeometry,_this48.material);_this48.box.geometry.computeBoundingBox();_this48.boundingBox=_this48.box.geometry.boundingBox;_this48.add(_this48.box);_this48.frame=new THREE.LineSegments(boxFrameGeometry,new THREE.LineBasicMaterial({color:0x000000}));// this.frame.mode = THREE.Lines;
    _this48.add(_this48.frame);_this48.label=new Potree.TextSprite('0');_this48.label.setBorderColor({r:0,g:255,b:0,a:0.0});_this48.label.setBackgroundColor({r:0,g:255,b:0,a:0.0});_this48.label.material.depthTest=false;_this48.label.material.depthWrite=false;_this48.label.material.transparent=true;_this48.label.position.y-=0.5;_this48.add(_this48.label);_this48.label.updateMatrixWorld=function(){var volumeWorldPos=new THREE.Vector3();volumeWorldPos.setFromMatrixPosition(_this48.matrixWorld);_this48.label.position.copy(volumeWorldPos);_this48.label.updateMatrix();_this48.label.matrixWorld.copy(_this48.label.matrix);_this48.label.matrixWorldNeedsUpdate=false;for(var _i73=0,l=_this48.label.children.length;_i73<l;_i73++){_this48.label.children[_i73].updateMatrixWorld(true);}};{// event listeners
        _this48.addEventListener('select',function(e){});_this48.addEventListener('deselect',function(e){});}_this48.update();return _this48;}_createClass(_class9,[{key:'getVolume',value:function getVolume(){return Math.abs(this.scale.x*this.scale.y*this.scale.z);}},{key:'update',value:function update(){this.boundingBox=this.box.geometry.boundingBox;this.boundingSphere=this.boundingBox.getBoundingSphere();if(this._clip){this.box.visible=false;this.label.visible=false;}else{this.box.visible=true;this.label.visible=this.showVolumeLabel;}}},{key:'raycast',value:function raycast(raycaster,intersects){var is=[];this.box.raycast(raycaster,is);if(is.length>0){var I=is[0];intersects.push({distance:I.distance,object:this,point:I.point.clone()});}}},{key:'visible',get:function get(){return this._visible;},set:function set(value){if(this._visible!==value){this._visible=value;this.dispatchEvent({type:"visibility_changed",object:this});}}},{key:'clip',get:function get(){return this._clip;},set:function set(value){if(this._clip!==value){this._clip=value;this.update();this.dispatchEvent({type:"clip_changed",object:this});}}},{key:'modifieable',get:function get(){return this._modifiable;},set:function set(value){this._modifiable=value;this.update();}}]);return _class9;}(THREE.Object3D);Potree.VolumeTool=function(_THREE$EventDispatche10){_inherits(VolumeTool,_THREE$EventDispatche10);function VolumeTool(viewer){_classCallCheck(this,VolumeTool);var _this49=_possibleConstructorReturn(this,(VolumeTool.__proto__||Object.getPrototypeOf(VolumeTool)).call(this));_this49.viewer=viewer;_this49.renderer=viewer.renderer;_this49.addEventListener('start_inserting_volume',function(e){_this49.viewer.dispatchEvent({type:'cancel_insertions'});});_this49.scene=new THREE.Scene();_this49.scene.name='scene_volume';_this49.viewer.inputHandler.registerInteractiveScene(_this49.scene);_this49.onRemove=function(e){_this49.scene.remove(e.volume);};_this49.onAdd=function(e){_this49.scene.add(e.volume);};var _iteratorNormalCompletion87=true;var _didIteratorError87=false;var _iteratorError87=undefined;try{for(var _iterator87=viewer.scene.volumes[Symbol.iterator](),_step87;!(_iteratorNormalCompletion87=(_step87=_iterator87.next()).done);_iteratorNormalCompletion87=true){var volume=_step87.value;_this49.onAdd({volume:volume});}}catch(err){_didIteratorError87=true;_iteratorError87=err;}finally{try{if(!_iteratorNormalCompletion87&&_iterator87.return){_iterator87.return();}}finally{if(_didIteratorError87){throw _iteratorError87;}}}_this49.viewer.inputHandler.addEventListener('delete',function(e){var volumes=e.selection.filter(function(e){return e instanceof Potree.Volume;});volumes.forEach(function(e){return _this49.viewer.scene.removeVolume(e);});});viewer.addEventListener("update",_this49.update.bind(_this49));viewer.addEventListener("render.pass.scene",function(e){return _this49.render(e);});viewer.addEventListener("scene_changed",_this49.onSceneChange.bind(_this49));viewer.scene.addEventListener('volume_added',_this49.onAdd);viewer.scene.addEventListener('volume_removed',_this49.onRemove);return _this49;}_createClass(VolumeTool,[{key:'onSceneChange',value:function onSceneChange(e){if(e.oldScene){e.oldScene.removeEventListeners('volume_added',this.onAdd);e.oldScene.removeEventListeners('volume_removed',this.onRemove);}e.scene.addEventListener('volume_added',this.onAdd);e.scene.addEventListener('volume_removed',this.onRemove);}},{key:'startInsertion',value:function startInsertion(){var _this50=this;var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var volume=new Potree.Volume();volume.clip=args.clip||false;volume.name=args.name||'Volume';this.dispatchEvent({type:'start_inserting_volume',volume:volume});this.viewer.scene.addVolume(volume);this.scene.add(volume);var cancel={callback:null};var drag=function drag(e){var camera=_this50.viewer.scene.getActiveCamera();var I=Potree.utils.getMousePointCloudIntersection(e.drag.end,_this50.viewer.scene.getActiveCamera(),_this50.viewer,_this50.viewer.scene.pointclouds);if(I){volume.position.copy(I.location);var wp=volume.getWorldPosition().applyMatrix4(camera.matrixWorldInverse);// let pp = new THREE.Vector4(wp.x, wp.y, wp.z).applyMatrix4(camera.projectionMatrix);
        var w=Math.abs(wp.z/5);volume.scale.set(w,w,w);}};var drop=function drop(e){volume.removeEventListener('drag',drag);volume.removeEventListener('drop',drop);cancel.callback();};cancel.callback=function(e){volume.removeEventListener('drag',drag);volume.removeEventListener('drop',drop);_this50.viewer.removeEventListener('cancel_insertions',cancel.callback);};volume.addEventListener('drag',drag);volume.addEventListener('drop',drop);this.viewer.addEventListener('cancel_insertions',cancel.callback);this.viewer.inputHandler.startDragging(volume);return volume;}},{key:'update',value:function update(){if(!this.viewer.scene){return;}var camera=this.viewer.scene.getActiveCamera();var clientWidth=this.viewer.renderer.getSize().width;var clientHeight=this.viewer.renderer.getSize().height;var volumes=this.viewer.scene.volumes;var _iteratorNormalCompletion88=true;var _didIteratorError88=false;var _iteratorError88=undefined;try{for(var _iterator88=volumes[Symbol.iterator](),_step88;!(_iteratorNormalCompletion88=(_step88=_iterator88.next()).done);_iteratorNormalCompletion88=true){var volume=_step88.value;var label=volume.label;{var distance=label.position.distanceTo(camera.position);var pr=Potree.utils.projectedRadius(1,camera,distance,clientWidth,clientHeight);var scale=70/pr;label.scale.set(scale,scale,scale);}var text=Potree.utils.addCommas(volume.getVolume().toFixed(3))+'\xB3';label.setText(text);}}catch(err){_didIteratorError88=true;_iteratorError88=err;}finally{try{if(!_iteratorNormalCompletion88&&_iterator88.return){_iterator88.return();}}finally{if(_didIteratorError88){throw _iteratorError88;}}}}},{key:'render',value:function render(params){this.viewer.renderer.render(this.scene,this.viewer.scene.getActiveCamera(),params.renderTarget);}}]);return VolumeTool;}(THREE.EventDispatcher);Potree.ClippingTool=function(_THREE$EventDispatche11){_inherits(ClippingTool,_THREE$EventDispatche11);function ClippingTool(viewer){_classCallCheck(this,ClippingTool);var _this51=_possibleConstructorReturn(this,(ClippingTool.__proto__||Object.getPrototypeOf(ClippingTool)).call(this));_this51.viewer=viewer;_this51.maxPolygonVertices=8;_this51.addEventListener("start_inserting_clipping_volume",function(e){_this51.viewer.dispatchEvent({type:"cancel_insertions"});});_this51.sceneMarker=new THREE.Scene();_this51.sceneVolume=new THREE.Scene();_this51.sceneVolume.name="scene_clip_volume";_this51.viewer.inputHandler.registerInteractiveScene(_this51.sceneVolume);_this51.onRemove=function(e){_this51.sceneVolume.remove(e.volume);};_this51.onAdd=function(e){_this51.sceneVolume.add(e.volume);};_this51.viewer.inputHandler.addEventListener("delete",function(e){var volumes=e.selection.filter(function(e){return e instanceof Potree.ClipVolume;});volumes.forEach(function(e){return _this51.viewer.scene.removeClipVolume(e);});var polyVolumes=e.selection.filter(function(e){return e instanceof Potree.PolygonClipVolume;});polyVolumes.forEach(function(e){return _this51.viewer.scene.removePolygonClipVolume(e);});});return _this51;}_createClass(ClippingTool,[{key:'setScene',value:function setScene(scene){if(this.scene===scene){return;}if(this.scene){this.scene.removeEventListeners("clip_volume_added",this.onAdd);this.scene.removeEventListeners("clip_volume_removed",this.onRemove);this.scene.removeEventListeners("polygon_clip_volume_added",this.onAdd);this.scene.removeEventListeners("polygon_clip_volume_removed",this.onRemove);}this.scene=scene;this.scene.addEventListener("clip_volume_added",this.onAdd);this.scene.addEventListener("clip_volume_removed",this.onRemove);this.scene.addEventListener("polygon_clip_volume_added",this.onAdd);this.scene.addEventListener("polygon_clip_volume_removed",this.onRemove);}},{key:'startInsertion',value:function startInsertion(){var _this52=this;var args=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var type=args.type||null;if(!type)return null;var domElement=this.viewer.renderer.domElement;var canvasSize=this.viewer.renderer.getSize();var svg=$('\n\t\t<svg height="'+canvasSize.height+'" width="'+canvasSize.width+'" style="position:absolute; pointer-events: none">\n\n\t\t\t<defs>\n\t\t\t\t <marker id="diamond" markerWidth="24" markerHeight="24" refX="12" refY="12"\n\t\t\t\t\t\tmarkerUnits="userSpaceOnUse">\n\t\t\t\t\t<circle cx="12" cy="12" r="6" fill="white" stroke="black" stroke-width="3"/>\n\t\t\t\t</marker>\n\t\t\t</defs>\n\n\t\t\t<polyline fill="none" stroke="black" \n\t\t\t\tstyle="stroke:rgb(0, 0, 0);\n\t\t\t\tstroke-width:6;"\n\t\t\t\tstroke-dasharray="9, 6"\n\t\t\t\tstroke-dashoffset="2"\n\t\t\t\t/>\n\n\t\t\t<polyline fill="none" stroke="black" \n\t\t\t\tstyle="stroke:rgb(255, 255, 255);\n\t\t\t\tstroke-width:2;"\n\t\t\t\tstroke-dasharray="5, 10"\n\t\t\t\tmarker-start="url(#diamond)" \n\t\t\t\tmarker-mid="url(#diamond)" \n\t\t\t\tmarker-end="url(#diamond)" \n\t\t\t\t/>\n\t\t</svg>');$(domElement.parentElement).append(svg);var polyClipVol=new Potree.PolygonClipVolume(this.viewer.scene.getActiveCamera().clone());this.dispatchEvent({"type":"start_inserting_clipping_volume"});this.viewer.scene.addPolygonClipVolume(polyClipVol);this.sceneMarker.add(polyClipVol);var cancel={callback:null};var insertionCallback=function insertionCallback(e){if(e.button===THREE.MOUSE.LEFT){polyClipVol.addMarker();// SVC Screen Line
        svg.find("polyline").each(function(index,target){var newPoint=svg[0].createSVGPoint();newPoint.x=e.offsetX;newPoint.y=e.offsetY;var polyline=target.points.appendItem(newPoint);});if(polyClipVol.markers.length>_this52.maxPolygonVertices){cancel.callback();}_this52.viewer.inputHandler.startDragging(polyClipVol.markers[polyClipVol.markers.length-1]);}else if(e.button===THREE.MOUSE.RIGHT){cancel.callback(e);}};cancel.callback=function(e){//let first = svg.find("polyline")[0].points[0];
//svg.find("polyline").each((index, target) => {
//	let newPoint = svg[0].createSVGPoint();
//	newPoint.x = first.x;
//	newPoint.y = first.y;
//	let polyline = target.points.appendItem(newPoint);
//});
        svg.remove();if(polyClipVol.markers.length>3){polyClipVol.removeLastMarker();polyClipVol.initialized=true;}else{_this52.viewer.scene.removePolygonClipVolume(polyClipVol);}_this52.viewer.renderer.domElement.removeEventListener("mouseup",insertionCallback,true);_this52.viewer.removeEventListener("cancel_insertions",cancel.callback);_this52.viewer.inputHandler.enabled=true;};this.viewer.addEventListener("cancel_insertions",cancel.callback);this.viewer.renderer.domElement.addEventListener("mouseup",insertionCallback,true);this.viewer.inputHandler.enabled=false;polyClipVol.addMarker();this.viewer.inputHandler.startDragging(polyClipVol.markers[polyClipVol.markers.length-1]);return polyClipVol;}},{key:'update',value:function update(){}}]);return ClippingTool;}(THREE.EventDispatcher);Potree.ScreenBoxSelectTool=function(_THREE$EventDispatche12){_inherits(ScreenBoxSelectTool,_THREE$EventDispatche12);function ScreenBoxSelectTool(viewer){_classCallCheck(this,ScreenBoxSelectTool);var _this53=_possibleConstructorReturn(this,(ScreenBoxSelectTool.__proto__||Object.getPrototypeOf(ScreenBoxSelectTool)).call(this));_this53.viewer=viewer;_this53.scene=new THREE.Scene();viewer.addEventListener("update",_this53.update.bind(_this53));viewer.addEventListener("render.pass.perspective_overlay",_this53.render.bind(_this53));viewer.addEventListener("scene_changed",_this53.onSceneChange.bind(_this53));return _this53;}_createClass(ScreenBoxSelectTool,[{key:'onSceneChange',value:function onSceneChange(scene){console.log("scene changed");}},{key:'startInsertion',value:function startInsertion(){var _this54=this;var domElement=this.viewer.renderer.domElement;var volume=new Potree.Volume();volume.position.set(12345,12345,12345);volume.showVolumeLabel=false;volume.visible=false;volume.update();this.viewer.scene.addVolume(volume);this.importance=10;var selectionBox=$('<div style="position: absolute; border: 2px solid white; pointer-events: none; border-style:dashed"></div>');$(domElement.parentElement).append(selectionBox);selectionBox.css("right","10px");selectionBox.css("bottom","10px");var drag=function drag(e){volume.visible=true;var mStart=e.drag.start;var mEnd=e.drag.end;var box2D=new THREE.Box2();box2D.expandByPoint(mStart);box2D.expandByPoint(mEnd);selectionBox.css("left",box2D.min.x+'px');selectionBox.css("top",box2D.min.y+'px');selectionBox.css("width",box2D.max.x-box2D.min.x+'px');selectionBox.css("height",box2D.max.y-box2D.min.y+'px');var camera=e.viewer.scene.getActiveCamera();var size=new THREE.Vector2(e.viewer.renderer.getSize().width,e.viewer.renderer.getSize().height);var frustumSize=new THREE.Vector2(camera.right-camera.left,camera.top-camera.bottom);var screenCentroid=new THREE.Vector2().addVectors(e.drag.end,e.drag.start).multiplyScalar(0.5);var ray=Potree.utils.mouseToRay(screenCentroid,camera,size.width,size.height);var diff=new THREE.Vector2().subVectors(e.drag.end,e.drag.start);diff.divide(size).multiply(frustumSize);volume.position.copy(ray.origin);volume.up.copy(camera.up);volume.rotation.copy(camera.rotation);volume.scale.set(diff.x,diff.y,1000*100);e.consume();};var drop=function drop(e){_this54.importance=0;$(selectionBox).remove();_this54.viewer.inputHandler.deselectAll();_this54.viewer.inputHandler.toggleSelection(volume);var camera=e.viewer.scene.getActiveCamera();var size=new THREE.Vector2(e.viewer.renderer.getSize().width,e.viewer.renderer.getSize().height);var screenCentroid=new THREE.Vector2().addVectors(e.drag.end,e.drag.start).multiplyScalar(0.5);var ray=Potree.utils.mouseToRay(screenCentroid,camera,size.width,size.height);var line=new THREE.Line3(ray.origin,new THREE.Vector3().addVectors(ray.origin,ray.direction));_this54.removeEventListener("drag",drag);_this54.removeEventListener("drop",drop);var allPointsNear=[];var allPointsFar=[];// TODO support more than one point cloud
        var _iteratorNormalCompletion89=true;var _didIteratorError89=false;var _iteratorError89=undefined;try{for(var _iterator89=_this54.viewer.scene.pointclouds[Symbol.iterator](),_step89;!(_iteratorNormalCompletion89=(_step89=_iterator89.next()).done);_iteratorNormalCompletion89=true){var pointcloud=_step89.value;if(!pointcloud.visible){continue;}var volCam=camera.clone();volCam.left=-volume.scale.x/2;volCam.right=+volume.scale.x/2;volCam.top=+volume.scale.y/2;volCam.bottom=-volume.scale.y/2;volCam.near=-volume.scale.z/2;volCam.far=+volume.scale.z/2;volCam.rotation.copy(volume.rotation);volCam.position.copy(volume.position);volCam.updateMatrix();volCam.updateMatrixWorld();volCam.updateProjectionMatrix();volCam.matrixWorldInverse.getInverse(volCam.matrixWorld);var _ray3=new THREE.Ray(volCam.getWorldPosition(),volCam.getWorldDirection());var rayInverse=new THREE.Ray(_ray3.origin.clone().add(_ray3.direction.clone().multiplyScalar(volume.scale.z)),_ray3.direction.clone().multiplyScalar(-1));var pickerSettings={width:8,height:8,pickWindowSize:8,all:true,pickClipped:true,pointSizeType:Potree.PointSizeType.FIXED,pointSize:1};var pointsNear=pointcloud.pick(viewer,volCam,_ray3,pickerSettings);volCam.rotateX(Math.PI);volCam.updateMatrix();volCam.updateMatrixWorld();volCam.updateProjectionMatrix();volCam.matrixWorldInverse.getInverse(volCam.matrixWorld);var pointsFar=pointcloud.pick(viewer,volCam,rayInverse,pickerSettings);allPointsNear.push.apply(allPointsNear,_toConsumableArray(pointsNear));allPointsFar.push.apply(allPointsFar,_toConsumableArray(pointsFar));}}catch(err){_didIteratorError89=true;_iteratorError89=err;}finally{try{if(!_iteratorNormalCompletion89&&_iterator89.return){_iterator89.return();}}finally{if(_didIteratorError89){throw _iteratorError89;}}}if(allPointsNear.length>0&&allPointsFar.length>0){var viewLine=new THREE.Line3(ray.origin,new THREE.Vector3().addVectors(ray.origin,ray.direction));var closestOnLine=allPointsNear.map(function(p){return viewLine.closestPointToPoint(p.position,false);});var closest=closestOnLine.sort(function(a,b){return ray.origin.distanceTo(a)-ray.origin.distanceTo(b);})[0];var farthestOnLine=allPointsFar.map(function(p){return viewLine.closestPointToPoint(p.position,false);});var farthest=farthestOnLine.sort(function(a,b){return ray.origin.distanceTo(b)-ray.origin.distanceTo(a);})[0];var distance=closest.distanceTo(farthest);var centroid=new THREE.Vector3().addVectors(closest,farthest).multiplyScalar(0.5);volume.scale.z=distance*1.1;volume.position.copy(centroid);}volume.clip=true;};this.addEventListener("drag",drag);this.addEventListener("drop",drop);viewer.inputHandler.addInputListener(this);return volume;}},{key:'update',value:function update(e){//console.log(e.delta)
    }},{key:'render',value:function render(){this.viewer.renderer.render(this.scene,this.viewer.scene.getActiveCamera());}}]);return ScreenBoxSelectTool;}(THREE.EventDispatcher);Potree.ClipVolume=function(_THREE$Object3D6){_inherits(_class10,_THREE$Object3D6);function _class10(args){_classCallCheck(this,_class10);var _this55=_possibleConstructorReturn(this,(_class10.__proto__||Object.getPrototypeOf(_class10)).call(this));_this55.constructor.counter=_this55.constructor.counter===undefined?0:_this55.constructor.counter+1;_this55.name="clip_volume_"+_this55.constructor.counter;var alpha=args.alpha||0;var beta=args.beta||0;var gamma=args.gamma||0;_this55.rotation.x=alpha;_this55.rotation.y=beta;_this55.rotation.z=gamma;_this55.clipOffset=0.001;_this55.clipRotOffset=1;var boxGeometry=new THREE.BoxGeometry(1,1,1);boxGeometry.computeBoundingBox();var boxFrameGeometry=new THREE.Geometry();{// bottom
    boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));// top
    boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));// sides
    boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,-0.5));boxFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,-0.5));boxFrameGeometry.colors.push(new THREE.Vector3(1,1,1));}var planeFrameGeometry=new THREE.Geometry();{// middle line
    planeFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.0));planeFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.0));planeFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.0));planeFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.0));planeFrameGeometry.vertices.push(new THREE.Vector3(-0.5,0.5,0.0));planeFrameGeometry.vertices.push(new THREE.Vector3(0.5,0.5,0.0));planeFrameGeometry.vertices.push(new THREE.Vector3(-0.5,-0.5,0.0));planeFrameGeometry.vertices.push(new THREE.Vector3(0.5,-0.5,0.0));}_this55.dimension=new THREE.Vector3(1,1,1);_this55.material=new THREE.MeshBasicMaterial({color:0x00ff00,transparent:true,opacity:0.3,depthTest:true,depthWrite:false});_this55.box=new THREE.Mesh(boxGeometry,_this55.material);_this55.box.geometry.computeBoundingBox();_this55.boundingBox=_this55.box.geometry.boundingBox;_this55.add(_this55.box);_this55.frame=new THREE.LineSegments(boxFrameGeometry,new THREE.LineBasicMaterial({color:0x000000}));_this55.add(_this55.frame);_this55.planeFrame=new THREE.LineSegments(planeFrameGeometry,new THREE.LineBasicMaterial({color:0xff0000}));_this55.add(_this55.planeFrame);// set default thickness
    _this55.setScaleZ(0.1);// create local coordinate system
    var createArrow=function createArrow(name,direction,color){var material=new THREE.MeshBasicMaterial({color:color,depthTest:false,depthWrite:false});var shaftGeometry=new THREE.Geometry();shaftGeometry.vertices.push(new THREE.Vector3(0,0,0));shaftGeometry.vertices.push(new THREE.Vector3(0,1,0));var shaftMaterial=new THREE.LineBasicMaterial({color:color,depthTest:false,depthWrite:false,transparent:true});var shaft=new THREE.Line(shaftGeometry,shaftMaterial);shaft.name=name+"_shaft";var headGeometry=new THREE.CylinderGeometry(0,0.04,0.1,10,1,false);var headMaterial=material;var head=new THREE.Mesh(headGeometry,headMaterial);head.name=name+"_head";head.position.y=1;var arrow=new THREE.Object3D();arrow.name=name;arrow.add(shaft);arrow.add(head);return arrow;};_this55.arrowX=createArrow("arrow_x",new THREE.Vector3(1,0,0),0xFF0000);_this55.arrowY=createArrow("arrow_y",new THREE.Vector3(0,1,0),0x00FF00);_this55.arrowZ=createArrow("arrow_z",new THREE.Vector3(0,0,1),0x0000FF);_this55.arrowX.rotation.z=-Math.PI/2;_this55.arrowZ.rotation.x=Math.PI/2;_this55.arrowX.visible=false;_this55.arrowY.visible=false;_this55.arrowZ.visible=false;_this55.add(_this55.arrowX);_this55.add(_this55.arrowY);_this55.add(_this55.arrowZ);{// event listeners
        _this55.addEventListener("ui_select",function(e){_this55.arrowX.visible=true;_this55.arrowY.visible=true;_this55.arrowZ.visible=true;});_this55.addEventListener("ui_deselect",function(e){_this55.arrowX.visible=false;_this55.arrowY.visible=false;_this55.arrowZ.visible=false;});_this55.addEventListener("select",function(e){var scene_header=$("#"+_this55.name+" .scene_header");if(!scene_header.next().is(":visible")){scene_header.click();}});_this55.addEventListener("deselect",function(e){var scene_header=$("#"+_this55.name+" .scene_header");if(scene_header.next().is(":visible")){scene_header.click();}});}_this55.update();return _this55;}_createClass(_class10,[{key:'setClipOffset',value:function setClipOffset(offset){this.clipOffset=offset;}},{key:'setClipRotOffset',value:function setClipRotOffset(offset){this.clipRotOffset=offset;}},{key:'setScaleX',value:function setScaleX(x){this.box.scale.x=x;this.frame.scale.x=x;this.planeFrame.scale.x=x;}},{key:'setScaleY',value:function setScaleY(y){this.box.scale.y=y;this.frame.scale.y=y;this.planeFrame.scale.y=y;}},{key:'setScaleZ',value:function setScaleZ(z){this.box.scale.z=z;this.frame.scale.z=z;this.planeFrame.scale.z=z;}},{key:'offset',value:function offset(args){var cs=args.cs||null;var axis=args.axis||null;var dir=args.dir||null;if(!cs||!axis||!dir)return;if(axis==="x"){if(cs==="local"){this.position.add(this.localX.clone().multiplyScalar(dir*this.clipOffset));}else if(cs==="global"){this.position.x=this.position.x+dir*this.clipOffset;}}else if(axis==="y"){if(cs==="local"){this.position.add(this.localY.clone().multiplyScalar(dir*this.clipOffset));}else if(cs==="global"){this.position.y=this.position.y+dir*this.clipOffset;}}else if(axis==="z"){if(cs==="local"){this.position.add(this.localZ.clone().multiplyScalar(dir*this.clipOffset));}else if(cs==="global"){this.position.z=this.position.z+dir*this.clipOffset;}}this.dispatchEvent({"type":"clip_volume_changed","viewer":viewer,"volume":this});}},{key:'rotate',value:function rotate(args){var cs=args.cs||null;var axis=args.axis||null;var dir=args.dir||null;if(!cs||!axis||!dir)return;if(cs==="local"){if(axis==="x"){this.rotateOnAxis(new THREE.Vector3(1,0,0),dir*this.clipRotOffset*Math.PI/180);}else if(axis==="y"){this.rotateOnAxis(new THREE.Vector3(0,1,0),dir*this.clipRotOffset*Math.PI/180);}else if(axis==="z"){this.rotateOnAxis(new THREE.Vector3(0,0,1),dir*this.clipRotOffset*Math.PI/180);}}else if(cs==="global"){var rotaxis=new THREE.Vector4(1,0,0,0);if(axis==="y"){rotaxis=new THREE.Vector4(0,1,0,0);}else if(axis==="z"){rotaxis=new THREE.Vector4(0,0,1,0);}this.updateMatrixWorld();var invM=new THREE.Matrix4().getInverse(this.matrixWorld);rotaxis=rotaxis.applyMatrix4(invM).normalize();rotaxis=new THREE.Vector3(rotaxis.x,rotaxis.y,rotaxis.z);this.rotateOnAxis(rotaxis,dir*this.clipRotOffset*Math.PI/180);}this.updateLocalSystem();this.dispatchEvent({"type":"clip_volume_changed","viewer":viewer,"volume":this});}},{key:'update',value:function update(){this.boundingBox=this.box.geometry.boundingBox;this.boundingSphere=this.boundingBox.getBoundingSphere();this.box.visible=false;this.updateLocalSystem();}},{key:'updateLocalSystem',value:function updateLocalSystem(){// extract local coordinate axes
        var rotQuat=this.getWorldQuaternion();this.localX=new THREE.Vector3(1,0,0).applyQuaternion(rotQuat).normalize();this.localY=new THREE.Vector3(0,1,0).applyQuaternion(rotQuat).normalize();this.localZ=new THREE.Vector3(0,0,1).applyQuaternion(rotQuat).normalize();}},{key:'raycast',value:function raycast(raycaster,intersects){var is=[];this.box.raycast(raycaster,is);if(is.length>0){var I=is[0];intersects.push({distance:I.distance,object:this,point:I.point.clone()});}}}]);return _class10;}(THREE.Object3D);Potree.PolygonClipVolume=function(_THREE$Object3D7){_inherits(_class11,_THREE$Object3D7);function _class11(camera){var _this56$camera$rotati;_classCallCheck(this,_class11);var _this56=_possibleConstructorReturn(this,(_class11.__proto__||Object.getPrototypeOf(_class11)).call(this));_this56.constructor.counter=_this56.constructor.counter===undefined?0:_this56.constructor.counter+1;_this56.name="polygon_clip_volume_"+_this56.constructor.counter;_this56.camera=camera.clone();(_this56$camera$rotati=_this56.camera.rotation).set.apply(_this56$camera$rotati,_toConsumableArray(camera.rotation.toArray()));// [r85] workaround because camera.clone() doesn't work on rotation
    _this56.camera.updateMatrixWorld();_this56.camera.updateProjectionMatrix();_this56.camera.matrixWorldInverse.getInverse(_this56.camera.matrixWorld);_this56.viewMatrix=_this56.camera.matrixWorldInverse.clone();_this56.projMatrix=_this56.camera.projectionMatrix.clone();// projected markers
    _this56.markers=[];_this56.initialized=false;return _this56;}_createClass(_class11,[{key:'addMarker',value:function addMarker(){var marker=new THREE.Mesh();var cancel=void 0;var drag=function drag(e){var size=e.viewer.renderer.getSize();var projectedPos=new THREE.Vector3(2.0*(e.drag.end.x/size.width)-1.0,-2.0*(e.drag.end.y/size.height)+1.0,0);marker.position.copy(projectedPos);};var drop=function drop(e){cancel();};cancel=function cancel(e){marker.removeEventListener("drag",drag);marker.removeEventListener("drop",drop);};marker.addEventListener("drag",drag);marker.addEventListener("drop",drop);this.markers.push(marker);}},{key:'removeLastMarker',value:function removeLastMarker(){if(this.markers.length>0){this.markers.splice(this.markers.length-1,1);}}}]);return _class11;}(THREE.Object3D);/**
 *
 * code adapted from three.js BoxHelper.js
 * https://github.com/mrdoob/three.js/blob/dev/src/helpers/BoxHelper.js
 *
 * @author mrdoob / http://mrdoob.com/
 * @author Mugen87 / http://github.com/Mugen87
 * @author mschuetz / http://potree.org
 */Potree.Box3Helper=function(_THREE$LineSegments){_inherits(Box3Helper,_THREE$LineSegments);function Box3Helper(box,color){_classCallCheck(this,Box3Helper);if(color===undefined)color=0xffff00;var indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var positions=new Float32Array([box.min.x,box.min.y,box.min.z,box.max.x,box.min.y,box.min.z,box.max.x,box.min.y,box.max.z,box.min.x,box.min.y,box.max.z,box.min.x,box.max.y,box.min.z,box.max.x,box.max.y,box.min.z,box.max.x,box.max.y,box.max.z,box.min.x,box.max.y,box.max.z]);var geometry=new THREE.BufferGeometry();geometry.setIndex(new THREE.BufferAttribute(indices,1));geometry.addAttribute('position',new THREE.BufferAttribute(positions,3));var material=new THREE.LineBasicMaterial({color:color});return _possibleConstructorReturn(this,(Box3Helper.__proto__||Object.getPrototypeOf(Box3Helper)).call(this,geometry,material));}return Box3Helper;}(THREE.LineSegments);Potree.PointCloudSM=function(){function PointCloudSM(potreeRenderer){_classCallCheck(this,PointCloudSM);this.potreeRenderer=potreeRenderer;this.threeRenderer=this.potreeRenderer.threeRenderer;this.target=new THREE.WebGLRenderTarget(2*1024,2*1024,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,type:THREE.FloatType});this.target.depthTexture=new THREE.DepthTexture();this.target.depthTexture.type=THREE.UnsignedIntType;//this.target = new THREE.WebGLRenderTarget(1024, 1024, {
//	minFilter: THREE.NearestFilter,
//	magFilter: THREE.NearestFilter,
//	format: THREE.RGBAFormat,
//	type: THREE.FloatType,
//	depthTexture: new THREE.DepthTexture(undefined, undefined, THREE.UnsignedIntType)
//});
    this.threeRenderer.setClearColor(0x000000,1);this.threeRenderer.clearTarget(this.target,true,true,true);}_createClass(PointCloudSM,[{key:'setLight',value:function setLight(light){this.light=light;var fov=180*light.angle/Math.PI;var aspect=light.shadow.mapSize.width/light.shadow.mapSize.height;var near=0.1;var far=light.distance===0?10000:light.distance;this.camera=new THREE.PerspectiveCamera(fov,aspect,near,far);this.camera.up.set(0,0,1);this.camera.position.copy(light.position);var target=new THREE.Vector3().addVectors(light.position,light.getWorldDirection());this.camera.lookAt(target);this.camera.updateProjectionMatrix();this.camera.updateMatrix();this.camera.updateMatrixWorld();this.camera.matrixWorldInverse.getInverse(this.camera.matrixWorld);}},{key:'setSize',value:function setSize(width,height){if(this.target.width!==width||this.target.height!==height){this.target.dispose();}this.target.setSize(width,height);}},{key:'render',value:function render(scene,camera){//this.threeRenderer.setClearColor(0x00ff00, 1);
        this.threeRenderer.clearTarget(this.target,true,true,true);this.potreeRenderer.render(scene,this.camera,this.target,{});}}]);return PointCloudSM;}();Potree.Message=function(){function Message(content){_classCallCheck(this,Message);this.content=content;var closeIcon=Potree.resourcePath+'/icons/close.svg';this.element=$('\n\t\t\t<div class="potree_message">\n\t\t\t\t<span name="content_container" style="flex-grow: 1; padding: 5px"></span>\n\t\t\t\t<img name="close" src="'+closeIcon+'" class="button-icon" style="width: 16px; height: 16px;">\n\t\t\t</div>');this.elClose=this.element.find("img[name=close]");this.elContainer=this.element.find("span[name=content_container]");if(typeof content==="string"){this.elContainer.append($('<span>'+content+'</span>'));}else{this.elContainer.append(content);}}_createClass(Message,[{key:'setMessage',value:function setMessage(content){this.elContainer.empty();if(typeof content==="string"){this.elContainer.append($('<span>'+content+'</span>'));}else{this.elContainer.append(content);}}}]);return Message;}();Potree.SpotLightHelper=function(_THREE$Object3D8){_inherits(SpotLightHelper,_THREE$Object3D8);function SpotLightHelper(light,color){_classCallCheck(this,SpotLightHelper);var _this58=_possibleConstructorReturn(this,(SpotLightHelper.__proto__||Object.getPrototypeOf(SpotLightHelper)).call(this));_this58.light=light;_this58.color=color;//this.up.set(0, 0, 1);
    _this58.updateMatrix();_this58.updateMatrixWorld();{// SPHERE
        var sg=new THREE.SphereGeometry(1,32,32);var sm=new THREE.MeshNormalMaterial();_this58.sphere=new THREE.Mesh(sg,sm);_this58.sphere.scale.set(0.5,0.5,0.5);_this58.add(_this58.sphere);}{// LINES
        var positions=new Float32Array([+0,+0,+0,+0,+0,+1,+0,+0,+0,-1,-1,+1,+0,+0,+0,+1,-1,+1,+0,+0,+0,+1,+1,+1,+0,+0,+0,-1,+1,+1,-1,-1,+1,+1,-1,+1,+1,-1,+1,+1,+1,+1,+1,+1,+1,-1,+1,+1,-1,+1,+1,-1,-1,+1]);var _geometry3=new THREE.BufferGeometry();_geometry3.addAttribute("position",new THREE.BufferAttribute(positions,3));var _material=new THREE.LineBasicMaterial();_this58.frustum=new THREE.LineSegments(_geometry3,_material);_this58.add(_this58.frustum);}_this58.update();return _this58;}_createClass(SpotLightHelper,[{key:'update',value:function update(){this.light.updateMatrix();this.light.updateMatrixWorld();var position=this.light.position;//let target = new THREE.Vector3().addVectors(
//	light.position,
//	new THREE.Vector3().subVectors(light.position, this.light.getWorldDirection()));
        var target=new THREE.Vector3().addVectors(light.position,this.light.getWorldDirection().multiplyScalar(-1));var quat=new THREE.Quaternion().setFromRotationMatrix(new THREE.Matrix4().lookAt(position,target,new THREE.Vector3(0,0,1)));this.setRotationFromQuaternion(quat);this.position.copy(position);var coneLength=this.light.distance>0?this.light.distance:1000;var coneWidth=coneLength*Math.tan(this.light.angle*0.5);this.frustum.scale.set(coneWidth,coneWidth,coneLength);//{
//	let fov = (180 * light.angle) / Math.PI;
//	let aspect = light.shadow.mapSize.width / light.shadow.mapSize.height;
//	let near = 0.1;
//	let far = light.distance === 0 ? 10000 : light.distance;
//	this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
//	this.camera.up.set(0, 0, 1);
//	this.camera.position.copy(light.position);
//	let target = new THREE.Vector3().addVectors(light.position, light.getWorldDirection());
//	this.camera.lookAt(target);
//	this.camera.updateProjectionMatrix();
//	this.camera.updateMatrix();
//	this.camera.updateMatrixWorld();
//	this.camera.matrixWorldInverse.getInverse(this.camera.matrixWorld);
//}
    }}]);return SpotLightHelper;}(THREE.Object3D);/**
 *
 * @author sigeom sa / http://sigeom.ch
 * @author Ioda-Net Sàrl / https://www.ioda-net.ch/
 * @author Markus Schütz / http://potree.org
 *
 */Potree.GeoJSONExporter=function(){function GeoJSONExporter(){_classCallCheck(this,GeoJSONExporter);}_createClass(GeoJSONExporter,null,[{key:'measurementToFeatures',value:function measurementToFeatures(measurement){var coords=measurement.points.map(function(e){return e.position.toArray();});var features=[];if(coords.length===1){var feature={type:'Feature',geometry:{type:'Point',coordinates:coords[0]},properties:{name:measurement.name}};features.push(feature);}else if(coords.length>1&&!measurement.closed){var object={'type':'Feature','geometry':{'type':'LineString','coordinates':coords},'properties':{name:measurement.name}};features.push(object);}else if(coords.length>1&&measurement.closed){var _object2={'type':'Feature','geometry':{'type':'Polygon','coordinates':[[].concat(_toConsumableArray(coords),[coords[0]])]},'properties':{name:measurement.name}};features.push(_object2);}if(measurement.showDistances){measurement.edgeLabels.forEach(function(label){var labelPoint={type:'Feature',geometry:{type:'Point',coordinates:label.position.toArray()},properties:{distance:label.text}};features.push(labelPoint);});}if(measurement.showArea){var point=measurement.areaLabel.position;var labelArea={type:'Feature',geometry:{type:'Point',coordinates:point.toArray()},properties:{area:measurement.areaLabel.text}};features.push(labelArea);}return features;}},{key:'toString',value:function toString(measurements){if(!(measurements instanceof Array)){measurements=[measurements];}measurements=measurements.filter(function(m){return m instanceof Potree.Measure;});var features=[];var _iteratorNormalCompletion90=true;var _didIteratorError90=false;var _iteratorError90=undefined;try{for(var _iterator90=measurements[Symbol.iterator](),_step90;!(_iteratorNormalCompletion90=(_step90=_iterator90.next()).done);_iteratorNormalCompletion90=true){var measure=_step90.value;var f=Potree.GeoJSONExporter.measurementToFeatures(measure);features=features.concat(f);}}catch(err){_didIteratorError90=true;_iteratorError90=err;}finally{try{if(!_iteratorNormalCompletion90&&_iterator90.return){_iterator90.return();}}finally{if(_didIteratorError90){throw _iteratorError90;}}}var geojson={'type':'FeatureCollection','features':features};return JSON.stringify(geojson,null,'\t');}}]);return GeoJSONExporter;}();/**
 *
 * @author sigeom sa / http://sigeom.ch
 * @author Ioda-Net Sàrl / https://www.ioda-net.ch/
 * @author Markus Schuetz / http://potree.org
 *
 */Potree.DXFExporter=function(){function DXFExporter(){_classCallCheck(this,DXFExporter);}_createClass(DXFExporter,null,[{key:'measurementPointSection',value:function measurementPointSection(measurement){var position=measurement.points[0].position;if(!position){return'';}var dxfSection='0\nCIRCLE\n8\nlayer_point\n10\n'+position.x+'\n20\n'+position.y+'\n30\n'+position.z+'\n40\n1.0\n';return dxfSection;}},{key:'measurementPolylineSection',value:function measurementPolylineSection(measurement){// bit code for polygons/polylines:
// https://www.autodesk.com/techpubs/autocad/acad2000/dxf/polyline_dxf_06.htm
        var geomCode=8;if(measurement.closed){geomCode+=1;}var dxfSection='0\nPOLYLINE\n8\nlayer_polyline\n62\n1\n66\n1\n10\n0.0\n20\n0.0\n30\n0.0\n70\n'+geomCode+'\n';var xMax=0.0;var yMax=0.0;var zMax=0.0;var _iteratorNormalCompletion91=true;var _didIteratorError91=false;var _iteratorError91=undefined;try{for(var _iterator91=measurement.points[Symbol.iterator](),_step91;!(_iteratorNormalCompletion91=(_step91=_iterator91.next()).done);_iteratorNormalCompletion91=true){var point=_step91.value;point=point.position;xMax=Math.max(xMax,point.x);yMax=Math.max(yMax,point.y);zMax=Math.max(zMax,point.z);dxfSection+='0\nVERTEX\n8\n0\n10\n'+point.x+'\n20\n'+point.y+'\n30\n'+point.z+'\n70\n32\n';}}catch(err){_didIteratorError91=true;_iteratorError91=err;}finally{try{if(!_iteratorNormalCompletion91&&_iterator91.return){_iterator91.return();}}finally{if(_didIteratorError91){throw _iteratorError91;}}}dxfSection+='0\nSEQEND\n';return dxfSection;}},{key:'measurementSection',value:function measurementSection(measurement){// if(measurement.points.length <= 1){
//	return "";
// }
        if(measurement.points.length===0){return'';}else if(measurement.points.length===1){return Potree.DXFExporter.measurementPointSection(measurement);}else if(measurement.points.length>=2){return Potree.DXFExporter.measurementPolylineSection(measurement);}}},{key:'toString',value:function toString(measurements){if(!(measurements instanceof Array)){measurements=[measurements];}measurements=measurements.filter(function(m){return m instanceof Potree.Measure;});var points=measurements.filter(function(m){return m instanceof Potree.Measure;}).map(function(m){return m.points;}).reduce(function(a,v){return a.concat(v);}).map(function(p){return p.position;});var min=new THREE.Vector3(Infinity,Infinity,Infinity);var max=new THREE.Vector3(-Infinity,-Infinity,-Infinity);var _iteratorNormalCompletion92=true;var _didIteratorError92=false;var _iteratorError92=undefined;try{for(var _iterator92=points[Symbol.iterator](),_step92;!(_iteratorNormalCompletion92=(_step92=_iterator92.next()).done);_iteratorNormalCompletion92=true){var point=_step92.value;min.min(point);max.max(point);}}catch(err){_didIteratorError92=true;_iteratorError92=err;}finally{try{if(!_iteratorNormalCompletion92&&_iterator92.return){_iterator92.return();}}finally{if(_didIteratorError92){throw _iteratorError92;}}}var dxfHeader='999\nDXF created from potree\n0\nSECTION\n2\nHEADER\n9\n$ACADVER\n1\nAC1006\n9\n$INSBASE\n10\n0.0\n20\n0.0\n30\n0.0\n9\n$EXTMIN\n10\n'+min.x+'\n20\n'+min.y+'\n30\n'+min.z+'\n9\n$EXTMAX\n10\n'+max.x+'\n20\n'+max.y+'\n30\n'+max.z+'\n0\nENDSEC\n';var dxfBody='0\nSECTION\n2\nENTITIES\n';var _iteratorNormalCompletion93=true;var _didIteratorError93=false;var _iteratorError93=undefined;try{for(var _iterator93=measurements[Symbol.iterator](),_step93;!(_iteratorNormalCompletion93=(_step93=_iterator93.next()).done);_iteratorNormalCompletion93=true){var measurement=_step93.value;dxfBody+=Potree.DXFExporter.measurementSection(measurement);}}catch(err){_didIteratorError93=true;_iteratorError93=err;}finally{try{if(!_iteratorNormalCompletion93&&_iterator93.return){_iterator93.return();}}finally{if(_didIteratorError93){throw _iteratorError93;}}}dxfBody+='0\nENDSEC\n';var dxf=dxfHeader+dxfBody+'0\nEOF';return dxf;}}]);return DXFExporter;}();Potree.CSVExporter=function(){function CSVExporter(){_classCallCheck(this,CSVExporter);}_createClass(CSVExporter,null,[{key:'toString',value:function toString(points){var string='';var attributes=Object.keys(points.data).filter(function(a){return a!=='normal';}).sort(function(a,b){if(a==='position')return-1;if(b==='position')return 1;if(a==='color')return-1;if(b==='color')return 1;});var headerValues=[];var _iteratorNormalCompletion94=true;var _didIteratorError94=false;var _iteratorError94=undefined;try{for(var _iterator94=attributes[Symbol.iterator](),_step94;!(_iteratorNormalCompletion94=(_step94=_iterator94.next()).done);_iteratorNormalCompletion94=true){var _attribute=_step94.value;var _itemSize=points.data[_attribute].length/points.numPoints;if(_attribute==='position'){headerValues=headerValues.concat(['x','y','z']);}else if(_attribute==='color'){headerValues=headerValues.concat(['r','g','b','a']);}else if(_itemSize>1){for(var _i75=0;_i75<_itemSize;_i75++){headerValues.push(_attribute+'_'+_i75);}}else{headerValues.push(_attribute);}}}catch(err){_didIteratorError94=true;_iteratorError94=err;}finally{try{if(!_iteratorNormalCompletion94&&_iterator94.return){_iterator94.return();}}finally{if(_didIteratorError94){throw _iteratorError94;}}}string=headerValues.join(', ')+'\n';for(var _i74=0;_i74<points.numPoints;_i74++){var values=[];var _iteratorNormalCompletion95=true;var _didIteratorError95=false;var _iteratorError95=undefined;try{for(var _iterator95=attributes[Symbol.iterator](),_step95;!(_iteratorNormalCompletion95=(_step95=_iterator95.next()).done);_iteratorNormalCompletion95=true){var attribute=_step95.value;var itemSize=points.data[attribute].length/points.numPoints;var value=points.data[attribute].subarray(itemSize*_i74,itemSize*_i74+itemSize).join(', ');values.push(value);}}catch(err){_didIteratorError95=true;_iteratorError95=err;}finally{try{if(!_iteratorNormalCompletion95&&_iterator95.return){_iterator95.return();}}finally{if(_didIteratorError95){throw _iteratorError95;}}}string+=values.join(', ')+'\n';}return string;}}]);return CSVExporter;}();Potree.LASExporter=function(){function LASExporter(){_classCallCheck(this,LASExporter);}_createClass(LASExporter,null,[{key:'toLAS',value:function toLAS(points){// TODO Unused: let string = '';
        var boundingBox=points.boundingBox;var offset=boundingBox.min.clone();var diagonal=boundingBox.min.distanceTo(boundingBox.max);var scale=new THREE.Vector3(0.001,0.001,0.001);if(diagonal>1000*1000){scale=new THREE.Vector3(0.01,0.01,0.01);}else{scale=new THREE.Vector3(0.001,0.001,0.001);}var setString=function setString(string,offset,buffer){var view=new Uint8Array(buffer);for(var _i76=0;_i76<string.length;_i76++){var charCode=string.charCodeAt(_i76);view[offset+_i76]=charCode;}};var buffer=new ArrayBuffer(227+28*points.numPoints);var view=new DataView(buffer);var u8View=new Uint8Array(buffer);// let u16View = new Uint16Array(buffer);
        setString('LASF',0,buffer);u8View[24]=1;u8View[25]=2;// system identifier o:26 l:32
// generating software o:58 l:32
        setString('Potree 1.5',58,buffer);// file creation day of year o:90 l:2
// file creation year o:92 l:2
// header size o:94 l:2
        view.setUint16(94,227,true);// offset to point data o:96 l:4
        view.setUint32(96,227,true);// number of letiable length records o:100 l:4
// point data record format 104 1
        u8View[104]=2;// point data record length 105 2
        view.setUint16(105,28,true);// number of point records 107 4
        view.setUint32(107,points.numPoints,true);// number of points by return 111 20
// x scale factor 131 8
        view.setFloat64(131,scale.x,true);// y scale factor 139 8
        view.setFloat64(139,scale.y,true);// z scale factor 147 8
        view.setFloat64(147,scale.z,true);// x offset 155 8
        view.setFloat64(155,offset.x,true);// y offset 163 8
        view.setFloat64(163,offset.y,true);// z offset 171 8
        view.setFloat64(171,offset.z,true);// max x 179 8
        view.setFloat64(179,boundingBox.max.x,true);// min x 187 8
        view.setFloat64(187,boundingBox.min.x,true);// max y 195 8
        view.setFloat64(195,boundingBox.max.y,true);// min y 203 8
        view.setFloat64(203,boundingBox.min.y,true);// max z 211 8
        view.setFloat64(211,boundingBox.max.z,true);// min z 219 8
        view.setFloat64(219,boundingBox.min.z,true);var boffset=227;for(var _i77=0;_i77<points.numPoints;_i77++){var px=points.data.position[3*_i77+0];var py=points.data.position[3*_i77+1];var pz=points.data.position[3*_i77+2];var ux=parseInt((px-offset.x)/scale.x);var uy=parseInt((py-offset.y)/scale.y);var uz=parseInt((pz-offset.z)/scale.z);view.setUint32(boffset+0,ux,true);view.setUint32(boffset+4,uy,true);view.setUint32(boffset+8,uz,true);if(points.data.intensity){view.setUint16(boffset+12,points.data.intensity[_i77],true);}var rt=0;if(points.data.returnNumber){rt+=points.data.returnNumber[_i77];}if(points.data.numberOfReturns){rt+=points.data.numberOfReturns[_i77]<<3;}view.setUint8(boffset+14,rt);if(points.data.classification){view.setUint8(boffset+15,points.data.classification[_i77]);}// scan angle rank
// user data
// point source id
            if(points.data.pointSourceID){view.setUint16(boffset+18,points.data.pointSourceID[_i77]);}if(points.data.color){view.setUint16(boffset+20,points.data.color[4*_i77+0]*255,true);view.setUint16(boffset+22,points.data.color[4*_i77+1]*255,true);view.setUint16(boffset+24,points.data.color[4*_i77+2]*255,true);}boffset+=28;}return buffer;}}]);return LASExporter;}();Potree.PointCloudArena4DNode=function(_Potree$PointCloudTre4){_inherits(PointCloudArena4DNode,_Potree$PointCloudTre4);function PointCloudArena4DNode(){_classCallCheck(this,PointCloudArena4DNode);var _this59=_possibleConstructorReturn(this,(PointCloudArena4DNode.__proto__||Object.getPrototypeOf(PointCloudArena4DNode)).call(this));_this59.left=null;_this59.right=null;_this59.sceneNode=null;_this59.kdtree=null;return _this59;}_createClass(PointCloudArena4DNode,[{key:'getNumPoints',value:function getNumPoints(){return this.geometryNode.numPoints;}},{key:'isLoaded',value:function isLoaded(){return true;}},{key:'isTreeNode',value:function isTreeNode(){return true;}},{key:'isGeometryNode',value:function isGeometryNode(){return false;}},{key:'getLevel',value:function getLevel(){return this.geometryNode.level;}},{key:'getBoundingSphere',value:function getBoundingSphere(){return this.geometryNode.boundingSphere;}},{key:'getBoundingBox',value:function getBoundingBox(){return this.geometryNode.boundingBox;}},{key:'toTreeNode',value:function toTreeNode(child){var geometryNode=null;if(this.left===child){geometryNode=this.left;}else if(this.right===child){geometryNode=this.right;}if(!geometryNode.loaded){return;}var node=new Potree.PointCloudArena4DNode();var sceneNode=THREE.PointCloud(geometryNode.geometry,this.kdtree.material);sceneNode.visible=false;node.kdtree=this.kdtree;node.geometryNode=geometryNode;node.sceneNode=sceneNode;node.parent=this;node.left=this.geometryNode.left;node.right=this.geometryNode.right;}},{key:'getChildren',value:function getChildren(){var children=[];if(this.left){children.push(this.left);}if(this.right){children.push(this.right);}return children;}}]);return PointCloudArena4DNode;}(Potree.PointCloudTreeNode);Potree.PointCloudArena4D=function(_Potree$PointCloudTre5){_inherits(PointCloudArena4D,_Potree$PointCloudTre5);function PointCloudArena4D(geometry){_classCallCheck(this,PointCloudArena4D);var _this60=_possibleConstructorReturn(this,(PointCloudArena4D.__proto__||Object.getPrototypeOf(PointCloudArena4D)).call(this));_this60.root=null;if(geometry.root){_this60.root=geometry.root;}else{geometry.addEventListener('hierarchy_loaded',function(){_this60.root=geometry.root;});}_this60.visiblePointsTarget=2*1000*1000;_this60.minimumNodePixelSize=150;_this60.position.sub(geometry.offset);_this60.updateMatrix();_this60.numVisibleNodes=0;_this60.numVisiblePoints=0;_this60.boundingBoxNodes=[];_this60.loadQueue=[];_this60.visibleNodes=[];_this60.pcoGeometry=geometry;_this60.boundingBox=_this60.pcoGeometry.boundingBox;_this60.boundingSphere=_this60.pcoGeometry.boundingSphere;_this60.material=new Potree.PointCloudMaterial({vertexColors:THREE.VertexColors,size:0.05,treeType:Potree.TreeType.KDTREE});_this60.material.sizeType=Potree.PointSizeType.ATTENUATED;_this60.material.size=0.05;_this60.profileRequests=[];_this60.name='';return _this60;}_createClass(PointCloudArena4D,[{key:'getBoundingBoxWorld',value:function getBoundingBoxWorld(){this.updateMatrixWorld(true);var box=this.boundingBox;var transform=this.matrixWorld;var tBox=Potree.utils.computeTransformedBoundingBox(box,transform);return tBox;}},{key:'setName',value:function setName(name){if(this.name!==name){this.name=name;this.dispatchEvent({type:'name_changed',name:name,pointcloud:this});}}},{key:'getName',value:function getName(){return this.name;}},{key:'getLevel',value:function getLevel(){return this.level;}},{key:'toTreeNode',value:function toTreeNode(geometryNode,parent){var _this61=this;var node=new Potree.PointCloudArena4DNode();var sceneNode=new THREE.Points(geometryNode.geometry,this.material);sceneNode.frustumCulled=false;sceneNode.onBeforeRender=function(_this,scene,camera,geometry,material,group){if(material.program){_this.getContext().useProgram(material.program.program);if(material.program.getUniforms().map.level){var level=geometryNode.getLevel();material.uniforms.level.value=level;material.program.getUniforms().map.level.setValue(_this.getContext(),level);}if(_this61.visibleNodeTextureOffsets&&material.program.getUniforms().map.vnStart){var vnStart=_this61.visibleNodeTextureOffsets.get(node);material.uniforms.vnStart.value=vnStart;material.program.getUniforms().map.vnStart.setValue(_this.getContext(),vnStart);}if(material.program.getUniforms().map.pcIndex){var _i78=node.pcIndex?node.pcIndex:_this61.visibleNodes.indexOf(node);material.uniforms.pcIndex.value=_i78;material.program.getUniforms().map.pcIndex.setValue(_this.getContext(),_i78);}}};node.geometryNode=geometryNode;node.sceneNode=sceneNode;node.pointcloud=this;node.left=geometryNode.left;node.right=geometryNode.right;if(!parent){this.root=node;this.add(sceneNode);}else{parent.sceneNode.add(sceneNode);if(parent.left===geometryNode){parent.left=node;}else if(parent.right===geometryNode){parent.right=node;}}var disposeListener=function disposeListener(){parent.sceneNode.remove(node.sceneNode);if(parent.left===node){parent.left=geometryNode;}else if(parent.right===node){parent.right=geometryNode;}};geometryNode.oneTimeDisposeHandlers.push(disposeListener);return node;}},{key:'updateMaterial',value:function updateMaterial(material,visibleNodes,camera,renderer){material.fov=camera.fov*(Math.PI/180);material.screenWidth=renderer.domElement.clientWidth;material.screenHeight=renderer.domElement.clientHeight;material.spacing=this.pcoGeometry.spacing;material.near=camera.near;material.far=camera.far;// reduce shader source updates by setting maxLevel slightly higher than actually necessary
        if(this.maxLevel>material.levels){material.levels=this.maxLevel+2;}// material.uniforms.octreeSize.value = this.boundingBox.size().x;
        var bbSize=this.boundingBox.getSize();material.bbSize=[bbSize.x,bbSize.y,bbSize.z];}},{key:'updateVisibleBounds',value:function updateVisibleBounds(){}},{key:'hideDescendants',value:function hideDescendants(object){var stack=[];for(var _i79=0;_i79<object.children.length;_i79++){var child=object.children[_i79];if(child.visible){stack.push(child);}}while(stack.length>0){var _child5=stack.shift();_child5.visible=false;if(_child5.boundingBoxNode){_child5.boundingBoxNode.visible=false;}for(var _i80=0;_i80<_child5.children.length;_i80++){var childOfChild=_child5.children[_i80];if(childOfChild.visible){stack.push(childOfChild);}}}}},{key:'updateMatrixWorld',value:function updateMatrixWorld(force){// node.matrixWorld.multiplyMatrices( node.parent.matrixWorld, node.matrix );
        if(this.matrixAutoUpdate===true)this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||force===true){if(this.parent===undefined){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}}},{key:'nodesOnRay',value:function nodesOnRay(nodes,ray){var nodesOnRay=[];var _ray=ray.clone();for(var _i81=0;_i81<nodes.length;_i81++){var _node19=nodes[_i81];var _sphere2=_node19.getBoundingSphere().clone().applyMatrix4(_node19.sceneNode.matrixWorld);// TODO Unused: let box = node.getBoundingBox().clone().applyMatrix4(node.sceneNode.matrixWorld);
        if(_ray.intersectsSphere(_sphere2)){nodesOnRay.push(_node19);}// if(_ray.isIntersectionBox(box)){
//	nodesOnRay.push(node);
// }
    }return nodesOnRay;}},{key:'pick',value:function pick(viewer,camera,ray){var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var renderer=viewer.renderer;var pRenderer=viewer.pRenderer;performance.mark("pick-start");var getVal=function getVal(a,b){return a!==undefined?a:b;};var pickWindowSize=getVal(params.pickWindowSize,17);var pickOutsideClipRegion=getVal(params.pickOutsideClipRegion,false);var size=renderer.getSize();var width=Math.ceil(getVal(params.width,size.width));var height=Math.ceil(getVal(params.height,size.height));var pointSizeType=getVal(params.pointSizeType,this.material.pointSizeType);var pointSize=getVal(params.pointSize,this.material.size);var nodes=this.nodesOnRay(this.visibleNodes,ray);if(nodes.length===0){return null;}if(!this.pickState){var scene=new THREE.Scene();var _material2=new Potree.PointCloudMaterial();_material2.pointColorType=Potree.PointColorType.POINT_INDEX;var renderTarget=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat});this.pickState={renderTarget:renderTarget,material:_material2,scene:scene};};var pickState=this.pickState;var pickMaterial=pickState.material;{// update pick material
        pickMaterial.pointSizeType=pointSizeType;pickMaterial.shape=this.material.shape;pickMaterial.size=pointSize;pickMaterial.uniforms.minSize.value=this.material.uniforms.minSize.value;pickMaterial.uniforms.maxSize.value=this.material.uniforms.maxSize.value;pickMaterial.classification=this.material.classification;if(params.pickClipped){pickMaterial.clipBoxes=this.material.clipBoxes;if(this.material.clipTask===Potree.ClipTask.HIGHLIGHT){pickMaterial.clipTask=Potree.ClipTask.NONE;}else{pickMaterial.clipTask=this.material.clipTask;}}else{pickMaterial.clipBoxes=[];}this.updateMaterial(pickMaterial,nodes,camera,renderer);}pickState.renderTarget.setSize(width,height);var pixelPos=new THREE.Vector2(params.x,params.y);var gl=renderer.getContext();gl.enable(gl.SCISSOR_TEST);gl.scissor(parseInt(pixelPos.x-(pickWindowSize-1)/2),parseInt(pixelPos.y-(pickWindowSize-1)/2),parseInt(pickWindowSize),parseInt(pickWindowSize));renderer.state.buffers.depth.setTest(pickMaterial.depthTest);renderer.state.buffers.depth.setMask(pickMaterial.depthWrite);renderer.state.setBlending(THREE.NoBlending);renderer.clearTarget(pickState.renderTarget,true,true,true);{// RENDER
        renderer.setRenderTarget(pickState.renderTarget);gl.clearColor(0,0,0,0);renderer.clearTarget(pickState.renderTarget,true,true,true);var tmp=this.material;this.material=pickMaterial;pRenderer.renderOctree(this,nodes,camera,pickState.renderTarget);this.material=tmp;}var clamp=function clamp(number,min,max){return Math.min(Math.max(min,number),max);};var x=parseInt(clamp(pixelPos.x-(pickWindowSize-1)/2,0,width));var y=parseInt(clamp(pixelPos.y-(pickWindowSize-1)/2,0,height));var w=parseInt(Math.min(x+pickWindowSize,width)-x);var h=parseInt(Math.min(y+pickWindowSize,height)-y);var pixelCount=w*h;var buffer=new Uint8Array(4*pixelCount);gl.readPixels(x,y,pickWindowSize,pickWindowSize,gl.RGBA,gl.UNSIGNED_BYTE,buffer);renderer.setRenderTarget(null);renderer.resetGLState();renderer.setScissorTest(false);gl.disable(gl.SCISSOR_TEST);var pixels=buffer;var ibuffer=new Uint32Array(buffer.buffer);// find closest hit inside pixelWindow boundaries
        var min=Number.MAX_VALUE;var hits=[];for(var u=0;u<pickWindowSize;u++){for(var v=0;v<pickWindowSize;v++){var offset=u+v*pickWindowSize;var distance=Math.pow(u-(pickWindowSize-1)/2,2)+Math.pow(v-(pickWindowSize-1)/2,2);var pcIndex=pixels[4*offset+3];pixels[4*offset+3]=0;var pIndex=ibuffer[offset];if(!(pcIndex===0&&pIndex===0)&&pcIndex!==undefined&&pIndex!==undefined){var hit={pIndex:pIndex,pcIndex:pcIndex,distanceToCenter:distance};if(params.all){hits.push(hit);}else{if(hits.length>0){if(distance<hits[0].distanceToCenter){hits[0]=hit;}}else{hits.push(hit);}}}}}var _iteratorNormalCompletion96=true;var _didIteratorError96=false;var _iteratorError96=undefined;try{for(var _iterator96=hits[Symbol.iterator](),_step96;!(_iteratorNormalCompletion96=(_step96=_iterator96.next()).done);_iteratorNormalCompletion96=true){var _hit2=_step96.value;var point={};if(!nodes[_hit2.pcIndex]){return null;}var _node20=nodes[_hit2.pcIndex];var pc=_node20.sceneNode;var _geometry4=_node20.geometryNode.geometry;for(var attributeName in _geometry4.attributes){var attribute=_geometry4.attributes[attributeName];if(attributeName==='position'){var _x28=attribute.array[3*_hit2.pIndex+0];var _y2=attribute.array[3*_hit2.pIndex+1];var z=attribute.array[3*_hit2.pIndex+2];var position=new THREE.Vector3(_x28,_y2,z);position.applyMatrix4(pc.matrixWorld);point[attributeName]=position;}else if(attributeName==='indices'){}else{//if (values.itemSize === 1) {
//	point[attribute.name] = values.array[hit.pIndex];
//} else {
//	let value = [];
//	for (let j = 0; j < values.itemSize; j++) {
//		value.push(values.array[values.itemSize * hit.pIndex + j]);
//	}
//	point[attribute.name] = value;
//}
        }}_hit2.point=point;}}catch(err){_didIteratorError96=true;_iteratorError96=err;}finally{try{if(!_iteratorNormalCompletion96&&_iterator96.return){_iterator96.return();}}finally{if(_didIteratorError96){throw _iteratorError96;}}}performance.mark("pick-end");performance.measure("pick","pick-start","pick-end");if(params.all){return hits.map(function(hit){return hit.point;});}else{if(hits.length===0){return null;}else{return hits[0].point;}}}},{key:'computeVisibilityTextureData',value:function computeVisibilityTextureData(nodes){if(Potree.measureTimings)performance.mark("computeVisibilityTextureData-start");var data=new Uint8Array(nodes.length*3);var visibleNodeTextureOffsets=new Map();// copy array
        nodes=nodes.slice();// sort by level and number
        var sort=function sort(a,b){var la=a.geometryNode.level;var lb=b.geometryNode.level;var na=a.geometryNode.number;var nb=b.geometryNode.number;if(la!==lb)return la-lb;if(na<nb)return-1;if(na>nb)return 1;return 0;};nodes.sort(sort);var visibleNodeNames=[];for(var _i82=0;_i82<nodes.length;_i82++){visibleNodeNames.push(nodes[_i82].geometryNode.number);}for(var _i83=0;_i83<nodes.length;_i83++){var _node21=nodes[_i83];visibleNodeTextureOffsets.set(_node21,_i83);var b1=0;// children
            var b2=0;// offset to first child
            var b3=0;// split
            if(_node21.geometryNode.left&&visibleNodeNames.indexOf(_node21.geometryNode.left.number)>0){b1+=1;b2=visibleNodeNames.indexOf(_node21.geometryNode.left.number)-_i83;}if(_node21.geometryNode.right&&visibleNodeNames.indexOf(_node21.geometryNode.right.number)>0){b1+=2;b2=b2===0?visibleNodeNames.indexOf(_node21.geometryNode.right.number)-_i83:b2;}if(_node21.geometryNode.split==='X'){b3=1;}else if(_node21.geometryNode.split==='Y'){b3=2;}else if(_node21.geometryNode.split==='Z'){b3=4;}data[_i83*3+0]=b1;data[_i83*3+1]=b2;data[_i83*3+2]=b3;}if(Potree.measureTimings){performance.mark("computeVisibilityTextureData-end");performance.measure("render.computeVisibilityTextureData","computeVisibilityTextureData-start","computeVisibilityTextureData-end");}return{data:data,offsets:visibleNodeTextureOffsets};}},{key:'progress',get:function get(){if(this.pcoGeometry.root){return Potree.numNodesLoading>0?0:1;}else{return 0;}}}]);return PointCloudArena4D;}(Potree.PointCloudTree);Potree.PointCloudArena4DGeometryNode=function(){function PointCloudArena4DGeometryNode(){_classCallCheck(this,PointCloudArena4DGeometryNode);this.left=null;this.right=null;this.boundingBox=null;this.number=null;this.pcoGeometry=null;this.loaded=false;this.numPoints=0;this.level=0;this.children=[];this.oneTimeDisposeHandlers=[];}_createClass(PointCloudArena4DGeometryNode,[{key:'isGeometryNode',value:function isGeometryNode(){return true;}},{key:'isTreeNode',value:function isTreeNode(){return false;}},{key:'isLoaded',value:function isLoaded(){return this.loaded;}},{key:'getBoundingSphere',value:function getBoundingSphere(){return this.boundingSphere;}},{key:'getBoundingBox',value:function getBoundingBox(){return this.boundingBox;}},{key:'getChildren',value:function getChildren(){var children=[];if(this.left){children.push(this.left);}if(this.right){children.push(this.right);}return children;}},{key:'getBoundingBox',value:function getBoundingBox(){return this.boundingBox;}},{key:'getLevel',value:function getLevel(){return this.level;}},{key:'load',value:function load(){if(this.loaded||this.loading){return;}if(Potree.numNodesLoading>=Potree.maxNodesLoading){return;}this.loading=true;Potree.numNodesLoading++;var url=this.pcoGeometry.url+'?node='+this.number;var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';var node=this;xhr.onreadystatechange=function(){if(!(xhr.readyState===4&&xhr.status===200)){return;}var buffer=xhr.response;var sourceView=new DataView(buffer);var numPoints=buffer.byteLength/17;var bytesPerPoint=28;var data=new ArrayBuffer(numPoints*bytesPerPoint);var targetView=new DataView(data);var attributes=[Potree.PointAttribute.POSITION_CARTESIAN,Potree.PointAttribute.RGBA_PACKED,Potree.PointAttribute.INTENSITY,Potree.PointAttribute.CLASSIFICATION];var position=new Float32Array(numPoints*3);var color=new Uint8Array(numPoints*4);var intensities=new Float32Array(numPoints);var classifications=new Uint8Array(numPoints);var indices=new ArrayBuffer(numPoints*4);var u32Indices=new Uint32Array(indices);var tightBoundingBox=new THREE.Box3();for(var _i84=0;_i84<numPoints;_i84++){var x=sourceView.getFloat32(_i84*17+0,true)+node.boundingBox.min.x;var y=sourceView.getFloat32(_i84*17+4,true)+node.boundingBox.min.y;var z=sourceView.getFloat32(_i84*17+8,true)+node.boundingBox.min.z;var r=sourceView.getUint8(_i84*17+12,true);var g=sourceView.getUint8(_i84*17+13,true);var b=sourceView.getUint8(_i84*17+14,true);var intensity=sourceView.getUint8(_i84*17+15,true);var classification=sourceView.getUint8(_i84*17+16,true);tightBoundingBox.expandByPoint(new THREE.Vector3(x,y,z));position[_i84*3+0]=x;position[_i84*3+1]=y;position[_i84*3+2]=z;color[_i84*4+0]=r;color[_i84*4+1]=g;color[_i84*4+2]=b;color[_i84*4+3]=255;intensities[_i84]=intensity;classifications[_i84]=classification;u32Indices[_i84]=_i84;}var geometry=new THREE.BufferGeometry();geometry.addAttribute('position',new THREE.BufferAttribute(position,3));geometry.addAttribute('color',new THREE.BufferAttribute(color,4,true));geometry.addAttribute('intensity',new THREE.BufferAttribute(intensities,1));geometry.addAttribute('classification',new THREE.BufferAttribute(classifications,1));{var bufferAttribute=new THREE.BufferAttribute(new Uint8Array(indices),4,true);//bufferAttribute.normalized = true;
        geometry.addAttribute('indices',bufferAttribute);}node.geometry=geometry;node.numPoints=numPoints;node.loaded=true;node.loading=false;Potree.numNodesLoading--;};xhr.send(null);}},{key:'dispose',value:function dispose(){if(this.geometry&&this.parent!=null){this.geometry.dispose();this.geometry=null;this.loaded=false;// this.dispatchEvent( { type: 'dispose' } );
        for(var _i85=0;_i85<this.oneTimeDisposeHandlers.length;_i85++){var handler=this.oneTimeDisposeHandlers[_i85];handler();}this.oneTimeDisposeHandlers=[];}}},{key:'getNumPoints',value:function getNumPoints(){return this.numPoints;}}]);return PointCloudArena4DGeometryNode;}();Potree.PointCloudArena4DGeometry=function(_THREE$EventDispatche13){_inherits(PointCloudArena4DGeometry,_THREE$EventDispatche13);function PointCloudArena4DGeometry(){_classCallCheck(this,PointCloudArena4DGeometry);var _this62=_possibleConstructorReturn(this,(PointCloudArena4DGeometry.__proto__||Object.getPrototypeOf(PointCloudArena4DGeometry)).call(this));_this62.numPoints=0;_this62.version=0;_this62.boundingBox=null;_this62.numNodes=0;_this62.name=null;_this62.provider=null;_this62.url=null;_this62.root=null;_this62.levels=0;_this62._spacing=null;_this62.pointAttributes=new Potree.PointAttributes(['POSITION_CARTESIAN','COLOR_PACKED']);return _this62;}_createClass(PointCloudArena4DGeometry,[{key:'loadHierarchy',value:function loadHierarchy(){var _this63=this;var url=this.url+'?tree';var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',url,true);xhr.responseType='arraybuffer';xhr.onreadystatechange=function(){if(!(xhr.readyState===4&&xhr.status===200)){return;}var buffer=xhr.response;var numNodes=buffer.byteLength/3;var view=new DataView(buffer);var stack=[];var root=null;var levels=0;// TODO Debug: let start = new Date().getTime();
// read hierarchy
        for(var _i86=0;_i86<numNodes;_i86++){var mask=view.getUint8(_i86*3+0,true);// TODO Unused: let numPoints = view.getUint16(i * 3 + 1, true);
            var hasLeft=(mask&1)>0;var hasRight=(mask&2)>0;var splitX=(mask&4)>0;var splitY=(mask&8)>0;var splitZ=(mask&16)>0;var split=null;if(splitX){split='X';}else if(splitY){split='Y';}if(splitZ){split='Z';}var _node22=new Potree.PointCloudArena4DGeometryNode();_node22.hasLeft=hasLeft;_node22.hasRight=hasRight;_node22.split=split;_node22.isLeaf=!hasLeft&&!hasRight;_node22.number=_i86;_node22.left=null;_node22.right=null;_node22.pcoGeometry=_this63;_node22.level=stack.length;levels=Math.max(levels,_node22.level);if(stack.length>0){var parent=stack[stack.length-1];_node22.boundingBox=parent.boundingBox.clone();var parentBBSize=parent.boundingBox.getSize();if(parent.hasLeft&&!parent.left){parent.left=_node22;parent.children.push(_node22);if(parent.split==='X'){_node22.boundingBox.max.x=_node22.boundingBox.min.x+parentBBSize.x/2;}else if(parent.split==='Y'){_node22.boundingBox.max.y=_node22.boundingBox.min.y+parentBBSize.y/2;}else if(parent.split==='Z'){_node22.boundingBox.max.z=_node22.boundingBox.min.z+parentBBSize.z/2;}var center=_node22.boundingBox.getCenter();var radius=_node22.boundingBox.getSize().length()/2;_node22.boundingSphere=new THREE.Sphere(center,radius);}else{parent.right=_node22;parent.children.push(_node22);if(parent.split==='X'){_node22.boundingBox.min.x=_node22.boundingBox.min.x+parentBBSize.x/2;}else if(parent.split==='Y'){_node22.boundingBox.min.y=_node22.boundingBox.min.y+parentBBSize.y/2;}else if(parent.split==='Z'){_node22.boundingBox.min.z=_node22.boundingBox.min.z+parentBBSize.z/2;}var _center=_node22.boundingBox.getCenter();var _radius2=_node22.boundingBox.getSize().length()/2;_node22.boundingSphere=new THREE.Sphere(_center,_radius2);}}else{root=_node22;root.boundingBox=_this63.boundingBox.clone();var _center2=root.boundingBox.getCenter();var _radius3=root.boundingBox.getSize().length()/2;root.boundingSphere=new THREE.Sphere(_center2,_radius3);}var bbSize=_node22.boundingBox.getSize();_node22.spacing=(bbSize.x+bbSize.y+bbSize.z)/3/75;_node22.estimatedSpacing=_node22.spacing;stack.push(_node22);if(_node22.isLeaf){var done=false;while(!done&&stack.length>0){stack.pop();var top=stack[stack.length-1];done=stack.length>0&&top.hasRight&&top.right==null;}}}// TODO Debug:
// let end = new Date().getTime();
// let parseDuration = end - start;
// let msg = parseDuration;
// document.getElementById("lblDebug").innerHTML = msg;
        _this63.root=root;_this63.levels=levels;// console.log(this.root);
        _this63.dispatchEvent({type:'hierarchy_loaded'});};xhr.send(null);}},{key:'spacing',get:function get(){if(this._spacing){return this._spacing;}else if(this.root){return this.root.spacing;}else{// TODO ???: null;
    }},set:function set(value){this._spacing=value;}}],[{key:'load',value:function load(url,callback){var xhr=Potree.XHRFactory.createXMLHttpRequest();xhr.open('GET',url+'?info',true);xhr.onreadystatechange=function(){try{if(xhr.readyState===4&&xhr.status===200){var response=JSON.parse(xhr.responseText);var _geometry5=new Potree.PointCloudArena4DGeometry();_geometry5.url=url;_geometry5.name=response.Name;_geometry5.provider=response.Provider;_geometry5.numNodes=response.Nodes;_geometry5.numPoints=response.Points;_geometry5.version=response.Version;_geometry5.boundingBox=new THREE.Box3(new THREE.Vector3().fromArray(response.BoundingBox.slice(0,3)),new THREE.Vector3().fromArray(response.BoundingBox.slice(3,6)));if(response.Spacing){_geometry5.spacing=response.Spacing;}var offset=_geometry5.boundingBox.min.clone().multiplyScalar(-1);_geometry5.boundingBox.min.add(offset);_geometry5.boundingBox.max.add(offset);_geometry5.offset=offset;var center=_geometry5.boundingBox.getCenter();var radius=_geometry5.boundingBox.getSize().length()/2;_geometry5.boundingSphere=new THREE.Sphere(center,radius);_geometry5.loadHierarchy();callback(_geometry5);}else if(xhr.readyState===4){callback(null);}}catch(e){console.error(e.message);callback(null);}};xhr.send(null);}}]);return PointCloudArena4DGeometry;}(THREE.EventDispatcher);var PotreeRenderer=function(){function PotreeRenderer(viewer){_classCallCheck(this,PotreeRenderer);this.viewer=viewer;}_createClass(PotreeRenderer,[{key:'render',value:function render(){var viewer=this.viewer;var query=Potree.startQuery('render',viewer.renderer.getContext());viewer.dispatchEvent({type:"render.pass.begin",viewer:viewer});// render skybox
        if(viewer.background==="skybox"){viewer.renderer.clear(true,true,false);viewer.skybox.camera.rotation.copy(viewer.scene.cameraP.rotation);viewer.skybox.camera.fov=viewer.scene.cameraP.fov;viewer.skybox.camera.aspect=viewer.scene.cameraP.aspect;viewer.skybox.camera.updateProjectionMatrix();viewer.renderer.render(viewer.skybox.scene,viewer.skybox.camera);}else if(viewer.background==="gradient"){viewer.renderer.clear(true,true,false);viewer.renderer.render(viewer.scene.sceneBG,viewer.scene.cameraBG);}else if(viewer.background==="black"){viewer.renderer.setClearColor(0x000000,1);viewer.renderer.clear(true,true,false);}else if(viewer.background==="white"){viewer.renderer.setClearColor(0xFFFFFF,1);viewer.renderer.clear(true,true,false);}else{viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear(true,true,false);}var _iteratorNormalCompletion97=true;var _didIteratorError97=false;var _iteratorError97=undefined;try{for(var _iterator97=this.viewer.scene.pointclouds[Symbol.iterator](),_step97;!(_iteratorNormalCompletion97=(_step97=_iterator97.next()).done);_iteratorNormalCompletion97=true){var pointcloud=_step97.value;pointcloud.material.useEDL=false;}//let queryPC = Potree.startQuery("PointCloud", viewer.renderer.getContext());
        }catch(err){_didIteratorError97=true;_iteratorError97=err;}finally{try{if(!_iteratorNormalCompletion97&&_iterator97.return){_iterator97.return();}}finally{if(_didIteratorError97){throw _iteratorError97;}}}var activeCam=viewer.scene.getActiveCamera();//viewer.renderer.render(viewer.scene.scenePointCloud, activeCam);
        viewer.pRenderer.render(viewer.scene.scenePointCloud,activeCam);//Potree.endQuery(queryPC, viewer.renderer.getContext());
// render scene
        viewer.renderer.render(viewer.scene.scene,activeCam);viewer.dispatchEvent({type:"render.pass.scene",viewer:viewer});viewer.clippingTool.update();viewer.renderer.render(viewer.clippingTool.sceneMarker,viewer.scene.cameraScreenSpace);//viewer.scene.cameraScreenSpace);
        viewer.renderer.render(viewer.clippingTool.sceneVolume,activeCam);viewer.renderer.render(viewer.controls.sceneControls,activeCam);viewer.renderer.clearDepth();viewer.transformationTool.update();viewer.dispatchEvent({type:"render.pass.perspective_overlay",viewer:viewer});viewer.renderer.render(viewer.transformationTool.scene,activeCam);viewer.renderer.setViewport(viewer.renderer.domElement.clientWidth-viewer.navigationCube.width,viewer.renderer.domElement.clientHeight-viewer.navigationCube.width,viewer.navigationCube.width,viewer.navigationCube.width);viewer.renderer.render(viewer.navigationCube,viewer.navigationCube.camera);viewer.renderer.setViewport(0,0,viewer.renderer.domElement.clientWidth,viewer.renderer.domElement.clientHeight);viewer.dispatchEvent({type:"render.pass.end",viewer:viewer});Potree.endQuery(query,viewer.renderer.getContext());}}]);return PotreeRenderer;}();;var EDLRenderer=function(){function EDLRenderer(viewer){_classCallCheck(this,EDLRenderer);this.viewer=viewer;this.edlMaterial=null;this.rtRegular;this.rtEDL;this.gl=viewer.renderer.context;this.shadowMap=new Potree.PointCloudSM(this.viewer.pRenderer);}_createClass(EDLRenderer,[{key:'initEDL',value:function initEDL(){if(this.edlMaterial!=null){return;}this.edlMaterial=new Potree.EyeDomeLightingMaterial();this.edlMaterial.depthTest=true;this.edlMaterial.depthWrite=true;this.edlMaterial.transparent=true;this.rtEDL=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType,depthTexture:new THREE.DepthTexture(undefined,undefined,THREE.UnsignedIntType)});this.rtRegular=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,depthTexture:new THREE.DepthTexture(undefined,undefined,THREE.UnsignedIntType)});//{
//	let geometry = new THREE.PlaneBufferGeometry( 1, 1, 32, 32);
//	let material = new THREE.MeshBasicMaterial( {side: THREE.DoubleSide, map: this.shadowMap.target.texture} );
//	let plane = new THREE.Mesh( geometry, material );
//	plane.scale.set(0.5, 0.5, 1.0);
//	plane.position.set(plane.scale.x / 2, plane.scale.y / 2, 0);
//	this.viewer.overlay.add(plane);
//}
    }},{key:'resize',value:function resize(){var viewer=this.viewer;var pixelRatio=viewer.renderer.getPixelRatio();var _viewer$renderer$getS=viewer.renderer.getSize(),width=_viewer$renderer$getS.width,height=_viewer$renderer$getS.height;if(this.screenshot){width=this.screenshot.target.width;height=this.screenshot.target.height;}this.rtEDL.setSize(width*pixelRatio,height*pixelRatio);this.rtRegular.setSize(width*pixelRatio,height*pixelRatio);}},{key:'makeScreenshot',value:function makeScreenshot(camera,size,callback){if(camera===undefined||camera===null){camera=this.viewer.scene.getActiveCamera();}if(size===undefined||size===null){size=this.viewer.renderer.getSize();}var _size=size,width=_size.width,height=_size.height;//let maxTextureSize = viewer.renderer.capabilities.maxTextureSize;
//if(width * 4 <
        width=2*width;height=2*height;var target=new THREE.WebGLRenderTarget(width,height,{format:THREE.RGBAFormat});this.screenshot={target:target};this.viewer.renderer.clearTarget(target,true,true,true);this.render();var pixelCount=width*height;var buffer=new Uint8Array(4*pixelCount);this.viewer.renderer.readRenderTargetPixels(target,0,0,width,height,buffer);// flip vertically
        var bytesPerLine=width*4;for(var _i87=0;_i87<parseInt(height/2);_i87++){var j=height-_i87-1;var lineI=buffer.slice(_i87*bytesPerLine,_i87*bytesPerLine+bytesPerLine);var lineJ=buffer.slice(j*bytesPerLine,j*bytesPerLine+bytesPerLine);buffer.set(lineJ,_i87*bytesPerLine);buffer.set(lineI,j*bytesPerLine);}this.screenshot.target.dispose();delete this.screenshot;return{width:width,height:height,buffer:buffer};}},{key:'render',value:function render(){this.initEDL();var viewer=this.viewer;viewer.dispatchEvent({type:"render.pass.begin",viewer:viewer});this.resize();if(this.screenshot){var oldBudget=Potree.pointBudget;Potree.pointBudget=Math.max(10*1000*1000,2*oldBudget);var result=Potree.updatePointClouds(viewer.scene.pointclouds,viewer.scene.getActiveCamera(),viewer.renderer);Potree.pointBudget=oldBudget;}var camera=viewer.scene.getActiveCamera();var lights=[];viewer.scene.scene.traverse(function(node){if(node instanceof THREE.SpotLight){lights.push(node);}});var querySkybox=Potree.startQuery('EDL - Skybox',viewer.renderer.getContext());if(viewer.background==="skybox"){viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();viewer.skybox.camera.rotation.copy(viewer.scene.cameraP.rotation);viewer.skybox.camera.fov=viewer.scene.cameraP.fov;viewer.skybox.camera.aspect=viewer.scene.cameraP.aspect;viewer.skybox.camera.updateProjectionMatrix();viewer.renderer.render(viewer.skybox.scene,viewer.skybox.camera);}else if(viewer.background==='gradient'){viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();viewer.renderer.render(viewer.scene.sceneBG,viewer.scene.cameraBG);}else if(viewer.background==='black'){viewer.renderer.setClearColor(0x000000,1);viewer.renderer.clear();}else if(viewer.background==='white'){viewer.renderer.setClearColor(0xFFFFFF,1);viewer.renderer.clear();}else{viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();}Potree.endQuery(querySkybox,viewer.renderer.getContext());// TODO adapt to multiple lights
        if(lights.length>0&&!lights[0].disableShadowUpdates){var _light=lights[0];var queryShadows=Potree.startQuery('EDL - shadows',viewer.renderer.getContext());this.shadowMap.setLight(_light);var originalAttributes=new Map();var _iteratorNormalCompletion98=true;var _didIteratorError98=false;var _iteratorError98=undefined;try{for(var _iterator98=viewer.scene.pointclouds[Symbol.iterator](),_step98;!(_iteratorNormalCompletion98=(_step98=_iterator98.next()).done);_iteratorNormalCompletion98=true){var pointcloud=_step98.value;originalAttributes.set(pointcloud,pointcloud.material.pointColorType);pointcloud.material.disableEvents();pointcloud.material.pointColorType=Potree.PointColorType.DEPTH;}}catch(err){_didIteratorError98=true;_iteratorError98=err;}finally{try{if(!_iteratorNormalCompletion98&&_iterator98.return){_iterator98.return();}}finally{if(_didIteratorError98){throw _iteratorError98;}}}this.shadowMap.render(viewer.scene.scenePointCloud,camera);var _iteratorNormalCompletion99=true;var _didIteratorError99=false;var _iteratorError99=undefined;try{for(var _iterator99=viewer.scene.pointclouds[Symbol.iterator](),_step99;!(_iteratorNormalCompletion99=(_step99=_iterator99.next()).done);_iteratorNormalCompletion99=true){var _pointcloud4=_step99.value;var originalAttribute=originalAttributes.get(_pointcloud4);_pointcloud4.material.pointColorType=originalAttribute;_pointcloud4.material.enableEvents();}}catch(err){_didIteratorError99=true;_iteratorError99=err;}finally{try{if(!_iteratorNormalCompletion99&&_iterator99.return){_iterator99.return();}}finally{if(_didIteratorError99){throw _iteratorError99;}}}viewer.shadowTestCam.updateMatrixWorld();viewer.shadowTestCam.matrixWorldInverse.getInverse(viewer.shadowTestCam.matrixWorld);viewer.shadowTestCam.updateProjectionMatrix();Potree.endQuery(queryShadows,viewer.renderer.getContext());}var queryColors=Potree.startQuery('EDL - colorpass',viewer.renderer.getContext());viewer.renderer.render(viewer.scene.scene,camera);//viewer.renderer.clearTarget( this.rtColor, true, true, true );
        viewer.renderer.clearTarget(this.rtEDL,true,true,true);viewer.renderer.clearTarget(this.rtRegular,true,true,false);var width=viewer.renderer.getSize().width;var height=viewer.renderer.getSize().height;// COLOR & DEPTH PASS
        var _iteratorNormalCompletion100=true;var _didIteratorError100=false;var _iteratorError100=undefined;try{for(var _iterator100=viewer.scene.pointclouds[Symbol.iterator](),_step100;!(_iteratorNormalCompletion100=(_step100=_iterator100.next()).done);_iteratorNormalCompletion100=true){var _pointcloud5=_step100.value;var octreeSize=_pointcloud5.pcoGeometry.boundingBox.getSize().x;var _material3=_pointcloud5.material;_material3.weighted=false;_material3.useLogarithmicDepthBuffer=false;_material3.useEDL=true;_material3.screenWidth=width;_material3.screenHeight=height;_material3.uniforms.visibleNodes.value=_pointcloud5.material.visibleNodesTexture;_material3.uniforms.octreeSize.value=octreeSize;_material3.spacing=_pointcloud5.pcoGeometry.spacing*Math.max(_pointcloud5.scale.x,_pointcloud5.scale.y,_pointcloud5.scale.z);}// TODO adapt to multiple lights
        }catch(err){_didIteratorError100=true;_iteratorError100=err;}finally{try{if(!_iteratorNormalCompletion100&&_iterator100.return){_iterator100.return();}}finally{if(_didIteratorError100){throw _iteratorError100;}}}if(lights.length>0){viewer.pRenderer.render(viewer.scene.scenePointCloud,camera,this.rtEDL,{shadowMaps:[this.shadowMap],transparent:false});}else{viewer.pRenderer.render(viewer.scene.scenePointCloud,camera,this.rtEDL,{transparent:false});}viewer.renderer.render(viewer.scene.scene,camera,this.rtRegular);//viewer.renderer.setRenderTarget(this.rtColor);
        viewer.dispatchEvent({type:"render.pass.scene",viewer:viewer,renderTarget:this.rtRegular});Potree.endQuery(queryColors,viewer.renderer.getContext());{// EDL OCCLUSION PASS
            var queryEDL=Potree.startQuery('EDL - resolve',viewer.renderer.getContext());this.edlMaterial.uniforms.screenWidth.value=width;this.edlMaterial.uniforms.screenHeight.value=height;//this.edlMaterial.uniforms.colorMap.value = this.rtColor.texture;
            this.edlMaterial.uniforms.uRegularColor.value=this.rtRegular.texture;this.edlMaterial.uniforms.uEDLColor.value=this.rtEDL.texture;this.edlMaterial.uniforms.uRegularDepth.value=this.rtRegular.depthTexture;this.edlMaterial.uniforms.uEDLDepth.value=this.rtEDL.depthTexture;this.edlMaterial.uniforms.edlStrength.value=viewer.edlStrength;this.edlMaterial.uniforms.radius.value=viewer.edlRadius;this.edlMaterial.uniforms.opacity.value=1;Potree.utils.screenPass.render(viewer.renderer,this.edlMaterial);if(this.screenshot){Potree.utils.screenPass.render(viewer.renderer,this.edlMaterial,this.screenshot.target);}Potree.endQuery(queryEDL,viewer.renderer.getContext());}var queryRest=Potree.startQuery('EDL - rest',viewer.renderer.getContext());viewer.renderer.clearDepth();viewer.transformationTool.update();viewer.dispatchEvent({type:"render.pass.perspective_overlay",viewer:viewer});viewer.renderer.render(viewer.controls.sceneControls,camera);viewer.renderer.render(viewer.clippingTool.sceneVolume,camera);viewer.renderer.render(viewer.transformationTool.scene,camera);viewer.renderer.setViewport(width-viewer.navigationCube.width,height-viewer.navigationCube.width,viewer.navigationCube.width,viewer.navigationCube.width);viewer.renderer.render(viewer.navigationCube,viewer.navigationCube.camera);viewer.renderer.setViewport(0,0,width,height);viewer.dispatchEvent({type:"render.pass.end",viewer:viewer});Potree.endQuery(queryRest,viewer.renderer.getContext());}}]);return EDLRenderer;}();;var HQSplatRenderer=function(){function HQSplatRenderer(viewer){_classCallCheck(this,HQSplatRenderer);this.viewer=viewer;this.depthMaterials=new Map();this.attributeMaterials=new Map();this.normalizationMaterial=null;this.rtDepth=null;this.rtAttribute=null;this.gl=viewer.renderer.context;this.initialized=false;}_createClass(HQSplatRenderer,[{key:'init',value:function init(){if(this.initialized){return;}this.normalizationMaterial=new Potree.NormalizationMaterial();this.normalizationMaterial.depthTest=true;this.normalizationMaterial.depthWrite=true;this.normalizationMaterial.transparent=true;this.normalizationEDLMaterial=new Potree.NormalizationEDLMaterial();this.normalizationEDLMaterial.depthTest=true;this.normalizationEDLMaterial.depthWrite=true;this.normalizationEDLMaterial.transparent=true;this.rtDepth=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType,depthTexture:new THREE.DepthTexture(undefined,undefined,THREE.UnsignedIntType)});this.rtAttribute=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType,depthTexture:this.rtDepth.depthTexture//depthTexture: new THREE.DepthTexture(undefined, undefined, THREE.UnsignedIntType)
    });//{
//	let geometry = new THREE.PlaneBufferGeometry( 1, 1, 32, 32);
//	let material = new THREE.MeshBasicMaterial( {side: THREE.DoubleSide, map: this.rtDepth.texture} );
//	let plane = new THREE.Mesh( geometry, material );
//	plane.scale.set(0.3, 0.3, 1.0);
//	plane.position.set(plane.scale.x / 2, plane.scale.y / 2, 0);
//	this.viewer.overlay.add(plane);
//}
        this.initialized=true;}},{key:'resize',value:function resize(){var viewer=this.viewer;var pixelRatio=viewer.renderer.getPixelRatio();var width=viewer.renderer.getSize().width;var height=viewer.renderer.getSize().height;this.rtDepth.setSize(width*pixelRatio,height*pixelRatio);this.rtAttribute.setSize(width*pixelRatio,height*pixelRatio);}},{key:'render',value:function render(){this.init();var viewer=this.viewer;viewer.dispatchEvent({type:"render.pass.begin",viewer:viewer});this.resize();var camera=viewer.scene.getActiveCamera();viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clearTarget(this.rtDepth,true,true,true);viewer.renderer.clearTarget(this.rtAttribute,true,true,true);var width=viewer.renderer.getSize().width;var height=viewer.renderer.getSize().height;var queryHQSplats=Potree.startQuery('HQSplats',viewer.renderer.getContext());var visiblePointClouds=viewer.scene.pointclouds.filter(function(pc){return pc.visible;});var originalMaterials=new Map();var _iteratorNormalCompletion101=true;var _didIteratorError101=false;var _iteratorError101=undefined;try{for(var _iterator101=visiblePointClouds[Symbol.iterator](),_step101;!(_iteratorNormalCompletion101=(_step101=_iterator101.next()).done);_iteratorNormalCompletion101=true){var _pointcloud7=_step101.value;originalMaterials.set(_pointcloud7,_pointcloud7.material);if(!this.attributeMaterials.has(_pointcloud7)){var _attributeMaterial=new Potree.PointCloudMaterial();this.attributeMaterials.set(_pointcloud7,_attributeMaterial);}if(!this.depthMaterials.has(_pointcloud7)){var _depthMaterial=new Potree.PointCloudMaterial();_depthMaterial.setDefine("depth_pass","#define hq_depth_pass");_depthMaterial.setDefine("use_edl","#define use_edl");this.depthMaterials.set(_pointcloud7,_depthMaterial);}}}catch(err){_didIteratorError101=true;_iteratorError101=err;}finally{try{if(!_iteratorNormalCompletion101&&_iterator101.return){_iterator101.return();}}finally{if(_didIteratorError101){throw _iteratorError101;}}}{// DEPTH PASS
        var _iteratorNormalCompletion102=true;var _didIteratorError102=false;var _iteratorError102=undefined;try{for(var _iterator102=visiblePointClouds[Symbol.iterator](),_step102;!(_iteratorNormalCompletion102=(_step102=_iterator102.next()).done);_iteratorNormalCompletion102=true){var pointcloud=_step102.value;var octreeSize=pointcloud.pcoGeometry.boundingBox.getSize().x;var _material4=originalMaterials.get(pointcloud);var depthMaterial=this.depthMaterials.get(pointcloud);depthMaterial.size=_material4.size;depthMaterial.minSize=_material4.minSize;depthMaterial.maxSize=_material4.maxSize;depthMaterial.pointSizeType=_material4.pointSizeType;depthMaterial.visibleNodesTexture=_material4.visibleNodesTexture;depthMaterial.weighted=false;depthMaterial.screenWidth=width;depthMaterial.shape=Potree.PointShape.CIRCLE;depthMaterial.screenHeight=height;depthMaterial.uniforms.visibleNodes.value=_material4.visibleNodesTexture;depthMaterial.uniforms.octreeSize.value=octreeSize;depthMaterial.spacing=pointcloud.pcoGeometry.spacing*Math.max.apply(Math,_toConsumableArray(pointcloud.scale.toArray()));depthMaterial.classification=_material4.classification;depthMaterial.clipTask=_material4.clipTask;depthMaterial.clipMethod=_material4.clipMethod;depthMaterial.setClipBoxes(_material4.clipBoxes);depthMaterial.setClipPolygons(_material4.clipPolygons);pointcloud.material=depthMaterial;}}catch(err){_didIteratorError102=true;_iteratorError102=err;}finally{try{if(!_iteratorNormalCompletion102&&_iterator102.return){_iterator102.return();}}finally{if(_didIteratorError102){throw _iteratorError102;}}}viewer.pRenderer.render(viewer.scene.scenePointCloud,camera,this.rtDepth,{//material: this.depthMaterial
        });}{// ATTRIBUTE PASS
        var _iteratorNormalCompletion103=true;var _didIteratorError103=false;var _iteratorError103=undefined;try{for(var _iterator103=visiblePointClouds[Symbol.iterator](),_step103;!(_iteratorNormalCompletion103=(_step103=_iterator103.next()).done);_iteratorNormalCompletion103=true){var _pointcloud6=_step103.value;var _octreeSize=_pointcloud6.pcoGeometry.boundingBox.getSize().x;var _material5=originalMaterials.get(_pointcloud6);var attributeMaterial=this.attributeMaterials.get(_pointcloud6);attributeMaterial.size=_material5.size;attributeMaterial.minSize=_material5.minSize;attributeMaterial.maxSize=_material5.maxSize;attributeMaterial.pointSizeType=_material5.pointSizeType;attributeMaterial.pointColorType=_material5.pointColorType;attributeMaterial.visibleNodesTexture=_material5.visibleNodesTexture;attributeMaterial.weighted=true;attributeMaterial.screenWidth=width;attributeMaterial.screenHeight=height;attributeMaterial.shape=Potree.PointShape.CIRCLE;attributeMaterial.uniforms.visibleNodes.value=_material5.visibleNodesTexture;attributeMaterial.uniforms.octreeSize.value=_octreeSize;attributeMaterial.spacing=_pointcloud6.pcoGeometry.spacing*Math.max.apply(Math,_toConsumableArray(_pointcloud6.scale.toArray()));attributeMaterial.classification=_material5.classification;attributeMaterial.elevationRange=_material5.elevationRange;attributeMaterial.gradient=_material5.gradient;attributeMaterial.intensityRange=_material5.intensityRange;attributeMaterial.intensityGamma=_material5.intensityGamma;attributeMaterial.intensityContrast=_material5.intensityContrast;attributeMaterial.intensityBrightness=_material5.intensityBrightness;attributeMaterial.rgbGamma=_material5.rgbGamma;attributeMaterial.rgbContrast=_material5.rgbContrast;attributeMaterial.rgbBrightness=_material5.rgbBrightness;attributeMaterial.weightRGB=_material5.weightRGB;attributeMaterial.weightIntensity=_material5.weightIntensity;attributeMaterial.weightElevation=_material5.weightElevation;attributeMaterial.weightRGB=_material5.weightRGB;attributeMaterial.weightClassification=_material5.weightClassification;attributeMaterial.weightReturnNumber=_material5.weightReturnNumber;attributeMaterial.weightSourceID=_material5.weightSourceID;attributeMaterial.color=_material5.color;attributeMaterial.clipTask=_material5.clipTask;attributeMaterial.clipMethod=_material5.clipMethod;attributeMaterial.setClipBoxes(_material5.clipBoxes);attributeMaterial.setClipPolygons(_material5.clipPolygons);_pointcloud6.material=attributeMaterial;}}catch(err){_didIteratorError103=true;_iteratorError103=err;}finally{try{if(!_iteratorNormalCompletion103&&_iterator103.return){_iterator103.return();}}finally{if(_didIteratorError103){throw _iteratorError103;}}}var gl=this.gl;viewer.renderer.setRenderTarget(null);viewer.pRenderer.render(viewer.scene.scenePointCloud,camera,this.rtAttribute,{//material: this.attributeMaterial,
            blendFunc:[gl.SRC_ALPHA,gl.ONE],//depthTest: false,
            depthWrite:false});}var _iteratorNormalCompletion104=true;var _didIteratorError104=false;var _iteratorError104=undefined;try{for(var _iterator104=originalMaterials[Symbol.iterator](),_step104;!(_iteratorNormalCompletion104=(_step104=_iterator104.next()).done);_iteratorNormalCompletion104=true){var _step104$value=_slicedToArray(_step104.value,2),_pointcloud8=_step104$value[0],_material6=_step104$value[1];_pointcloud8.material=_material6;}}catch(err){_didIteratorError104=true;_iteratorError104=err;}finally{try{if(!_iteratorNormalCompletion104&&_iterator104.return){_iterator104.return();}}finally{if(_didIteratorError104){throw _iteratorError104;}}}viewer.renderer.setRenderTarget(null);if(viewer.background==="skybox"){viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();viewer.skybox.camera.rotation.copy(viewer.scene.cameraP.rotation);viewer.skybox.camera.fov=viewer.scene.cameraP.fov;viewer.skybox.camera.aspect=viewer.scene.cameraP.aspect;viewer.skybox.camera.updateProjectionMatrix();viewer.renderer.render(viewer.skybox.scene,viewer.skybox.camera);}else if(viewer.background==='gradient'){viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();viewer.renderer.render(viewer.scene.sceneBG,viewer.scene.cameraBG);}else if(viewer.background==='black'){viewer.renderer.setClearColor(0x000000,1);viewer.renderer.clear();}else if(viewer.background==='white'){viewer.renderer.setClearColor(0xFFFFFF,1);viewer.renderer.clear();}else{viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();}{// NORMALIZATION PASS
        var normalizationMaterial=this.useEDL?this.normalizationEDLMaterial:this.normalizationMaterial;if(this.useEDL){normalizationMaterial.uniforms.edlStrength.value=viewer.edlStrength;normalizationMaterial.uniforms.radius.value=viewer.edlRadius;normalizationMaterial.uniforms.screenWidth.value=width;normalizationMaterial.uniforms.screenHeight.value=height;normalizationMaterial.uniforms.uEDLMap.value=this.rtDepth.texture;}normalizationMaterial.uniforms.uWeightMap.value=this.rtAttribute.texture;normalizationMaterial.uniforms.uDepthMap.value=this.rtAttribute.depthTexture;Potree.utils.screenPass.render(viewer.renderer,normalizationMaterial);}viewer.renderer.render(viewer.scene.scene,camera);viewer.dispatchEvent({type:"render.pass.scene",viewer:viewer});Potree.endQuery(queryHQSplats,viewer.renderer.getContext());viewer.renderer.clearDepth();viewer.transformationTool.update();viewer.dispatchEvent({type:"render.pass.perspective_overlay",viewer:viewer});viewer.renderer.render(viewer.controls.sceneControls,camera);viewer.renderer.render(viewer.clippingTool.sceneVolume,camera);viewer.renderer.render(viewer.transformationTool.scene,camera);viewer.renderer.setViewport(width-viewer.navigationCube.width,height-viewer.navigationCube.width,viewer.navigationCube.width,viewer.navigationCube.width);viewer.renderer.render(viewer.navigationCube,viewer.navigationCube.camera);viewer.renderer.setViewport(0,0,width,height);viewer.dispatchEvent({type:"render.pass.end",viewer:viewer});}}]);return HQSplatRenderer;}();;var RepSnapshot=function RepSnapshot(){_classCallCheck(this,RepSnapshot);this.target=null;this.camera=null;};;var RepRenderer=function(){function RepRenderer(viewer){_classCallCheck(this,RepRenderer);this.viewer=viewer;this.edlMaterial=null;this.attributeMaterials=[];this.rtColor=null;this.gl=viewer.renderer.context;this.initEDL=this.initEDL.bind(this);this.resize=this.resize.bind(this);this.render=this.render.bind(this);this.snapshotRequested=false;this.disableSnapshots=false;this.snap={target:null,matrix:null};this.history={maxSnapshots:10,snapshots:[],version:0};}_createClass(RepRenderer,[{key:'initEDL',value:function initEDL(){if(this.edlMaterial!=null){return;}// let depthTextureExt = gl.getExtension("WEBGL_depth_texture");
        this.edlMaterial=new Potree.EyeDomeLightingMaterial();this.rtColor=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType});this.rtColor.depthTexture=new THREE.DepthTexture();this.rtColor.depthTexture.type=THREE.UnsignedIntType;this.rtShadow=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.FloatType});this.rtShadow.depthTexture=new THREE.DepthTexture();this.rtShadow.depthTexture.type=THREE.UnsignedIntType;//{
//	let geometry = new THREE.PlaneBufferGeometry( 20, 20, 32 );
//	let material = new THREE.MeshBasicMaterial( {side: THREE.DoubleSide, map: this.snap.target.texture} );
//	let plane = new THREE.Mesh( geometry, material );
//	plane.position.z = 0.2;
//	plane.position.y = -1;
//	this.viewer.scene.scene.add( plane );
//	this.debugPlane = plane;
//}
    }},{key:'resize',value:function resize(){var width=this.viewer.scaleFactor*this.viewer.renderArea.clientWidth;var height=this.viewer.scaleFactor*this.viewer.renderArea.clientHeight;var aspect=width/height;var needsResize=this.rtColor.width!==width||this.rtColor.height!==height;// disposal will be unnecessary once this fix made it into three.js master:
// https://github.com/mrdoob/three.js/pull/6355
        if(needsResize){this.rtColor.dispose();}viewer.scene.cameraP.aspect=aspect;viewer.scene.cameraP.updateProjectionMatrix();var frustumScale=viewer.moveSpeed*2.0;viewer.scene.cameraO.left=-frustumScale;viewer.scene.cameraO.right=frustumScale;viewer.scene.cameraO.top=frustumScale*1/aspect;viewer.scene.cameraO.bottom=-frustumScale*1/aspect;viewer.scene.cameraO.updateProjectionMatrix();viewer.scene.cameraScreenSpace.top=1/aspect;viewer.scene.cameraScreenSpace.bottom=-1/aspect;viewer.scene.cameraScreenSpace.updateProjectionMatrix();viewer.renderer.setSize(width,height);this.rtColor.setSize(width,height);}},{key:'makeSnapshot',value:function makeSnapshot(){this.snapshotRequested=true;}},{key:'render',value:function render(){this.initEDL();var viewer=this.viewer;this.resize();var camera=viewer.scene.getActiveCamera();var query=Potree.startQuery('stuff',viewer.renderer.getContext());if(viewer.background==="skybox"){viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();viewer.skybox.camera.rotation.copy(viewer.scene.cameraP.rotation);viewer.skybox.camera.fov=viewer.scene.cameraP.fov;viewer.skybox.camera.aspect=viewer.scene.cameraP.aspect;viewer.skybox.camera.updateProjectionMatrix();viewer.renderer.render(viewer.skybox.scene,viewer.skybox.camera);}else if(viewer.background==='gradient'){viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();viewer.renderer.render(viewer.scene.sceneBG,viewer.scene.cameraBG);}else if(viewer.background==='black'){viewer.renderer.setClearColor(0x000000,0);viewer.renderer.clear();}else if(viewer.background==='white'){viewer.renderer.setClearColor(0xFFFFFF,0);viewer.renderer.clear();}viewer.transformationTool.update();viewer.renderer.render(viewer.scene.scene,camera);viewer.renderer.clearTarget(this.rtShadow,true,true,true);viewer.renderer.clearTarget(this.rtColor,true,true,true);var width=viewer.renderArea.clientWidth;var height=viewer.renderArea.clientHeight;// COLOR & DEPTH PASS
        var _iteratorNormalCompletion105=true;var _didIteratorError105=false;var _iteratorError105=undefined;try{for(var _iterator105=viewer.scene.pointclouds[Symbol.iterator](),_step105;!(_iteratorNormalCompletion105=(_step105=_iterator105.next()).done);_iteratorNormalCompletion105=true){var pointcloud=_step105.value;var octreeSize=pointcloud.pcoGeometry.boundingBox.getSize().x;var _material7=pointcloud.material;_material7.weighted=false;_material7.useLogarithmicDepthBuffer=false;_material7.useEDL=true;_material7.screenWidth=width;_material7.screenHeight=height;_material7.uniforms.visibleNodes.value=pointcloud.material.visibleNodesTexture;_material7.uniforms.octreeSize.value=octreeSize;_material7.spacing=pointcloud.pcoGeometry.spacing*Math.max(pointcloud.scale.x,pointcloud.scale.y,pointcloud.scale.z);}}catch(err){_didIteratorError105=true;_iteratorError105=err;}finally{try{if(!_iteratorNormalCompletion105&&_iterator105.return){_iterator105.return();}}finally{if(_didIteratorError105){throw _iteratorError105;}}}viewer.shadowTestCam.updateMatrixWorld();viewer.shadowTestCam.matrixWorldInverse.getInverse(viewer.shadowTestCam.matrixWorld);viewer.shadowTestCam.updateProjectionMatrix();Potree.endQuery(query,viewer.renderer.getContext());//viewer.pRenderer.render(viewer.scene.scenePointCloud, viewer.shadowTestCam, this.rtShadow);
        if(!this.disableSnapshots){this.snapshotRequested=false;var _query=Potree.startQuery('create snapshot',viewer.renderer.getContext());var snap=void 0;if(this.history.snapshots.length<this.history.maxSnapshots){snap=new RepSnapshot();snap.target=new THREE.WebGLRenderTarget(1024,1024,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat//type: THREE.FloatType
        });snap.target.depthTexture=new THREE.DepthTexture();snap.target.depthTexture.type=THREE.UnsignedIntType;}else{snap=this.history.snapshots.pop();}{// resize
            var _width=viewer.scaleFactor*viewer.renderArea.clientWidth;var _height=viewer.scaleFactor*viewer.renderArea.clientHeight;var aspect=_width/_height;var needsResize=snap.target.width!==_width||snap.target.height!==_height;if(needsResize){snap.target.dispose();}snap.target.setSize(_width,_height);}viewer.renderer.clearTarget(snap.target,true,true,true);viewer.renderer.setRenderTarget(snap.target);var _iteratorNormalCompletion106=true;var _didIteratorError106=false;var _iteratorError106=undefined;try{for(var _iterator106=viewer.scene.pointclouds[Symbol.iterator](),_step106;!(_iteratorNormalCompletion106=(_step106=_iterator106.next()).done);_iteratorNormalCompletion106=true){var octree=_step106.value;octree.material.snapEnabled=false;octree.material.needsUpdate=true;var from=this.history.version*(octree.visibleNodes.length/this.history.maxSnapshots);var to=(this.history.version+1)*(octree.visibleNodes.length/this.history.maxSnapshots);// DEBUG!!!
//let from = 0;
//let to = 20;
            var nodes=octree.visibleNodes.slice(from,to);viewer.pRenderer.renderOctree(octree,nodes,camera,snap.target,{vnTextureNodes:nodes});}}catch(err){_didIteratorError106=true;_iteratorError106=err;}finally{try{if(!_iteratorNormalCompletion106&&_iterator106.return){_iterator106.return();}}finally{if(_didIteratorError106){throw _iteratorError106;}}}snap.camera=camera.clone();this.history.version=(this.history.version+1)%this.history.maxSnapshots;if(this.debugPlane){this.debugPlane.material.map=snap.target.texture;}this.history.snapshots.unshift(snap);Potree.endQuery(_query,viewer.renderer.getContext());}{var _query2=Potree.startQuery('render snapshots',viewer.renderer.getContext());viewer.renderer.clearTarget(this.rtColor,true,true,true);viewer.renderer.setRenderTarget(this.rtColor);var _iteratorNormalCompletion107=true;var _didIteratorError107=false;var _iteratorError107=undefined;try{for(var _iterator107=viewer.scene.pointclouds[Symbol.iterator](),_step107;!(_iteratorNormalCompletion107=(_step107=_iterator107.next()).done);_iteratorNormalCompletion107=true){var _octree=_step107.value;if(!this.disableSnapshots){_octree.material.snapEnabled=true;_octree.material.numSnapshots=this.history.maxSnapshots;_octree.material.needsUpdate=true;var uniforms=_octree.material.uniforms;if(this.history.snapshots.length===this.history.maxSnapshots){uniforms['uSnapshot'].value=this.history.snapshots.map(function(s){return s.target.texture;});uniforms['uSnapshotDepth'].value=this.history.snapshots.map(function(s){return s.target.depthTexture;});uniforms['uSnapView'].value=this.history.snapshots.map(function(s){return s.camera.matrixWorldInverse;});uniforms['uSnapProj'].value=this.history.snapshots.map(function(s){return s.camera.projectionMatrix;});uniforms['uSnapProjInv'].value=this.history.snapshots.map(function(s){return new THREE.Matrix4().getInverse(s.camera.projectionMatrix);});uniforms['uSnapViewInv'].value=this.history.snapshots.map(function(s){return new THREE.Matrix4().getInverse(s.camera.matrixWorld);});}}else{_octree.material.snapEnabled=false;_octree.material.needsUpdate=true;}var _nodes=_octree.visibleNodes.slice(0,50);//let nodes = octree.visibleNodes;
            viewer.pRenderer.renderOctree(_octree,_nodes,camera,this.rtColor,{vnTextureNodes:_nodes});if(!this.disableSnapshots){_octree.material.snapEnabled=false;_octree.material.needsUpdate=false;}}}catch(err){_didIteratorError107=true;_iteratorError107=err;}finally{try{if(!_iteratorNormalCompletion107&&_iterator107.return){_iterator107.return();}}finally{if(_didIteratorError107){throw _iteratorError107;}}}Potree.endQuery(_query2,viewer.renderer.getContext());}//viewer.pRenderer.render(viewer.scene.scenePointCloud, camera, this.rtColor, {
//	shadowMaps: [{map: this.rtShadow, camera: viewer.shadowTestCam}]
//});
//viewer.renderer.render(viewer.scene.scene, camera, this.rtColor);
        {// EDL OCCLUSION PASS
            var _query3=Potree.startQuery('EDL',viewer.renderer.getContext());this.edlMaterial.uniforms.screenWidth.value=width;this.edlMaterial.uniforms.screenHeight.value=height;this.edlMaterial.uniforms.colorMap.value=this.rtColor.texture;this.edlMaterial.uniforms.edlStrength.value=viewer.edlStrength;this.edlMaterial.uniforms.radius.value=viewer.edlRadius;this.edlMaterial.uniforms.opacity.value=1;this.edlMaterial.depthTest=true;this.edlMaterial.depthWrite=true;this.edlMaterial.transparent=true;Potree.utils.screenPass.render(viewer.renderer,this.edlMaterial);Potree.endQuery(_query3,viewer.renderer.getContext());}viewer.renderer.clearDepth();viewer.renderer.render(viewer.controls.sceneControls,camera);viewer.renderer.render(viewer.clippingTool.sceneVolume,camera);viewer.renderer.render(viewer.transformationTool.scene,camera);viewer.renderer.setViewport(viewer.renderer.domElement.clientWidth-viewer.navigationCube.width,viewer.renderer.domElement.clientHeight-viewer.navigationCube.width,viewer.navigationCube.width,viewer.navigationCube.width);viewer.renderer.render(viewer.navigationCube,viewer.navigationCube.camera);viewer.renderer.setViewport(0,0,viewer.renderer.domElement.clientWidth,viewer.renderer.domElement.clientHeight);//
    }}]);return RepRenderer;}();;Potree.View=function(){function _class12(){_classCallCheck(this,_class12);this.position=new THREE.Vector3(0,0,0);this.yaw=Math.PI/4;this._pitch=-Math.PI/4;this.radius=1;this.maxPitch=Math.PI/2;this.minPitch=-Math.PI/2;this.navigationMode=Potree.OrbitControls;}_createClass(_class12,[{key:'clone',value:function clone(){var c=new Potree.View();c.yaw=this.yaw;c._pitch=this.pitch;c.radius=this.radius;c.maxPitch=this.maxPitch;c.minPitch=this.minPitch;c.navigationMode=this.navigationMode;return c;}},{key:'lookAt',value:function lookAt(t){var V=void 0;if(arguments.length===1){V=new THREE.Vector3().subVectors(t,this.position);}else if(arguments.length===3){V=new THREE.Vector3().subVectors(new(Function.prototype.bind.apply(THREE.Vector3,[null].concat(Array.prototype.slice.call(arguments))))(),this.position);}var radius=V.length();var dir=V.normalize();this.radius=radius;this.direction=dir;}},{key:'getPivot',value:function getPivot(){return new THREE.Vector3().addVectors(this.position,this.direction.multiplyScalar(this.radius));}},{key:'getSide',value:function getSide(){var side=new THREE.Vector3(1,0,0);side.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);return side;}},{key:'pan',value:function pan(x,y){var dir=new THREE.Vector3(0,1,0);dir.applyAxisAngle(new THREE.Vector3(1,0,0),this.pitch);dir.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);// let side = new THREE.Vector3(1, 0, 0);
// side.applyAxisAngle(new THREE.Vector3(0, 0, 1), this.yaw);
        var side=this.getSide();var up=side.clone().cross(dir);var pan=side.multiplyScalar(x).add(up.multiplyScalar(y));this.position=this.position.add(pan);// this.target = this.target.add(pan);
    }},{key:'translate',value:function translate(x,y,z){var dir=new THREE.Vector3(0,1,0);dir.applyAxisAngle(new THREE.Vector3(1,0,0),this.pitch);dir.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);var side=new THREE.Vector3(1,0,0);side.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);var up=side.clone().cross(dir);var t=side.multiplyScalar(x).add(dir.multiplyScalar(y)).add(up.multiplyScalar(z));this.position=this.position.add(t);}},{key:'translateWorld',value:function translateWorld(x,y,z){this.position.x+=x;this.position.y+=y;this.position.z+=z;}},{key:'pitch',get:function get(){return this._pitch;},set:function set(angle){this._pitch=Math.max(Math.min(angle,this.maxPitch),this.minPitch);}},{key:'direction',get:function get(){var dir=new THREE.Vector3(0,1,0);dir.applyAxisAngle(new THREE.Vector3(1,0,0),this.pitch);dir.applyAxisAngle(new THREE.Vector3(0,0,1),this.yaw);return dir;},set:function set(dir){//if(dir.x === dir.y){
        if(dir.x===0&&dir.y===0){this.pitch=Math.PI/2*Math.sign(dir.z);}else{var yaw=Math.atan2(dir.y,dir.x)-Math.PI/2;var pitch=Math.atan2(dir.z,Math.sqrt(dir.x*dir.x+dir.y*dir.y));this.yaw=yaw;this.pitch=pitch;}}}]);return _class12;}();Potree.Scene=function(_THREE$EventDispatche14){_inherits(_class13,_THREE$EventDispatche14);function _class13(){_classCallCheck(this,_class13);var _this64=_possibleConstructorReturn(this,(_class13.__proto__||Object.getPrototypeOf(_class13)).call(this));_this64.annotations=new Potree.Annotation();_this64.scene=new THREE.Scene();_this64.sceneBG=new THREE.Scene();_this64.scenePointCloud=new THREE.Scene();_this64.cameraP=new THREE.PerspectiveCamera(_this64.fov,1,0.1,1000*1000);_this64.cameraO=new THREE.OrthographicCamera(-1,1,1,-1,0.1,1000*1000);_this64.cameraBG=new THREE.Camera();_this64.cameraScreenSpace=new THREE.OrthographicCamera(-1,1,1,-1,0.1,10);_this64.cameraMode=Potree.CameraMode.PERSPECTIVE;_this64.pointclouds=[];_this64.measurements=[];_this64.profiles=[];_this64.volumes=[];_this64.polygonClipVolumes=[];_this64.fpControls=null;_this64.orbitControls=null;_this64.earthControls=null;_this64.geoControls=null;_this64.inputHandler=null;_this64.view=new Potree.View();_this64.directionalLight=null;_this64.initialize();return _this64;}_createClass(_class13,[{key:'estimateHeightAt',value:function estimateHeightAt(position){var height=null;var fromSpacing=Infinity;var _iteratorNormalCompletion108=true;var _didIteratorError108=false;var _iteratorError108=undefined;try{for(var _iterator108=this.pointclouds[Symbol.iterator](),_step108;!(_iteratorNormalCompletion108=(_step108=_iterator108.next()).done);_iteratorNormalCompletion108=true){var pointcloud=_step108.value;if(pointcloud.root.geometryNode===undefined){continue;}var pHeight=null;var pFromSpacing=Infinity;var lpos=position.clone().sub(pointcloud.position);lpos.z=0;var ray=new THREE.Ray(lpos,new THREE.Vector3(0,0,1));var stack=[pointcloud.root];while(stack.length>0){var _node23=stack.pop();var _box=_node23.getBoundingBox();var inside=ray.intersectBox(_box);if(!inside){continue;}var h=_node23.geometryNode.mean.z+pointcloud.position.z+_node23.geometryNode.boundingBox.min.z;if(_node23.geometryNode.spacing<=pFromSpacing){pHeight=h;pFromSpacing=_node23.geometryNode.spacing;}var _iteratorNormalCompletion109=true;var _didIteratorError109=false;var _iteratorError109=undefined;try{for(var _iterator109=Object.keys(_node23.children)[Symbol.iterator](),_step109;!(_iteratorNormalCompletion109=(_step109=_iterator109.next()).done);_iteratorNormalCompletion109=true){var index=_step109.value;var child=_node23.children[index];if(child.geometryNode){stack.push(_node23.children[index]);}}}catch(err){_didIteratorError109=true;_iteratorError109=err;}finally{try{if(!_iteratorNormalCompletion109&&_iterator109.return){_iterator109.return();}}finally{if(_didIteratorError109){throw _iteratorError109;}}}}if(height===null||pFromSpacing<fromSpacing){height=pHeight;fromSpacing=pFromSpacing;}}}catch(err){_didIteratorError108=true;_iteratorError108=err;}finally{try{if(!_iteratorNormalCompletion108&&_iterator108.return){_iterator108.return();}}finally{if(_didIteratorError108){throw _iteratorError108;}}}return height;}},{key:'getBoundingBox',value:function getBoundingBox(){var pointclouds=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.pointclouds;var box=new THREE.Box3();this.scenePointCloud.updateMatrixWorld(true);this.referenceFrame.updateMatrixWorld(true);var _iteratorNormalCompletion110=true;var _didIteratorError110=false;var _iteratorError110=undefined;try{for(var _iterator110=pointclouds[Symbol.iterator](),_step110;!(_iteratorNormalCompletion110=(_step110=_iterator110.next()).done);_iteratorNormalCompletion110=true){var pointcloud=_step110.value;pointcloud.updateMatrixWorld(true);var pointcloudBox=pointcloud.pcoGeometry.tightBoundingBox?pointcloud.pcoGeometry.tightBoundingBox:pointcloud.boundingBox;var boxWorld=Potree.utils.computeTransformedBoundingBox(pointcloudBox,pointcloud.matrixWorld);box.union(boxWorld);}}catch(err){_didIteratorError110=true;_iteratorError110=err;}finally{try{if(!_iteratorNormalCompletion110&&_iterator110.return){_iterator110.return();}}finally{if(_didIteratorError110){throw _iteratorError110;}}}return box;}},{key:'addPointCloud',value:function addPointCloud(pointcloud){this.pointclouds.push(pointcloud);this.scenePointCloud.add(pointcloud);this.dispatchEvent({type:'pointcloud_added',pointcloud:pointcloud});}},{key:'addVolume',value:function addVolume(volume){this.volumes.push(volume);this.dispatchEvent({'type':'volume_added','scene':this,'volume':volume});}},{key:'removeVolume',value:function removeVolume(volume){var index=this.volumes.indexOf(volume);if(index>-1){this.volumes.splice(index,1);this.dispatchEvent({'type':'volume_removed','scene':this,'volume':volume});}}},{key:'addPolygonClipVolume',value:function addPolygonClipVolume(volume){this.polygonClipVolumes.push(volume);this.dispatchEvent({"type":"polygon_clip_volume_added","scene":this,"volume":volume});}},{key:'removePolygonClipVolume',value:function removePolygonClipVolume(volume){var index=this.polygonClipVolumes.indexOf(volume);if(index>-1){this.polygonClipVolumes.splice(index,1);this.dispatchEvent({"type":"polygon_clip_volume_removed","scene":this,"volume":volume});}}},{key:'addMeasurement',value:function addMeasurement(measurement){measurement.lengthUnit=this.lengthUnit;this.measurements.push(measurement);this.dispatchEvent({'type':'measurement_added','scene':this,'measurement':measurement});}},{key:'removeMeasurement',value:function removeMeasurement(measurement){var index=this.measurements.indexOf(measurement);if(index>-1){this.measurements.splice(index,1);this.dispatchEvent({'type':'measurement_removed','scene':this,'measurement':measurement});}}},{key:'addProfile',value:function addProfile(profile){this.profiles.push(profile);this.dispatchEvent({'type':'profile_added','scene':this,'profile':profile});}},{key:'removeProfile',value:function removeProfile(profile){var index=this.profiles.indexOf(profile);if(index>-1){this.profiles.splice(index,1);this.dispatchEvent({'type':'profile_removed','scene':this,'profile':profile});}}},{key:'removeAllMeasurements',value:function removeAllMeasurements(){while(this.measurements.length>0){this.removeMeasurement(this.measurements[0]);}while(this.profiles.length>0){this.removeProfile(this.profiles[0]);}while(this.volumes.length>0){this.removeVolume(this.volumes[0]);}}},{key:'removeAllClipVolumes',value:function removeAllClipVolumes(){var clipVolumes=this.volumes.filter(function(volume){return volume.clip===true;});var _iteratorNormalCompletion111=true;var _didIteratorError111=false;var _iteratorError111=undefined;try{for(var _iterator111=clipVolumes[Symbol.iterator](),_step111;!(_iteratorNormalCompletion111=(_step111=_iterator111.next()).done);_iteratorNormalCompletion111=true){var clipVolume=_step111.value;this.removeVolume(clipVolume);}}catch(err){_didIteratorError111=true;_iteratorError111=err;}finally{try{if(!_iteratorNormalCompletion111&&_iterator111.return){_iterator111.return();}}finally{if(_didIteratorError111){throw _iteratorError111;}}}while(this.polygonClipVolumes.length>0){this.removePolygonClipVolume(this.polygonClipVolumes[0]);}}},{key:'getActiveCamera',value:function getActiveCamera(){return this.cameraMode==Potree.CameraMode.PERSPECTIVE?this.cameraP:this.cameraO;}},{key:'initialize',value:function initialize(){this.referenceFrame=new THREE.Object3D();this.referenceFrame.matrixAutoUpdate=false;this.scenePointCloud.add(this.referenceFrame);this.cameraP.up.set(0,0,1);this.cameraP.position.set(1000,1000,1000);this.cameraO.up.set(0,0,1);this.cameraO.position.set(1000,1000,1000);//this.camera.rotation.y = -Math.PI / 4;
//this.camera.rotation.x = -Math.PI / 6;
        this.cameraScreenSpace.lookAt(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0));this.directionalLight=new THREE.DirectionalLight(0xffffff,0.5);this.directionalLight.position.set(10,10,10);this.directionalLight.lookAt(new THREE.Vector3(0,0,0));this.scenePointCloud.add(this.directionalLight);var light=new THREE.AmbientLight(0x555555);// soft white light
        this.scenePointCloud.add(light);//let grid = Potree.utils.createGrid(5, 5, 2);
//this.scene.add(grid);
        {// background
            var texture=Potree.utils.createBackgroundTexture(512,512);texture.minFilter=texture.magFilter=THREE.NearestFilter;texture.minFilter=texture.magFilter=THREE.LinearFilter;var bg=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,0),new THREE.MeshBasicMaterial({map:texture}));bg.material.depthTest=false;bg.material.depthWrite=false;this.sceneBG.add(bg);}{// lights
            {var _light2=new THREE.DirectionalLight(0xffffff);_light2.position.set(10,10,1);_light2.target.position.set(0,0,0);this.scene.add(_light2);}{var _light3=new THREE.DirectionalLight(0xffffff);_light3.position.set(-10,10,1);_light3.target.position.set(0,0,0);this.scene.add(_light3);}{var _light4=new THREE.DirectionalLight(0xffffff);_light4.position.set(0,-10,20);_light4.target.position.set(0,0,0);this.scene.add(_light4);}}}},{key:'addAnnotation',value:function addAnnotation(position){var args=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};if(position instanceof Array){args.position=new THREE.Vector3().fromArray(position);}else if(position instanceof THREE.Vector3){args.position=position;}var annotation=new Potree.Annotation(args);this.annotations.add(annotation);return annotation;}},{key:'getAnnotations',value:function getAnnotations(){return this.annotations;}},{key:'removeAnnotation',value:function removeAnnotation(annotationToRemove){this.annotations.remove(annotationToRemove);}}]);return _class13;}(THREE.EventDispatcher);Potree.Viewer=function(_THREE$EventDispatche15){_inherits(PotreeViewer,_THREE$EventDispatche15);function PotreeViewer(domElement){var args=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,PotreeViewer);var _this65=_possibleConstructorReturn(this,(PotreeViewer.__proto__||Object.getPrototypeOf(PotreeViewer)).call(this));_this65.renderArea=domElement;_this65.guiLoaded=false;_this65.guiLoadTasks=[];_this65.messages=[];_this65.elMessages=$('\n\t\t<div id="message_listing" \n\t\t\tstyle="position: absolute; z-index: 1000; left: 10px; bottom: 10px">\n\t\t</div>');$(domElement).append(_this65.elMessages);try{{// generate missing dom hierarchy
    if($(domElement).find('#potree_map').length===0){var potreeMap=$('\n\t\t\t\t\t<div id="potree_map" class="mapBox" style="position: absolute; left: 50px; top: 50px; width: 400px; height: 400px; display: none">\n\t\t\t\t\t\t<div id="potree_map_header" style="position: absolute; width: 100%; height: 25px; top: 0px; background-color: rgba(0,0,0,0.5); z-index: 1000; border-top-left-radius: 3px; border-top-right-radius: 3px;">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id="potree_map_content" class="map" style="position: absolute; z-index: 100; top: 25px; width: 100%; height: calc(100% - 25px); border: 2px solid rgba(0,0,0,0.5); box-sizing: border-box;"></div>\n\t\t\t\t\t</div>\n\t\t\t\t');$(domElement).append(potreeMap);}if($(domElement).find('#potree_description').length===0){var potreeDescription=$('<div id="potree_description" class="potree_info_text"></div>');$(domElement).append(potreeDescription);}if($(domElement).find('#potree_annotations').length===0){var potreeAnnotationContainer=$('\n\t\t\t\t\t<div id="potree_annotation_container" \n\t\t\t\t\t\tstyle="position: absolute; z-index: 100000; width: 100%; height: 100%; pointer-events: none;"></div>');$(domElement).append(potreeAnnotationContainer);}}_this65.pointCloudLoadedCallback=args.onPointCloudLoaded||function(){};// if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
//	defaultSettings.navigation = "Orbit";
// }
    _this65.server=null;_this65.fov=60;_this65.isFlipYZ=false;_this65.useDEMCollisions=false;_this65.generateDEM=false;_this65.minNodeSize=30;_this65.edlStrength=1.0;_this65.edlRadius=1.4;_this65.useEDL=false;_this65.classifications={0:{visible:true,name:'never classified'},1:{visible:true,name:'unclassified'},2:{visible:true,name:'ground'},3:{visible:true,name:'low vegetation'},4:{visible:true,name:'medium vegetation'},5:{visible:true,name:'high vegetation'},6:{visible:true,name:'building'},7:{visible:true,name:'low point(noise)'},8:{visible:true,name:'key-point'},9:{visible:true,name:'water'},12:{visible:true,name:'overlap'}};_this65.moveSpeed=10;_this65.LENGTH_UNITS={METER:{code:'m'},FEET:{code:'ft'},INCH:{code:'\u2033'}};_this65.lengthUnit=_this65.LENGTH_UNITS.METER;_this65.showBoundingBox=false;_this65.showAnnotations=true;_this65.freeze=false;_this65.clipTask=Potree.ClipTask.HIGHLIGHT;_this65.clipMethod=Potree.ClipMethod.INSIDE_ANY;_this65.potreeRenderer=null;_this65.edlRenderer=null;_this65.renderer=null;_this65.pRenderer=null;_this65.scene=null;_this65.overlay=null;_this65.overlayCamera=null;_this65.inputHandler=null;_this65.clippingTool=null;_this65.transformationTool=null;_this65.navigationCube=null;_this65.skybox=null;_this65.clock=new THREE.Clock();_this65.background=null;_this65.initThree();{_this65.overlay=new THREE.Scene();_this65.overlayCamera=new THREE.OrthographicCamera(0,1,1,0,-1000,1000);}_this65.pRenderer=new Potree.Renderer(_this65.renderer);{var near=2.5;var far=10.0;var fov=90;_this65.shadowTestCam=new THREE.PerspectiveCamera(90,1,near,far);_this65.shadowTestCam.position.set(3.50,-2.80,8.561);_this65.shadowTestCam.lookAt(new THREE.Vector3(0,0,4.87));}var scene=new Potree.Scene(_this65.renderer);_this65.setScene(scene);{_this65.inputHandler=new Potree.InputHandler(_this65);_this65.inputHandler.setScene(_this65.scene);_this65.clippingTool=new Potree.ClippingTool(_this65);_this65.transformationTool=new Potree.TransformationTool(_this65);_this65.navigationCube=new Potree.NavigationCube(_this65);_this65.navigationCube.visible=false;_this65.createControls();_this65.clippingTool.setScene(_this65.scene);var onPointcloudAdded=function onPointcloudAdded(e){if(_this65.scene.pointclouds.length===1){var speed=e.pointcloud.boundingBox.getSize().length();speed=speed/5;_this65.setMoveSpeed(speed);}};var onVolumeRemoved=function onVolumeRemoved(e){_this65.inputHandler.deselect(e.volume);};_this65.addEventListener('scene_changed',function(e){_this65.inputHandler.setScene(e.scene);_this65.clippingTool.setScene(_this65.scene);if(!e.scene.hasEventListener("pointcloud_added",onPointcloudAdded)){e.scene.addEventListener("pointcloud_added",onPointcloudAdded);}if(!e.scene.hasEventListener("volume_removed",onPointcloudAdded)){e.scene.addEventListener("volume_removed",onVolumeRemoved);}});_this65.scene.addEventListener("volume_removed",onVolumeRemoved);_this65.scene.addEventListener('pointcloud_added',onPointcloudAdded);}{// set defaults
        _this65.setFOV(60);_this65.setEDLEnabled(false);_this65.setEDLRadius(1.4);_this65.setEDLStrength(0.4);_this65.setClipTask(Potree.ClipTask.HIGHLIGHT);_this65.setClipMethod(Potree.ClipMethod.INSIDE_ANY);_this65.setPointBudget(1*1000*1000);_this65.setShowBoundingBox(false);_this65.setFreeze(false);_this65.setNavigationMode(Potree.OrbitControls);_this65.setBackground('gradient');_this65.scaleFactor=1;_this65.loadSettingsFromURL();}// start rendering!
    if(args.useDefaultRenderLoop===undefined||args.useDefaultRenderLoop===true){requestAnimationFrame(_this65.loop.bind(_this65));}_this65.loadGUI=_this65.loadGUI.bind(_this65);}catch(e){_this65.onCrash(e);}return _this65;}_createClass(PotreeViewer,[{key:'onCrash',value:function onCrash(error){$(this.renderArea).empty();if($(this.renderArea).find('#potree_failpage').length===0){var elFailPage=$('\n\t\t\t<div id="#potree_failpage" class="potree_failpage"> \n\t\t\t\t\n\t\t\t\t<h1>Potree Encountered An Error </h1>\n\n\t\t\t\t<p>\n\t\t\t\tThis may happen if your browser or graphics card is not supported.\n\t\t\t\t<br>\n\t\t\t\tWe recommend to use \n\t\t\t\t<a href="https://www.google.com/chrome/browser" target="_blank" style="color:initial">Chrome</a>\n\t\t\t\tor \n\t\t\t\t<a href="https://www.mozilla.org/" target="_blank">Firefox</a>.\n\t\t\t\t</p>\n\n\t\t\t\t<p>\n\t\t\t\tPlease also visit <a href="http://webglreport.com/" target="_blank">webglreport.com</a> and \n\t\t\t\tcheck whether your system supports WebGL.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\tIf you are already using one of the recommended browsers and WebGL is enabled, \n\t\t\t\tconsider filing an issue report at <a href="https://github.com/potree/potree/issues" target="_blank">github</a>,<br>\n\t\t\t\tincluding your operating system, graphics card, browser and browser version, as well as the \n\t\t\t\terror message below.<br>\n\t\t\t\tPlease do not report errors on unsupported browsers.\n\t\t\t\t</p>\n\n\t\t\t\t<pre id="potree_error_console" style="width: 100%; height: 100%"></pre>\n\t\t\t\t\n\t\t\t</div>');var elErrorMessage=elFailPage.find('#potree_error_console');elErrorMessage.html(error.stack);$(this.renderArea).append(elFailPage);}throw error;}// ------------------------------------------------------------------------------------
// Viewer API
// ------------------------------------------------------------------------------------
},{key:'setScene',value:function setScene(scene){var _this66=this;if(scene===this.scene){return;}var oldScene=this.scene;this.scene=scene;this.dispatchEvent({type:'scene_changed',oldScene:oldScene,scene:scene});{// Annotations
        $('.annotation').detach();// for(let annotation of this.scene.annotations){
//	this.renderArea.appendChild(annotation.domElement[0]);
// }
        this.scene.annotations.traverse(function(annotation){_this66.renderArea.appendChild(annotation.domElement[0]);});if(!this.onAnnotationAdded){this.onAnnotationAdded=function(e){// console.log("annotation added: " + e.annotation.title);
            e.annotation.traverse(function(node){$("#potree_annotation_container").append(node.domElement);//this.renderArea.appendChild(node.domElement[0]);
                node.scene=_this66.scene;});};}if(oldScene){oldScene.annotations.removeEventListener('annotation_added',this.onAnnotationAdded);}this.scene.annotations.addEventListener('annotation_added',this.onAnnotationAdded);}}},{key:'getControls',value:function getControls(navigationMode){if(navigationMode===Potree.OrbitControls){return this.orbitControls;}else if(navigationMode===Potree.FirstPersonControls){return this.fpControls;}else if(navigationMode===Potree.EarthControls){return this.earthControls;}else{return null;}}},{key:'getMinNodeSize',value:function getMinNodeSize(){return this.minNodeSize;}},{key:'setMinNodeSize',value:function setMinNodeSize(value){if(this.minNodeSize!==value){this.minNodeSize=value;this.dispatchEvent({'type':'minnodesize_changed','viewer':this});}}},{key:'getBackground',value:function getBackground(){return this.background;}},{key:'setBackground',value:function setBackground(bg){if(this.background===bg){return;}if(bg==="skybox"){this.skybox=Potree.utils.loadSkybox(new URL(Potree.resourcePath+'/textures/skybox2/').href);}this.background=bg;this.dispatchEvent({'type':'background_changed','viewer':this});}},{key:'setDescription',value:function setDescription(value){$('#potree_description')[0].innerHTML=value;}},{key:'setNavigationMode',value:function setNavigationMode(value){this.scene.view.navigationMode=value;}},{key:'setShowBoundingBox',value:function setShowBoundingBox(value){if(this.showBoundingBox!==value){this.showBoundingBox=value;this.dispatchEvent({'type':'show_boundingbox_changed','viewer':this});}}},{key:'getShowBoundingBox',value:function getShowBoundingBox(){return this.showBoundingBox;}},{key:'setMoveSpeed',value:function setMoveSpeed(value){if(this.moveSpeed!==value){this.moveSpeed=value;this.dispatchEvent({'type':'move_speed_changed','viewer':this,'speed':value});}}},{key:'getMoveSpeed',value:function getMoveSpeed(){return this.moveSpeed;}},{key:'setWeightClassification',value:function setWeightClassification(w){for(var _i88=0;_i88<this.scene.pointclouds.length;_i88++){this.scene.pointclouds[_i88].material.weightClassification=w;this.dispatchEvent({'type':'attribute_weights_changed'+_i88,'viewer':this});}}},{key:'setFreeze',value:function setFreeze(value){value=Boolean(value);if(this.freeze!==value){this.freeze=value;this.dispatchEvent({'type':'freeze_changed','viewer':this});}}},{key:'getFreeze',value:function getFreeze(){return this.freeze;}},{key:'getClipTask',value:function getClipTask(){return this.clipTask;}},{key:'getClipMethod',value:function getClipMethod(){return this.clipMethod;}},{key:'setClipTask',value:function setClipTask(value){if(this.clipTask!==value){this.clipTask=value;this.dispatchEvent({type:"cliptask_changed",viewer:this});}}},{key:'setClipMethod',value:function setClipMethod(value){if(this.clipMethod!==value){this.clipMethod=value;this.dispatchEvent({type:"clipmethod_changed",viewer:this});}}},{key:'setPointBudget',value:function setPointBudget(value){if(Potree.pointBudget!==value){Potree.pointBudget=parseInt(value);this.dispatchEvent({'type':'point_budget_changed','viewer':this});}}},{key:'getPointBudget',value:function getPointBudget(){return Potree.pointBudget;}},{key:'setShowAnnotations',value:function setShowAnnotations(value){if(this.showAnnotations!==value){this.showAnnotations=value;this.dispatchEvent({'type':'show_annotations_changed','viewer':this});}}},{key:'getShowAnnotations',value:function getShowAnnotations(){return this.showAnnotations;}},{key:'setDEMCollisionsEnabled',value:function setDEMCollisionsEnabled(value){if(this.useDEMCollisions!==value){this.useDEMCollisions=value;this.dispatchEvent({'type':'use_demcollisions_changed','viewer':this});};}},{key:'getDEMCollisionsEnabled',value:function getDEMCollisionsEnabled(){return this.useDEMCollisions;}},{key:'setEDLEnabled',value:function setEDLEnabled(value){value=Boolean(value);if(this.useEDL!==value){this.useEDL=value;this.dispatchEvent({'type':'use_edl_changed','viewer':this});}}},{key:'getEDLEnabled',value:function getEDLEnabled(){return this.useEDL;}},{key:'setEDLRadius',value:function setEDLRadius(value){if(this.edlRadius!==value){this.edlRadius=value;this.dispatchEvent({'type':'edl_radius_changed','viewer':this});}}},{key:'getEDLRadius',value:function getEDLRadius(){return this.edlRadius;}},{key:'setEDLStrength',value:function setEDLStrength(value){if(this.edlStrength!==value){this.edlStrength=value;this.dispatchEvent({'type':'edl_strength_changed','viewer':this});}}},{key:'getEDLStrength',value:function getEDLStrength(){return this.edlStrength;}},{key:'setFOV',value:function setFOV(value){if(this.fov!==value){this.fov=value;this.dispatchEvent({'type':'fov_changed','viewer':this});}}},{key:'getFOV',value:function getFOV(){return this.fov;}},{key:'disableAnnotations',value:function disableAnnotations(){this.scene.annotations.traverse(function(annotation){annotation.domElement.css('pointer-events','none');// return annotation.visible;
    });}},{key:'enableAnnotations',value:function enableAnnotations(){this.scene.annotations.traverse(function(annotation){annotation.domElement.css('pointer-events','auto');// return annotation.visible;
    });}},{key:'setClassificationVisibility',value:function setClassificationVisibility(key,value){if(!this.classifications[key]){this.classifications[key]={visible:value,name:'no name'};this.dispatchEvent({'type':'classification_visibility_changed','viewer':this});}else if(this.classifications[key].visible!==value){this.classifications[key].visible=value;this.dispatchEvent({'type':'classification_visibility_changed','viewer':this});}}},{key:'setLengthUnit',value:function setLengthUnit(value){switch(value){case'm':this.lengthUnit=this.LENGTH_UNITS.METER;break;case'ft':this.lengthUnit=this.LENGTH_UNITS.FEET;break;case'in':this.lengthUnit=this.LENGTH_UNITS.INCH;break;}this.dispatchEvent({'type':'length_unit_changed','viewer':this,value:value});}},{key:'zoomTo',value:function zoomTo(node,factor){var _this67=this;var animationDuration=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var view=this.scene.view;var camera=this.scene.cameraP.clone();camera.rotation.copy(this.scene.cameraP.rotation);camera.rotation.order="ZXY";camera.rotation.x=Math.PI/2+view.pitch;camera.rotation.z=view.yaw;camera.updateMatrix();camera.updateMatrixWorld();camera.zoomTo(node,factor);var bs=void 0;if(node.boundingSphere){bs=node.boundingSphere;}else if(node.geometry&&node.geometry.boundingSphere){bs=node.geometry.boundingSphere;}else{bs=node.boundingBox.getBoundingSphere();}bs=bs.clone().applyMatrix4(node.matrixWorld);var startPosition=view.position.clone();var endPosition=camera.position.clone();var startTarget=view.getPivot();var endTarget=bs.center;var startRadius=view.radius;var endRadius=endPosition.distanceTo(endTarget);var easing=TWEEN.Easing.Quartic.Out;{// animate camera position
        var pos=startPosition.clone();var tween=new TWEEN.Tween(pos).to(endPosition,animationDuration);tween.easing(easing);tween.onUpdate(function(){view.position.copy(pos);});tween.start();}{// animate camera target
        var target=startTarget.clone();var _tween3=new TWEEN.Tween(target).to(endTarget,animationDuration);_tween3.easing(easing);_tween3.onUpdate(function(){view.lookAt(target);});_tween3.onComplete(function(){view.lookAt(target);_this67.dispatchEvent({type:'focusing_finished',target:_this67});});this.dispatchEvent({type:'focusing_started',target:this});_tween3.start();}}},{key:'showAbout',value:function showAbout(){$(function(){$('#about-panel').dialog();});}},{key:'getBoundingBox',value:function getBoundingBox(pointclouds){return this.scene.getBoundingBox(pointclouds);}},{key:'fitToScreen',value:function fitToScreen(){var factor=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var animationDuration=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var box=this.getBoundingBox(this.scene.pointclouds);var node=new THREE.Object3D();node.boundingBox=box;this.zoomTo(node,factor,animationDuration);this.controls.stop();}},{key:'toggleNavigationCube',value:function toggleNavigationCube(){this.navigationCube.visible=!this.navigationCube.visible;}},{key:'setView',value:function setView(view){if(!view)return;switch(view){case"F":this.setFrontView();break;case"B":this.setBackView();break;case"L":this.setLeftView();break;case"R":this.setRightView();break;case"U":this.setTopView();break;case"D":this.setBottomView();break;}}},{key:'setTopView',value:function setTopView(){this.scene.view.yaw=0;this.scene.view.pitch=-Math.PI/2;this.fitToScreen();}},{key:'setBottomView',value:function setBottomView(){this.scene.view.yaw=-Math.PI;this.scene.view.pitch=Math.PI/2;this.fitToScreen();}},{key:'setFrontView',value:function setFrontView(){this.scene.view.yaw=0;this.scene.view.pitch=0;this.fitToScreen();}},{key:'setBackView',value:function setBackView(){this.scene.view.yaw=Math.PI;this.scene.view.pitch=0;this.fitToScreen();}},{key:'setLeftView',value:function setLeftView(){this.scene.view.yaw=-Math.PI/2;this.scene.view.pitch=0;this.fitToScreen();}},{key:'setRightView',value:function setRightView(){this.scene.view.yaw=Math.PI/2;this.scene.view.pitch=0;this.fitToScreen();}},{key:'flipYZ',value:function flipYZ(){this.isFlipYZ=!this.isFlipYZ;// TODO flipyz
        console.log('TODO');}},{key:'setCameraMode',value:function setCameraMode(mode){this.scene.cameraMode=mode;var _iteratorNormalCompletion112=true;var _didIteratorError112=false;var _iteratorError112=undefined;try{for(var _iterator112=this.scene.pointclouds[Symbol.iterator](),_step112;!(_iteratorNormalCompletion112=(_step112=_iterator112.next()).done);_iteratorNormalCompletion112=true){var pointcloud=_step112.value;pointcloud.material.useOrthographicCamera=mode==Potree.CameraMode.ORTHOGRAPHIC;}}catch(err){_didIteratorError112=true;_iteratorError112=err;}finally{try{if(!_iteratorNormalCompletion112&&_iterator112.return){_iterator112.return();}}finally{if(_didIteratorError112){throw _iteratorError112;}}}}},{key:'loadSettingsFromURL',value:function loadSettingsFromURL(){if(Potree.utils.getParameterByName("pointSize")){this.setPointSize(parseFloat(Potree.utils.getParameterByName("pointSize")));}if(Potree.utils.getParameterByName("FOV")){this.setFOV(parseFloat(Potree.utils.getParameterByName("FOV")));}if(Potree.utils.getParameterByName("opacity")){this.setOpacity(parseFloat(Potree.utils.getParameterByName("opacity")));}if(Potree.utils.getParameterByName("edlEnabled")){var enabled=Potree.utils.getParameterByName("edlEnabled")==="true";this.setEDLEnabled(enabled);}if(Potree.utils.getParameterByName('edlRadius')){this.setEDLRadius(parseFloat(Potree.utils.getParameterByName('edlRadius')));}if(Potree.utils.getParameterByName('edlStrength')){this.setEDLStrength(parseFloat(Potree.utils.getParameterByName('edlStrength')));}if(Potree.utils.getParameterByName('pointBudget')){this.setPointBudget(parseFloat(Potree.utils.getParameterByName('pointBudget')));}if(Potree.utils.getParameterByName('showBoundingBox')){var _enabled=Potree.utils.getParameterByName('showBoundingBox')==='true';if(_enabled){this.setShowBoundingBox(true);}else{this.setShowBoundingBox(false);}}if(Potree.utils.getParameterByName('material')){var _material8=Potree.utils.getParameterByName('material');this.setMaterial(_material8);}if(Potree.utils.getParameterByName('pointSizing')){var sizing=Potree.utils.getParameterByName('pointSizing');this.setPointSizing(sizing);}if(Potree.utils.getParameterByName('quality')){var quality=Potree.utils.getParameterByName('quality');this.setQuality(quality);}if(Potree.utils.getParameterByName('position')){var value=Potree.utils.getParameterByName('position');value=value.replace('[','').replace(']','');var tokens=value.split(';');var x=parseFloat(tokens[0]);var y=parseFloat(tokens[1]);var z=parseFloat(tokens[2]);this.scene.view.position.set(x,y,z);}if(Potree.utils.getParameterByName('target')){var _value2=Potree.utils.getParameterByName('target');_value2=_value2.replace('[','').replace(']','');var _tokens=_value2.split(';');var _x35=parseFloat(_tokens[0]);var _y3=parseFloat(_tokens[1]);var _z=parseFloat(_tokens[2]);this.scene.view.lookAt(new THREE.Vector3(_x35,_y3,_z));}if(Potree.utils.getParameterByName('background')){var _value3=Potree.utils.getParameterByName('background');this.setBackground(_value3);}// if(Potree.utils.getParameterByName("elevationRange")){
//	let value = Potree.utils.getParameterByName("elevationRange");
//	value = value.replace("[", "").replace("]", "");
//	let tokens = value.split(";");
//	let x = parseFloat(tokens[0]);
//	let y = parseFloat(tokens[1]);
//
//	this.setElevationRange(x, y);
//	//this.scene.view.target.set(x, y, z);
// }
    }},{key:'createControls',// ------------------------------------------------------------------------------------
// Viewer Internals
// ------------------------------------------------------------------------------------
    value:function createControls(){{// create FIRST PERSON CONTROLS
        this.fpControls=new Potree.FirstPersonControls(this);this.fpControls.enabled=false;this.fpControls.addEventListener('start',this.disableAnnotations.bind(this));this.fpControls.addEventListener('end',this.enableAnnotations.bind(this));// this.fpControls.addEventListener("double_click_move", (event) => {
//	let distance = event.targetLocation.distanceTo(event.position);
//	this.setMoveSpeed(Math.pow(distance, 0.4));
// });
// this.fpControls.addEventListener("move_speed_changed", (event) => {
//	this.setMoveSpeed(this.fpControls.moveSpeed);
// });
    }// { // create GEO CONTROLS
//	this.geoControls = new Potree.GeoControls(this.scene.camera, this.renderer.domElement);
//	this.geoControls.enabled = false;
//	this.geoControls.addEventListener("start", this.disableAnnotations.bind(this));
//	this.geoControls.addEventListener("end", this.enableAnnotations.bind(this));
//	this.geoControls.addEventListener("move_speed_changed", (event) => {
//		this.setMoveSpeed(this.geoControls.moveSpeed);
//	});
// }
        {// create ORBIT CONTROLS
            this.orbitControls=new Potree.OrbitControls(this);this.orbitControls.enabled=false;this.orbitControls.addEventListener('start',this.disableAnnotations.bind(this));this.orbitControls.addEventListener('end',this.enableAnnotations.bind(this));}{// create EARTH CONTROLS
            this.earthControls=new Potree.EarthControls(this);this.earthControls.enabled=false;this.earthControls.addEventListener('start',this.disableAnnotations.bind(this));this.earthControls.addEventListener('end',this.enableAnnotations.bind(this));}}},{key:'toggleSidebar',value:function toggleSidebar(){var renderArea=$('#potree_render_area');var isVisible=renderArea.css('left')!=='0px';if(isVisible){renderArea.css('left','0px');}else{renderArea.css('left','300px');}}},{key:'toggleMap',value:function toggleMap(){// let map = $('#potree_map');
// map.toggle(100);
        if(this.mapView){this.mapView.toggle();}}},{key:'onGUILoaded',value:function onGUILoaded(callback){if(this.guiLoaded){callback();}else{this.guiLoadTasks.push(callback);}}},{key:'loadGUI',value:function loadGUI(callback){var _this68=this;this.onGUILoaded(callback);var viewer=this;var sidebarContainer=$('#potree_sidebar_container');sidebarContainer.load(new URL(Potree.scriptPath+'/sidebar.html').href,function(){sidebarContainer.css('width','300px');sidebarContainer.css('height','100%');var imgMenuToggle=document.createElement('img');imgMenuToggle.src=new URL(Potree.resourcePath+'/icons/menu_button.svg').href;imgMenuToggle.onclick=_this68.toggleSidebar;imgMenuToggle.classList.add('potree_menu_toggle');var imgMapToggle=document.createElement('img');imgMapToggle.src=new URL(Potree.resourcePath+'/icons/map_icon.png').href;imgMapToggle.style.display='none';imgMapToggle.onclick=function(e){_this68.toggleMap();};imgMapToggle.id='potree_map_toggle';viewer.renderArea.insertBefore(imgMapToggle,viewer.renderArea.children[0]);viewer.renderArea.insertBefore(imgMenuToggle,viewer.renderArea.children[0]);_this68.mapView=new Potree.MapView(_this68);_this68.mapView.init();i18n.init({lng:'en',resGetPath:Potree.resourcePath+'/lang/__lng__/__ns__.json',preload:['en','fr','de','jp'],getAsync:true,debug:false},function(t){// Start translation once everything is loaded
        $('body').i18n();});$(function(){initSidebar(_this68);//if (callback) {
//	$(callback);
//}
        var elProfile=$('<div>').load(new URL(Potree.scriptPath+'/profile.html').href,function(){$(document.body).append(elProfile.children());_this68.profileWindow=new Potree.ProfileWindow(_this68);_this68.profileWindowController=new Potree.ProfileWindowController(_this68);$('#profile_window').draggable({handle:$('#profile_titlebar'),containment:$(document.body)});$('#profile_window').resizable({containment:$(document.body),handles:'n, e, s, w'});$(function(){_this68.guiLoaded=true;var _iteratorNormalCompletion113=true;var _didIteratorError113=false;var _iteratorError113=undefined;try{for(var _iterator113=_this68.guiLoadTasks[Symbol.iterator](),_step113;!(_iteratorNormalCompletion113=(_step113=_iterator113.next()).done);_iteratorNormalCompletion113=true){var task=_step113.value;task();}}catch(err){_didIteratorError113=true;_iteratorError113=err;}finally{try{if(!_iteratorNormalCompletion113&&_iterator113.return){_iterator113.return();}}finally{if(_didIteratorError113){throw _iteratorError113;}}}});});});});}},{key:'setLanguage',value:function setLanguage(lang){i18n.setLng(lang);$('body').i18n();}},{key:'setServer',value:function setServer(server){this.server=server;}},{key:'initThree',value:function initThree(){var _this69=this;var width=this.renderArea.clientWidth;var height=this.renderArea.clientHeight;this.renderer=new THREE.WebGLRenderer({alpha:true,premultipliedAlpha:false});this.renderer.sortObjects=false;this.renderer.setSize(width,height);this.renderer.autoClear=false;this.renderArea.appendChild(this.renderer.domElement);this.renderer.domElement.tabIndex='2222';this.renderer.domElement.style.position='absolute';this.renderer.domElement.addEventListener('mousedown',function(){_this69.renderer.domElement.focus();});// enable frag_depth extension for the interpolation shader, if available
        var gl=this.renderer.context;gl.getExtension('EXT_frag_depth');gl.getExtension('WEBGL_depth_texture');var extVAO=gl.getExtension('OES_vertex_array_object');gl.createVertexArray=extVAO.createVertexArrayOES.bind(extVAO);gl.bindVertexArray=extVAO.bindVertexArrayOES.bind(extVAO);//gl.bindVertexArray = extVAO.asdfbindVertexArrayOES.bind(extVAO);
    }},{key:'updateAnnotations',value:function updateAnnotations(){var _this70=this;if(!this.visibleAnnotations){this.visibleAnnotations=new Set();}this.scene.annotations.updateBounds();this.scene.cameraP.updateMatrixWorld();this.scene.cameraO.updateMatrixWorld();var distances=[];var renderAreaWidth=this.renderer.getSize().width;var renderAreaHeight=this.renderer.getSize().height;var viewer=this;var visibleNow=[];this.scene.annotations.traverse(function(annotation){if(annotation===_this70.scene.annotations){return true;}if(!annotation.visible){return false;}annotation.scene=_this70.scene;var element=annotation.domElement;var position=annotation.position;if(!position){position=annotation.boundingBox.getCenter();}var distance=viewer.scene.cameraP.position.distanceTo(position);var radius=annotation.boundingBox.getBoundingSphere().radius;var screenPos=new THREE.Vector3();var screenSize=0;{// SCREEN POS
        screenPos.copy(position).project(_this70.scene.getActiveCamera());screenPos.x=renderAreaWidth*(screenPos.x+1)/2;screenPos.y=renderAreaHeight*(1-(screenPos.y+1)/2);// SCREEN SIZE
        if(viewer.scene.cameraMode==Potree.CameraMode.PERSPECTIVE){var fov=Math.PI*viewer.scene.cameraP.fov/180;var slope=Math.tan(fov/2.0);var projFactor=0.5*renderAreaHeight/(slope*distance);screenSize=radius*projFactor;}else{screenSize=Potree.utils.projectedRadiusOrtho(radius,viewer.scene.cameraO.projectionMatrix,renderAreaWidth,renderAreaHeight);}}element.css("left",screenPos.x+"px");element.css("top",screenPos.y+"px");//element.css("display", "block");
        var zIndex=10000000-distance*(10000000/_this70.scene.cameraP.far);if(annotation.descriptionVisible){zIndex+=10000000;}element.css("z-index",parseInt(zIndex));if(annotation.children.length>0){var expand=screenSize>annotation.collapseThreshold||annotation.boundingBox.containsPoint(_this70.scene.getActiveCamera().position);annotation.expand=expand;if(!expand){//annotation.display = (screenPos.z >= -1 && screenPos.z <= 1);
            var inFrustum=screenPos.z>=-1&&screenPos.z<=1;if(inFrustum){visibleNow.push(annotation);}}return expand;}else{//annotation.display = (screenPos.z >= -1 && screenPos.z <= 1);
            var _inFrustum=screenPos.z>=-1&&screenPos.z<=1;if(_inFrustum){visibleNow.push(annotation);}}});var notVisibleAnymore=new Set(this.visibleAnnotations);var _iteratorNormalCompletion114=true;var _didIteratorError114=false;var _iteratorError114=undefined;try{for(var _iterator114=visibleNow[Symbol.iterator](),_step114;!(_iteratorNormalCompletion114=(_step114=_iterator114.next()).done);_iteratorNormalCompletion114=true){var annotation=_step114.value;annotation.display=true;notVisibleAnymore.delete(annotation);}}catch(err){_didIteratorError114=true;_iteratorError114=err;}finally{try{if(!_iteratorNormalCompletion114&&_iterator114.return){_iterator114.return();}}finally{if(_didIteratorError114){throw _iteratorError114;}}}this.visibleAnnotations=visibleNow;var _iteratorNormalCompletion115=true;var _didIteratorError115=false;var _iteratorError115=undefined;try{for(var _iterator115=notVisibleAnymore[Symbol.iterator](),_step115;!(_iteratorNormalCompletion115=(_step115=_iterator115.next()).done);_iteratorNormalCompletion115=true){var _annotation=_step115.value;_annotation.display=false;}}catch(err){_didIteratorError115=true;_iteratorError115=err;}finally{try{if(!_iteratorNormalCompletion115&&_iterator115.return){_iterator115.return();}}finally{if(_didIteratorError115){throw _iteratorError115;}}}}},{key:'update',value:function update(delta,timestamp){if(Potree.measureTimings)performance.mark("update-start");// if(window.urlToggle === undefined){
//	window.urlToggle = 0;
// }else{
//
//	if(window.urlToggle > 1){
//		{
//
//			let currentValue = Potree.utils.getParameterByName("position");
//			let strPosition = "["
//				+ this.scene.view.position.x.toFixed(3) + ";"
//				+ this.scene.view.position.y.toFixed(3) + ";"
//				+ this.scene.view.position.z.toFixed(3) + "]";
//			if(currentValue !== strPosition){
//				Potree.utils.setParameter("position", strPosition);
//			}
//
//		}
//
//		{
//			let currentValue = Potree.utils.getParameterByName("target");
//			let pivot = this.scene.view.getPivot();
//			let strTarget = "["
//				+ pivot.x.toFixed(3) + ";"
//				+ pivot.y.toFixed(3) + ";"
//				+ pivot.z.toFixed(3) + "]";
//			if(currentValue !== strTarget){
//				Potree.utils.setParameter("target", strTarget);
//			}
//		}
//
//		window.urlToggle = 0;
//	}
//
//	window.urlToggle += delta;
//}
        {var u=Math.sin(0.0005*timestamp)*0.5-0.4;var x=Math.cos(u);var y=Math.sin(u);this.shadowTestCam.position.set(7*x,7*y,8.561);this.shadowTestCam.lookAt(new THREE.Vector3(0,0,0));}var scene=this.scene;var camera=scene.getActiveCamera();Potree.pointLoadLimit=Potree.pointBudget*2;this.scene.directionalLight.position.copy(camera.position);this.scene.directionalLight.lookAt(new THREE.Vector3().addVectors(camera.position,camera.getWorldDirection()));var _iteratorNormalCompletion116=true;var _didIteratorError116=false;var _iteratorError116=undefined;try{for(var _iterator116=this.scene.pointclouds[Symbol.iterator](),_step116;!(_iteratorNormalCompletion116=(_step116=_iterator116.next()).done);_iteratorNormalCompletion116=true){var _pointcloud10=_step116.value;if(!_pointcloud10.material._defaultIntensityRangeChanged){var root=_pointcloud10.pcoGeometry.root;if(root!=null&&root.loaded){var attributes=_pointcloud10.pcoGeometry.root.geometry.attributes;if(attributes.intensity){var array=attributes.intensity.array;// chose max value from the 0.75 percentile
            var ordered=[];for(var j=0;j<array.length;j++){ordered.push(array[j]);}ordered.sort();var capIndex=parseInt((ordered.length-1)*0.75);var cap=ordered[capIndex];if(cap<=1){_pointcloud10.material.intensityRange=[0,1];}else if(cap<=256){_pointcloud10.material.intensityRange=[0,255];}else{_pointcloud10.material.intensityRange=[0,cap];}}// pointcloud._intensityMaxEvaluated = true;
        }}_pointcloud10.showBoundingBox=this.showBoundingBox;_pointcloud10.generateDEM=this.generateDEM;_pointcloud10.minimumNodePixelSize=this.minNodeSize;}// update classification visibility
        }catch(err){_didIteratorError116=true;_iteratorError116=err;}finally{try{if(!_iteratorNormalCompletion116&&_iterator116.return){_iterator116.return();}}finally{if(_didIteratorError116){throw _iteratorError116;}}}var _iteratorNormalCompletion117=true;var _didIteratorError117=false;var _iteratorError117=undefined;try{for(var _iterator117=this.scene.pointclouds[Symbol.iterator](),_step117;!(_iteratorNormalCompletion117=(_step117=_iterator117.next()).done);_iteratorNormalCompletion117=true){var _pointcloud11=_step117.value;var classification=_pointcloud11.material.classification;var somethingChanged=false;var _iteratorNormalCompletion122=true;var _didIteratorError122=false;var _iteratorError122=undefined;try{for(var _iterator122=Object.keys(this.classifications)[Symbol.iterator](),_step122;!(_iteratorNormalCompletion122=(_step122=_iterator122.next()).done);_iteratorNormalCompletion122=true){var key=_step122.value;var w=this.classifications[key].visible?1:0;if(classification[key]){if(classification[key].w!==w){classification[key].w=w;somethingChanged=true;}}else if(classification.DEFAULT){classification[key]=classification.DEFAULT;somethingChanged=true;}else{classification[key]=new THREE.Vector4(0.3,0.6,0.6,0.5);somethingChanged=true;}}}catch(err){_didIteratorError122=true;_iteratorError122=err;}finally{try{if(!_iteratorNormalCompletion122&&_iterator122.return){_iterator122.return();}}finally{if(_didIteratorError122){throw _iteratorError122;}}}if(somethingChanged){_pointcloud11.material.recomputeClassification();}}}catch(err){_didIteratorError117=true;_iteratorError117=err;}finally{try{if(!_iteratorNormalCompletion117&&_iterator117.return){_iterator117.return();}}finally{if(_didIteratorError117){throw _iteratorError117;}}}{if(this.showBoundingBox){var bbRoot=this.scene.scene.getObjectByName("potree_bounding_box_root");if(!bbRoot){var _node24=new THREE.Object3D();_node24.name="potree_bounding_box_root";this.scene.scene.add(_node24);bbRoot=_node24;}var visibleBoxes=[];var _iteratorNormalCompletion118=true;var _didIteratorError118=false;var _iteratorError118=undefined;try{for(var _iterator118=this.scene.pointclouds[Symbol.iterator](),_step118;!(_iteratorNormalCompletion118=(_step118=_iterator118.next()).done);_iteratorNormalCompletion118=true){var pointcloud=_step118.value;var _iteratorNormalCompletion119=true;var _didIteratorError119=false;var _iteratorError119=undefined;try{for(var _iterator119=pointcloud.visibleNodes.filter(function(vn){return vn.boundingBoxNode!==undefined;})[Symbol.iterator](),_step119;!(_iteratorNormalCompletion119=(_step119=_iterator119.next()).done);_iteratorNormalCompletion119=true){var _node25=_step119.value;var _box2=_node25.boundingBoxNode;visibleBoxes.push(_box2);}}catch(err){_didIteratorError119=true;_iteratorError119=err;}finally{try{if(!_iteratorNormalCompletion119&&_iterator119.return){_iterator119.return();}}finally{if(_didIteratorError119){throw _iteratorError119;}}}}}catch(err){_didIteratorError118=true;_iteratorError118=err;}finally{try{if(!_iteratorNormalCompletion118&&_iterator118.return){_iterator118.return();}}finally{if(_didIteratorError118){throw _iteratorError118;}}}bbRoot.children=visibleBoxes;}}if(!this.freeze){var result=Potree.updatePointClouds(scene.pointclouds,camera,this.renderer);if(result.lowestSpacing!==Infinity){var near=result.lowestSpacing*10.0;var far=-this.getBoundingBox().applyMatrix4(camera.matrixWorldInverse).min.z;far=Math.max(far*1.5,1000);near=Math.min(100.0,Math.max(0.01,near));far=Math.max(far,near+1000);if(near===Infinity){near=0.1;}camera.near=near;camera.far=far;}else{// don't change near and far in this case
        }if(this.scene.cameraMode==Potree.CameraMode.ORTHOGRAPHIC){camera.near=-camera.far;}}this.scene.cameraP.fov=this.fov;// Navigation mode changed?
        if(this.getControls(scene.view.navigationMode)!==this.controls){if(this.controls){this.controls.enabled=false;this.inputHandler.removeInputListener(this.controls);}this.controls=this.getControls(scene.view.navigationMode);this.controls.enabled=true;this.inputHandler.addInputListener(this.controls);}if(this.controls!==null){this.controls.setScene(scene);this.controls.update(delta);this.scene.cameraP.position.copy(scene.view.position);this.scene.cameraP.rotation.order="ZXY";this.scene.cameraP.rotation.x=Math.PI/2+this.scene.view.pitch;this.scene.cameraP.rotation.z=this.scene.view.yaw;this.scene.cameraO.position.copy(scene.view.position);this.scene.cameraO.rotation.order="ZXY";this.scene.cameraO.rotation.x=Math.PI/2+this.scene.view.pitch;this.scene.cameraO.rotation.z=this.scene.view.yaw;}camera.updateMatrix();camera.updateMatrixWorld();camera.matrixWorldInverse.getInverse(camera.matrixWorld);{if(this._previousCamera===undefined){this._previousCamera=this.scene.getActiveCamera().clone();this._previousCamera.rotation.copy(this.scene.getActiveCamera());}if(!this._previousCamera.matrixWorld.equals(camera.matrixWorld)){this.dispatchEvent({type:"camera_changed",previous:this._previousCamera,camera:camera});}else if(!this._previousCamera.projectionMatrix.equals(camera.projectionMatrix)){this.dispatchEvent({type:"camera_changed",previous:this._previousCamera,camera:camera});}this._previousCamera=this.scene.getActiveCamera().clone();this._previousCamera.rotation.copy(this.scene.getActiveCamera());}{// update clip boxes
            var boxes=[];// volumes with clipping enabled
            boxes.push.apply(boxes,_toConsumableArray(this.scene.volumes.filter(function(v){return v.clip;})));// profile segments
            var _iteratorNormalCompletion120=true;var _didIteratorError120=false;var _iteratorError120=undefined;try{for(var _iterator120=this.scene.profiles[Symbol.iterator](),_step120;!(_iteratorNormalCompletion120=(_step120=_iterator120.next()).done);_iteratorNormalCompletion120=true){var profile=_step120.value;boxes.push.apply(boxes,_toConsumableArray(profile.boxes));}}catch(err){_didIteratorError120=true;_iteratorError120=err;}finally{try{if(!_iteratorNormalCompletion120&&_iterator120.return){_iterator120.return();}}finally{if(_didIteratorError120){throw _iteratorError120;}}}var clipBoxes=boxes.map(function(box){box.updateMatrixWorld();var boxInverse=new THREE.Matrix4().getInverse(box.matrixWorld);var boxPosition=box.getWorldPosition();return{box:box,inverse:boxInverse,position:boxPosition};});var clipPolygons=this.scene.polygonClipVolumes.filter(function(vol){return vol.initialized;});// set clip volumes in material
            var _iteratorNormalCompletion121=true;var _didIteratorError121=false;var _iteratorError121=undefined;try{for(var _iterator121=this.scene.pointclouds.filter(function(pc){return pc.visible;})[Symbol.iterator](),_step121;!(_iteratorNormalCompletion121=(_step121=_iterator121.next()).done);_iteratorNormalCompletion121=true){var _pointcloud9=_step121.value;_pointcloud9.material.setClipBoxes(clipBoxes);_pointcloud9.material.setClipPolygons(clipPolygons,this.clippingTool.maxPolygonVertices);_pointcloud9.material.clipTask=this.clipTask;_pointcloud9.material.clipMethod=this.clipMethod;}}catch(err){_didIteratorError121=true;_iteratorError121=err;}finally{try{if(!_iteratorNormalCompletion121&&_iterator121.return){_iterator121.return();}}finally{if(_didIteratorError121){throw _iteratorError121;}}}}{// update navigation cube
            this.navigationCube.update(camera.rotation);}this.updateAnnotations();if(this.mapView){this.mapView.update(delta);if(this.mapView.sceneProjection){$("#potree_map_toggle").css("display","block");}}TWEEN.update(timestamp);this.dispatchEvent({type:'update',delta:delta,timestamp:timestamp});if(Potree.measureTimings){performance.mark("update-end");performance.measure("update","update-start","update-end");}}},{key:'render',value:function render(){if(Potree.measureTimings)performance.mark("render-start");{// resize
        var width=this.scaleFactor*this.renderArea.clientWidth;var height=this.scaleFactor*this.renderArea.clientHeight;var pixelRatio=this.renderer.getPixelRatio();var aspect=width/height;this.scene.cameraP.aspect=aspect;this.scene.cameraP.updateProjectionMatrix();//let frustumScale = viewer.moveSpeed * 2.0;
        var frustumScale=this.scene.view.radius;this.scene.cameraO.left=-frustumScale;this.scene.cameraO.right=frustumScale;this.scene.cameraO.top=frustumScale*1/aspect;this.scene.cameraO.bottom=-frustumScale*1/aspect;this.scene.cameraO.updateProjectionMatrix();this.scene.cameraScreenSpace.top=1/aspect;this.scene.cameraScreenSpace.bottom=-1/aspect;this.scene.cameraScreenSpace.updateProjectionMatrix();this.renderer.setSize(width,height);}try{if(this.useRep){if(!this.repRenderer){this.repRenderer=new RepRenderer(this);}this.repRenderer.render(this.renderer);}else if(this.useHQ){if(!this.hqRenderer){this.hqRenderer=new HQSplatRenderer(this);}this.hqRenderer.useEDL=this.useEDL;this.hqRenderer.render(this.renderer);}else{if(this.useEDL&&Potree.Features.SHADER_EDL.isSupported()){if(!this.edlRenderer){this.edlRenderer=new EDLRenderer(this);}this.edlRenderer.render(this.renderer);}else{if(!this.potreeRenderer){this.potreeRenderer=new PotreeRenderer(this);}this.potreeRenderer.render();}}//if(this.useRep){
//	if (!this.repRenderer) {
//		this.repRenderer = new RepRenderer(this);
//	}
//	this.repRenderer.render(this.renderer);
//} else if (this.useHQ && Potree.Features.SHADER_SPLATS.isSupported()) {
//	if (!this.hqRenderer) {
//		this.hqRenderer = new HQSplatRenderer(this);
//	}
//	this.hqRenderer.render(this.renderer);
//} else if (this.useEDL && Potree.Features.SHADER_EDL.isSupported()) {
//	if (!this.edlRenderer) {
//		this.edlRenderer = new EDLRenderer(this);
//	}
//	this.edlRenderer.render(this.renderer);
//} else {
//	if (!this.potreeRenderer) {
//		this.potreeRenderer = new PotreeRenderer(this);
//	}
//	this.potreeRenderer.render();
//}
        this.renderer.render(this.overlay,this.overlayCamera);}catch(e){this.onCrash(e);}if(Potree.measureTimings){performance.mark("render-end");performance.measure("render","render-start","render-end");}}},{key:'resolveTimings',value:function resolveTimings(timestamp){if(Potree.measureTimings){if(!this.toggle){this.toggle=timestamp;}var duration=timestamp-this.toggle;if(duration>1000.0){var measures=performance.getEntriesByType("measure");var names=new Set();var _iteratorNormalCompletion123=true;var _didIteratorError123=false;var _iteratorError123=undefined;try{for(var _iterator123=measures[Symbol.iterator](),_step123;!(_iteratorNormalCompletion123=(_step123=_iterator123.next()).done);_iteratorNormalCompletion123=true){var measure=_step123.value;names.add(measure.name);}}catch(err){_didIteratorError123=true;_iteratorError123=err;}finally{try{if(!_iteratorNormalCompletion123&&_iterator123.return){_iterator123.return();}}finally{if(_didIteratorError123){throw _iteratorError123;}}}var groups=new Map();var _iteratorNormalCompletion124=true;var _didIteratorError124=false;var _iteratorError124=undefined;try{for(var _iterator124=names[Symbol.iterator](),_step124;!(_iteratorNormalCompletion124=(_step124=_iterator124.next()).done);_iteratorNormalCompletion124=true){var name=_step124.value;groups.set(name,{measures:[],sum:0,n:0,min:Infinity,max:-Infinity});}}catch(err){_didIteratorError124=true;_iteratorError124=err;}finally{try{if(!_iteratorNormalCompletion124&&_iterator124.return){_iterator124.return();}}finally{if(_didIteratorError124){throw _iteratorError124;}}}var _iteratorNormalCompletion125=true;var _didIteratorError125=false;var _iteratorError125=undefined;try{for(var _iterator125=measures[Symbol.iterator](),_step125;!(_iteratorNormalCompletion125=(_step125=_iterator125.next()).done);_iteratorNormalCompletion125=true){var _measure=_step125.value;var group=groups.get(_measure.name);group.measures.push(_measure);group.sum+=_measure.duration;group.n++;group.min=Math.min(group.min,_measure.duration);group.max=Math.max(group.max,_measure.duration);}}catch(err){_didIteratorError125=true;_iteratorError125=err;}finally{try{if(!_iteratorNormalCompletion125&&_iterator125.return){_iterator125.return();}}finally{if(_didIteratorError125){throw _iteratorError125;}}}var glQueries=Potree.resolveQueries(this.renderer.getContext());var _iteratorNormalCompletion126=true;var _didIteratorError126=false;var _iteratorError126=undefined;try{for(var _iterator126=glQueries[Symbol.iterator](),_step126;!(_iteratorNormalCompletion126=(_step126=_iterator126.next()).done);_iteratorNormalCompletion126=true){var _step126$value=_slicedToArray(_step126.value,2),key=_step126$value[0],value=_step126$value[1];var _group={measures:value.map(function(v){return{duration:v};}),sum:value.reduce(function(a,i){return a+i;},0),n:value.length,min:Math.min.apply(Math,_toConsumableArray(value)),max:Math.max.apply(Math,_toConsumableArray(value))};var groupname='[tq] '+key;groups.set(groupname,_group);names.add(groupname);}}catch(err){_didIteratorError126=true;_iteratorError126=err;}finally{try{if(!_iteratorNormalCompletion126&&_iterator126.return){_iterator126.return();}}finally{if(_didIteratorError126){throw _iteratorError126;}}}var _iteratorNormalCompletion127=true;var _didIteratorError127=false;var _iteratorError127=undefined;try{for(var _iterator127=groups[Symbol.iterator](),_step127;!(_iteratorNormalCompletion127=(_step127=_iterator127.next()).done);_iteratorNormalCompletion127=true){var _step127$value=_slicedToArray(_step127.value,2),_name2=_step127$value[0],_group2=_step127$value[1];_group2.mean=_group2.sum/_group2.n;_group2.measures.sort(function(a,b){return a.duration-b.duration;});if(_group2.n===1){_group2.median=_group2.measures[0].duration;}else if(_group2.n>1){_group2.median=_group2.measures[parseInt(_group2.n/2)].duration;}}}catch(err){_didIteratorError127=true;_iteratorError127=err;}finally{try{if(!_iteratorNormalCompletion127&&_iterator127.return){_iterator127.return();}}finally{if(_didIteratorError127){throw _iteratorError127;}}}var cn=Array.from(names).reduce(function(a,i){return Math.max(a,i.length);},0)+5;var cmin=10;var cmed=10;var cmax=10;var csam=6;var message=' '+"NAME".padEnd(cn)+' |'+(' '+"MIN".padStart(cmin)+' |')+(' '+"MEDIAN".padStart(cmed)+' |')+(' '+"MAX".padStart(cmax)+' |')+(' '+"SAMPLES".padStart(csam)+' \n');message+=' '+"-".repeat(message.length)+'\n';names=Array.from(names).sort();var _iteratorNormalCompletion128=true;var _didIteratorError128=false;var _iteratorError128=undefined;try{for(var _iterator128=names[Symbol.iterator](),_step128;!(_iteratorNormalCompletion128=(_step128=_iterator128.next()).done);_iteratorNormalCompletion128=true){var _name3=_step128.value;var _group3=groups.get(_name3);var min=_group3.min.toFixed(3);var median=_group3.median.toFixed(3);var max=_group3.max.toFixed(3);var n=_group3.n;message+=' '+_name3.padEnd(cn)+' |'+(' '+min.padStart(cmin)+' |')+(' '+median.padStart(cmed)+' |')+(' '+max.padStart(cmax)+' |')+(' '+n.toString().padStart(csam)+'\n');}}catch(err){_didIteratorError128=true;_iteratorError128=err;}finally{try{if(!_iteratorNormalCompletion128&&_iterator128.return){_iterator128.return();}}finally{if(_didIteratorError128){throw _iteratorError128;}}}message+='\n';console.log(message);performance.clearMarks();performance.clearMeasures();this.toggle=timestamp;}}}},{key:'loop',value:function loop(timestamp){requestAnimationFrame(this.loop.bind(this));var queryAll=void 0;if(Potree.measureTimings){performance.mark("loop-start");}this.update(this.clock.getDelta(),timestamp);this.render();if(Potree.measureTimings){performance.mark("loop-end");performance.measure("loop","loop-start","loop-end");}this.resolveTimings(timestamp);Potree.framenumber++;}},{key:'postError',value:function postError(content){var params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var message=this.postMessage(content,params);message.element.addClass("potree_message_error");return message;}},{key:'postMessage',value:function postMessage(content){var _this71=this;var params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var message=new Potree.Message(content);var animationDuration=100;message.element.css("display","none");message.elClose.click(function(){message.element.slideToggle(animationDuration);var index=_this71.messages.indexOf(message);if(index>=0){_this71.messages.splice(index,1);}});this.elMessages.prepend(message.element);message.element.slideToggle(animationDuration);this.messages.push(message);if(params.duration!==undefined){var fadeDuration=500;var slideOutDuration=200;setTimeout(function(){message.element.animate({opacity:0},fadeDuration);message.element.slideToggle(slideOutDuration);},params.duration);}return message;}}]);return PotreeViewer;}(THREE.EventDispatcher);var ProfilePointCloudEntry=function(){function ProfilePointCloudEntry(){_classCallCheck(this,ProfilePointCloudEntry);this.points=[];//let geometry = new THREE.BufferGeometry();
    var material=ProfilePointCloudEntry.getMaterialInstance();material.uniforms.minSize.value=2;material.uniforms.maxSize.value=2;material.pointColorType=Potree.PointColorType.RGB;material.opacity=1.0;this.material=material;this.sceneNode=new THREE.Object3D();//this.sceneNode = new THREE.Points(geometry, material);
}_createClass(ProfilePointCloudEntry,[{key:'dispose',value:function dispose(){var _iteratorNormalCompletion129=true;var _didIteratorError129=false;var _iteratorError129=undefined;try{for(var _iterator129=this.sceneNode.children[Symbol.iterator](),_step129;!(_iteratorNormalCompletion129=(_step129=_iterator129.next()).done);_iteratorNormalCompletion129=true){var child=_step129.value;ProfilePointCloudEntry.releaseMaterialInstance(child.material);child.geometry.dispose();}}catch(err){_didIteratorError129=true;_iteratorError129=err;}finally{try{if(!_iteratorNormalCompletion129&&_iterator129.return){_iterator129.return();}}finally{if(_didIteratorError129){throw _iteratorError129;}}}this.sceneNode.children=[];}},{key:'addPoints',value:function addPoints(data){var _this72=this;this.points.push(data);var batchSize=10*1000;var createNewBatch=function createNewBatch(){var geometry=new THREE.BufferGeometry();var buffers={position:new Float32Array(3*batchSize),color:new Uint8Array(4*batchSize),intensity:new Uint16Array(batchSize),classification:new Uint8Array(batchSize),returnNumber:new Uint8Array(batchSize),numberOfReturns:new Uint8Array(batchSize),pointSourceID:new Uint16Array(batchSize)};geometry.addAttribute('position',new THREE.BufferAttribute(buffers.position,3));geometry.addAttribute('color',new THREE.BufferAttribute(buffers.color,4,true));geometry.addAttribute('intensity',new THREE.BufferAttribute(buffers.intensity,1,false));geometry.addAttribute('classification',new THREE.BufferAttribute(buffers.classification,1,false));geometry.addAttribute('returnNumber',new THREE.BufferAttribute(buffers.returnNumber,1,false));geometry.addAttribute('numberOfReturns',new THREE.BufferAttribute(buffers.numberOfReturns,1,false));geometry.addAttribute('pointSourceID',new THREE.BufferAttribute(buffers.pointSourceID,1,false));geometry.drawRange.start=0;geometry.drawRange.count=0;_this72.currentBatch=new THREE.Points(geometry,_this72.material);_this72.sceneNode.add(_this72.currentBatch);};if(!this.currentBatch){createNewBatch();}{// REBUILD MODEL
        var pointsProcessed=0;var updateRange={start:this.currentBatch.geometry.drawRange.count,count:0};var projectedBox=new THREE.Box3();for(var _i89=0;_i89<data.numPoints;_i89++){if(updateRange.start+updateRange.count>=batchSize){// finalize current batch, start new batch
            var _iteratorNormalCompletion130=true;var _didIteratorError130=false;var _iteratorError130=undefined;try{for(var _iterator130=Object.keys(this.currentBatch.geometry.attributes)[Symbol.iterator](),_step130;!(_iteratorNormalCompletion130=(_step130=_iterator130.next()).done);_iteratorNormalCompletion130=true){var key=_step130.value;var attribute=this.currentBatch.geometry.attributes[key];attribute.updateRange.offset=updateRange.start;attribute.updateRange.count=updateRange.count;attribute.needsUpdate=true;}}catch(err){_didIteratorError130=true;_iteratorError130=err;}finally{try{if(!_iteratorNormalCompletion130&&_iterator130.return){_iterator130.return();}}finally{if(_didIteratorError130){throw _iteratorError130;}}}this.currentBatch.geometry.computeBoundingBox();this.currentBatch.geometry.computeBoundingSphere();createNewBatch();updateRange={start:0,count:0};}var x=data.data.mileage[_i89];var y=0;var z=data.data.position[3*_i89+2];projectedBox.expandByPoint(new THREE.Vector3(x,y,z));var currentIndex=updateRange.start+updateRange.count;var attributes=this.currentBatch.geometry.attributes;{attributes.position.array[3*currentIndex+0]=x;attributes.position.array[3*currentIndex+1]=y;attributes.position.array[3*currentIndex+2]=z;}if(data.data.color){attributes.color.array[4*currentIndex+0]=data.data.color[4*_i89+0];attributes.color.array[4*currentIndex+1]=data.data.color[4*_i89+1];attributes.color.array[4*currentIndex+2]=data.data.color[4*_i89+2];attributes.color.array[4*currentIndex+3]=255;}if(data.data.intensity){attributes.intensity.array[currentIndex]=data.data.intensity[_i89];}if(data.data.classification){attributes.classification.array[currentIndex]=data.data.classification[_i89];}if(data.data.returnNumber){attributes.returnNumber.array[currentIndex]=data.data.returnNumber[_i89];}if(data.data.numberOfReturns){attributes.numberOfReturns.array[currentIndex]=data.data.numberOfReturns[_i89];}if(data.data.pointSourceID){attributes.pointSourceID.array[currentIndex]=data.data.pointSourceID[_i89];}updateRange.count++;this.currentBatch.geometry.drawRange.count++;}//for(let attribute of Object.values(this.currentBatch.geometry.attributes)){
        var _iteratorNormalCompletion131=true;var _didIteratorError131=false;var _iteratorError131=undefined;try{for(var _iterator131=Object.keys(this.currentBatch.geometry.attributes)[Symbol.iterator](),_step131;!(_iteratorNormalCompletion131=(_step131=_iterator131.next()).done);_iteratorNormalCompletion131=true){var _key2=_step131.value;var _attribute2=this.currentBatch.geometry.attributes[_key2];_attribute2.updateRange.offset=updateRange.start;_attribute2.updateRange.count=updateRange.count;_attribute2.needsUpdate=true;}}catch(err){_didIteratorError131=true;_iteratorError131=err;}finally{try{if(!_iteratorNormalCompletion131&&_iterator131.return){_iterator131.return();}}finally{if(_didIteratorError131){throw _iteratorError131;}}}data.projectedBox=projectedBox;this.projectedBox=this.points.reduce(function(a,i){return a.union(i.projectedBox);},new THREE.Box3());}}}],[{key:'releaseMaterialInstance',value:function releaseMaterialInstance(instance){ProfilePointCloudEntry.materialPool.add(instance);}},{key:'getMaterialInstance',value:function getMaterialInstance(){var instance=ProfilePointCloudEntry.materialPool.values().next().value;if(!instance){instance=new Potree.PointCloudMaterial();}else{ProfilePointCloudEntry.materialPool.delete(instance);}return instance;}}]);return ProfilePointCloudEntry;}();;ProfilePointCloudEntry.materialPool=new Set();Potree.ProfileWindow=function(_THREE$EventDispatche16){_inherits(ProfileWindow,_THREE$EventDispatche16);function ProfileWindow(viewer){_classCallCheck(this,ProfileWindow);var _this73=_possibleConstructorReturn(this,(ProfileWindow.__proto__||Object.getPrototypeOf(ProfileWindow)).call(this));_this73.viewer=viewer;_this73.elRoot=$('#profile_window');_this73.renderArea=_this73.elRoot.find('#profileCanvasContainer');_this73.svg=d3.select('svg#profileSVG');_this73.mouseIsDown=false;_this73.projectedBox=new THREE.Box3();_this73.pointclouds=new Map();_this73.numPoints=0;_this73.lastAddPointsTimestamp=undefined;_this73.mouse=new THREE.Vector2(0,0);_this73.scale=new THREE.Vector3(1,1,1);var csvIcon=Potree.resourcePath+'/icons/file_csv_2d.svg';$('#potree_download_csv_icon').attr('src',csvIcon);var lasIcon=Potree.resourcePath+'/icons/file_las_3d.svg';$('#potree_download_las_icon').attr('src',lasIcon);var closeIcon=Potree.resourcePath+'/icons/close.svg';$('#closeProfileContainer').attr("src",closeIcon);_this73.initTHREE();_this73.initSVG();_this73.initListeners();_this73.elRoot.i18n();return _this73;}_createClass(ProfileWindow,[{key:'initListeners',value:function initListeners(){var _this74=this;$(window).resize(function(){_this74.render();});this.renderArea.mousedown(function(e){_this74.mouseIsDown=true;});this.renderArea.mouseup(function(e){_this74.mouseIsDown=false;});var viewerPickSphereSizeHandler=function viewerPickSphereSizeHandler(){var camera=_this74.viewer.scene.getActiveCamera();var domElement=_this74.viewer.renderer.domElement;var distance=_this74.viewerPickSphere.position.distanceTo(camera.position);var pr=Potree.utils.projectedRadius(1,camera,distance,domElement.clientWidth,domElement.clientHeight);var scale=10/pr;_this74.viewerPickSphere.scale.set(scale,scale,scale);};this.renderArea.mousemove(function(e){if(_this74.pointclouds.size===0){return;}var rect=_this74.renderArea[0].getBoundingClientRect();var x=e.clientX-rect.left;var y=e.clientY-rect.top;var newMouse=new THREE.Vector2(x,y);if(_this74.mouseIsDown){// DRAG
        _this74.autoFit=false;_this74.lastDrag=new Date().getTime();var cPos=[_this74.scaleX.invert(_this74.mouse.x),_this74.scaleY.invert(_this74.mouse.y)];var ncPos=[_this74.scaleX.invert(newMouse.x),_this74.scaleY.invert(newMouse.y)];_this74.camera.position.x-=ncPos[0]-cPos[0];_this74.camera.position.z-=ncPos[1]-cPos[1];_this74.render();}else if(_this74.pointclouds.size>0){// FIND HOVERED POINT
        var radius=Math.abs(_this74.scaleX.invert(0)-_this74.scaleX.invert(40));var mileage=_this74.scaleX.invert(newMouse.x);var elevation=_this74.scaleY.invert(newMouse.y);var point=_this74.selectPoint(mileage,elevation,radius);if(point){var _viewerPickSphere$pos;_this74.elRoot.find('#profileSelectionProperties').fadeIn(200);_this74.pickSphere.visible=true;_this74.pickSphere.scale.set(0.5*radius,0.5*radius,0.5*radius);_this74.pickSphere.position.set(point.mileage,0,point.position[2]);(_viewerPickSphere$pos=_this74.viewerPickSphere.position).set.apply(_viewerPickSphere$pos,_toConsumableArray(point.position));if(!_this74.viewer.scene.scene.children.includes(_this74.viewerPickSphere)){_this74.viewer.scene.scene.add(_this74.viewerPickSphere);if(!_this74.viewer.hasEventListener("update",viewerPickSphereSizeHandler)){_this74.viewer.addEventListener("update",viewerPickSphereSizeHandler);}}var info=_this74.elRoot.find('#profileSelectionProperties');var html='<table>';var _iteratorNormalCompletion132=true;var _didIteratorError132=false;var _iteratorError132=undefined;try{for(var _iterator132=Object.keys(point)[Symbol.iterator](),_step132;!(_iteratorNormalCompletion132=(_step132=_iterator132.next()).done);_iteratorNormalCompletion132=true){var attribute=_step132.value;var value=point[attribute];if(attribute==='position'){var values=[].concat(_toConsumableArray(value)).map(function(v){return Potree.utils.addCommas(v.toFixed(3));});html+='\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>x</td>\n\t\t\t\t\t\t\t\t\t<td>'+values[0]+'</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>y</td>\n\t\t\t\t\t\t\t\t\t<td>'+values[1]+'</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>z</td>\n\t\t\t\t\t\t\t\t\t<td>'+values[2]+'</td>\n\t\t\t\t\t\t\t\t</tr>';}else if(attribute==='color'){html+='\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>'+attribute+'</td>\n\t\t\t\t\t\t\t\t\t<td>'+value.join(', ')+'</td>\n\t\t\t\t\t\t\t\t</tr>';}else if(attribute==='normal'){continue;}else if(attribute==='mileage'){html+='\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>'+attribute+'</td>\n\t\t\t\t\t\t\t\t\t<td>'+value.toFixed(3)+'</td>\n\t\t\t\t\t\t\t\t</tr>';}else{html+='\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>'+attribute+'</td>\n\t\t\t\t\t\t\t\t\t<td>'+value+'</td>\n\t\t\t\t\t\t\t\t</tr>';}}}catch(err){_didIteratorError132=true;_iteratorError132=err;}finally{try{if(!_iteratorNormalCompletion132&&_iterator132.return){_iterator132.return();}}finally{if(_didIteratorError132){throw _iteratorError132;}}}html+='</table>';info.html(html);_this74.selectedPoint=point;}else{// this.pickSphere.visible = false;
// this.selectedPoint = null;
            _this74.viewer.scene.scene.add(_this74.viewerPickSphere);var index=_this74.viewer.scene.scene.children.indexOf(_this74.viewerPickSphere);if(index>=0){_this74.viewer.scene.scene.children.splice(index,1);}_this74.viewer.removeEventListener("update",viewerPickSphereSizeHandler);}_this74.render();}_this74.mouse.copy(newMouse);});var onWheel=function onWheel(e){_this74.autoFit=false;var delta=0;if(e.wheelDelta!==undefined){// WebKit / Opera / Explorer 9
        delta=e.wheelDelta;}else if(e.detail!==undefined){// Firefox
        delta=-e.detail;}var ndelta=Math.sign(delta);var cPos=[_this74.scaleX.invert(_this74.mouse.x),_this74.scaleY.invert(_this74.mouse.y)];if(ndelta>0){// + 10%
        _this74.scale.multiplyScalar(1.1);}else{// - 10%
        _this74.scale.multiplyScalar(100/110);}_this74.updateScales();var ncPos=[_this74.scaleX.invert(_this74.mouse.x),_this74.scaleY.invert(_this74.mouse.y)];_this74.camera.position.x-=ncPos[0]-cPos[0];_this74.camera.position.z-=ncPos[1]-cPos[1];_this74.render();_this74.updateScales();};$(this.renderArea)[0].addEventListener('mousewheel',onWheel,false);$(this.renderArea)[0].addEventListener('DOMMouseScroll',onWheel,false);// Firefox
        $('#closeProfileContainer').click(function(){_this74.hide();});$('#potree_download_csv_icon').click(function(){var points=new Potree.Points();var _iteratorNormalCompletion133=true;var _didIteratorError133=false;var _iteratorError133=undefined;try{for(var _iterator133=_this74.pointclouds[Symbol.iterator](),_step133;!(_iteratorNormalCompletion133=(_step133=_iterator133.next()).done);_iteratorNormalCompletion133=true){var _step133$value=_slicedToArray(_step133.value,2),pointcloud=_step133$value[0],entry=_step133$value[1];var _iteratorNormalCompletion134=true;var _didIteratorError134=false;var _iteratorError134=undefined;try{for(var _iterator134=entry.points[Symbol.iterator](),_step134;!(_iteratorNormalCompletion134=(_step134=_iterator134.next()).done);_iteratorNormalCompletion134=true){var pointSet=_step134.value;points.add(pointSet);}}catch(err){_didIteratorError134=true;_iteratorError134=err;}finally{try{if(!_iteratorNormalCompletion134&&_iterator134.return){_iterator134.return();}}finally{if(_didIteratorError134){throw _iteratorError134;}}}}}catch(err){_didIteratorError133=true;_iteratorError133=err;}finally{try{if(!_iteratorNormalCompletion133&&_iterator133.return){_iterator133.return();}}finally{if(_didIteratorError133){throw _iteratorError133;}}}var string=Potree.CSVExporter.toString(points);var blob=new Blob([string],{type:"text/string"});$('#potree_download_profile_ortho_link').attr('href',URL.createObjectURL(blob));//let uri = 'data:application/octet-stream;base64,' + btoa(string);
//$('#potree_download_profile_ortho_link').attr('href', uri);
        });$('#potree_download_las_icon').click(function(){var points=new Potree.Points();var _iteratorNormalCompletion135=true;var _didIteratorError135=false;var _iteratorError135=undefined;try{for(var _iterator135=_this74.pointclouds[Symbol.iterator](),_step135;!(_iteratorNormalCompletion135=(_step135=_iterator135.next()).done);_iteratorNormalCompletion135=true){var _step135$value=_slicedToArray(_step135.value,2),pointcloud=_step135$value[0],entry=_step135$value[1];var _iteratorNormalCompletion136=true;var _didIteratorError136=false;var _iteratorError136=undefined;try{for(var _iterator136=entry.points[Symbol.iterator](),_step136;!(_iteratorNormalCompletion136=(_step136=_iterator136.next()).done);_iteratorNormalCompletion136=true){var pointSet=_step136.value;points.add(pointSet);}}catch(err){_didIteratorError136=true;_iteratorError136=err;}finally{try{if(!_iteratorNormalCompletion136&&_iterator136.return){_iterator136.return();}}finally{if(_didIteratorError136){throw _iteratorError136;}}}}}catch(err){_didIteratorError135=true;_iteratorError135=err;}finally{try{if(!_iteratorNormalCompletion135&&_iterator135.return){_iterator135.return();}}finally{if(_didIteratorError135){throw _iteratorError135;}}}var buffer=Potree.LASExporter.toLAS(points);var blob=new Blob([buffer],{type:"application/octet-binary"});$('#potree_download_profile_link').attr('href',URL.createObjectURL(blob));//let u8view = new Uint8Array(buffer);
//let binString = '';
//for (let i = 0; i < u8view.length; i++) {
//	binString += String.fromCharCode(u8view[i]);
//}
//
//let uri = 'data:application/octet-stream;base64,' + btoa(binString);
//$('#potree_download_profile_link').attr('href', uri);
        });}},{key:'selectPoint',value:function selectPoint(mileage,elevation,radius){var closest={distance:Infinity,pointcloud:null,points:null,index:null};var pointBox=new THREE.Box2(new THREE.Vector2(mileage-radius,elevation-radius),new THREE.Vector2(mileage+radius,elevation+radius));//let debugNode = this.scene.getObjectByName("select_debug_node");
//if(!debugNode){
//	debugNode = new THREE.Object3D();
//	debugNode.name = "select_debug_node";
//	this.scene.add(debugNode);
//}
//debugNode.children = [];
//let debugPointBox = new THREE.Box3(
//	new THREE.Vector3(...pointBox.min.toArray(), -1),
//	new THREE.Vector3(...pointBox.max.toArray(), +1)
//);
//debugNode.add(new Potree.Box3Helper(debugPointBox, 0xff0000));
        var numTested=0;var numSkipped=0;var numTestedPoints=0;var numSkippedPoints=0;var _iteratorNormalCompletion137=true;var _didIteratorError137=false;var _iteratorError137=undefined;try{for(var _iterator137=this.pointclouds[Symbol.iterator](),_step137;!(_iteratorNormalCompletion137=(_step137=_iterator137.next()).done);_iteratorNormalCompletion137=true){var _step137$value=_slicedToArray(_step137.value,2),pointcloud=_step137$value[0],entry=_step137$value[1];var _iteratorNormalCompletion139=true;var _didIteratorError139=false;var _iteratorError139=undefined;try{for(var _iterator139=entry.points[Symbol.iterator](),_step139;!(_iteratorNormalCompletion139=(_step139=_iterator139.next()).done);_iteratorNormalCompletion139=true){var _points=_step139.value;var collisionBox=new THREE.Box2(new THREE.Vector2(_points.projectedBox.min.x,_points.projectedBox.min.z),new THREE.Vector2(_points.projectedBox.max.x,_points.projectedBox.max.z));var intersects=collisionBox.intersectsBox(pointBox);if(!intersects){numSkipped++;numSkippedPoints+=_points.numPoints;continue;}//let debugCollisionBox = new THREE.Box3(
//	new THREE.Vector3(...collisionBox.min.toArray(), -1),
//	new THREE.Vector3(...collisionBox.max.toArray(), +1)
//);
//debugNode.add(new Potree.Box3Helper(debugCollisionBox));
            numTested++;numTestedPoints+=_points.numPoints;for(var _i90=0;_i90<_points.numPoints;_i90++){var m=_points.data.mileage[_i90]-mileage;var e=_points.data.position[3*_i90+2]-elevation;var r=Math.sqrt(m*m+e*e);if(r<radius&&r<closest.distance){closest={distance:r,pointcloud:pointcloud,points:_points,index:_i90};}}}}catch(err){_didIteratorError139=true;_iteratorError139=err;}finally{try{if(!_iteratorNormalCompletion139&&_iterator139.return){_iterator139.return();}}finally{if(_didIteratorError139){throw _iteratorError139;}}}}//console.log(`nodes: ${numTested}, ${numSkipped} || points: ${numTestedPoints}, ${numSkippedPoints}`);
        }catch(err){_didIteratorError137=true;_iteratorError137=err;}finally{try{if(!_iteratorNormalCompletion137&&_iterator137.return){_iterator137.return();}}finally{if(_didIteratorError137){throw _iteratorError137;}}}if(closest.distance<Infinity){var points=closest.points;var point={};var attributes=Object.keys(points.data);var _iteratorNormalCompletion138=true;var _didIteratorError138=false;var _iteratorError138=undefined;try{for(var _iterator138=attributes[Symbol.iterator](),_step138;!(_iteratorNormalCompletion138=(_step138=_iterator138.next()).done);_iteratorNormalCompletion138=true){var attribute=_step138.value;var attributeData=points.data[attribute];var itemSize=attributeData.length/points.numPoints;var value=attributeData.subarray(itemSize*closest.index,itemSize*closest.index+itemSize);if(value.length===1){point[attribute]=value[0];}else{point[attribute]=value;}}}catch(err){_didIteratorError138=true;_iteratorError138=err;}finally{try{if(!_iteratorNormalCompletion138&&_iterator138.return){_iterator138.return();}}finally{if(_didIteratorError138){throw _iteratorError138;}}}return point;}else{return null;}}},{key:'initTHREE',value:function initTHREE(){this.renderer=new THREE.WebGLRenderer({alpha:true,premultipliedAlpha:false});this.renderer.setClearColor(0x000000,0);this.renderer.setSize(10,10);this.renderer.autoClear=true;this.renderArea.append($(this.renderer.domElement));this.renderer.domElement.tabIndex='2222';this.renderer.context.getExtension('EXT_frag_depth');$(this.renderer.domElement).css('width','100%');$(this.renderer.domElement).css('height','100%');this.camera=new THREE.OrthographicCamera(-1000,1000,1000,-1000,-1000,1000);this.camera.up.set(0,0,1);this.camera.rotation.order="ZXY";this.camera.rotation.x=Math.PI/2.0;this.scene=new THREE.Scene();var sg=new THREE.SphereGeometry(1,16,16);var sm=new THREE.MeshNormalMaterial();this.pickSphere=new THREE.Mesh(sg,sm);//this.pickSphere.visible = false;
        this.scene.add(this.pickSphere);this.viewerPickSphere=new THREE.Mesh(sg,sm);this.pointCloudRoot=new THREE.Object3D();this.scene.add(this.pointCloudRoot);}},{key:'initSVG',value:function initSVG(){var width=this.renderArea[0].clientWidth;var height=this.renderArea[0].clientHeight;var marginLeft=this.renderArea[0].offsetLeft;this.svg.selectAll('*').remove();this.scaleX=d3.scale.linear().domain([this.camera.left+this.camera.position.x,this.camera.right+this.camera.position.x]).range([0,width]);this.scaleY=d3.scale.linear().domain([this.camera.bottom+this.camera.position.z,this.camera.top+this.camera.position.z]).range([height,0]);this.xAxis=d3.svg.axis().scale(this.scaleX).orient('bottom').innerTickSize(-height).outerTickSize(1).tickPadding(10).ticks(width/50);this.yAxis=d3.svg.axis().scale(this.scaleY).orient('left').innerTickSize(-width).outerTickSize(1).tickPadding(10).ticks(height/20);this.elXAxis=this.svg.append('g').attr('class','x axis').attr('transform','translate('+marginLeft+', '+height+')').call(this.xAxis);this.elYAxis=this.svg.append('g').attr('class','y axis').attr('transform','translate('+marginLeft+', 0)').call(this.yAxis);}},{key:'setProfile',value:function setProfile(profile){this.render();}},{key:'addPoints',value:function addPoints(pointcloud,points){var _this75=this;//this.lastAddPointsTimestamp = new Date().getTime();
        var entry=this.pointclouds.get(pointcloud);if(!entry){entry=new ProfilePointCloudEntry();this.pointclouds.set(pointcloud,entry);var materialChanged=function materialChanged(){return _this75.render();};pointcloud.material.addEventListener('material_property_changed',materialChanged);this.addEventListener("on_reset_once",function(){pointcloud.material.removeEventListener('material_property_changed',materialChanged);});}entry.addPoints(points);this.pointCloudRoot.add(entry.sceneNode);this.projectedBox.union(entry.projectedBox);//console.log(this.projectedBox.min.toArray().map(v => v.toFixed(2)).join(", "));
//console.log(this.projectedBox.getSize().toArray().map(v => v.toFixed(2)).join(", "));
        if(this.autoFit){var width=this.renderArea[0].clientWidth;var height=this.renderArea[0].clientHeight;var size=this.projectedBox.getSize();var sx=width/size.x;var sy=height/size.z;var scale=Math.min(sx,sy);var center=this.projectedBox.getCenter();this.scale.set(scale,scale,1);this.camera.position.copy(center);//console.log("camera: ", this.camera.position.toArray().join(", "));
        }//console.log(entry);
        this.render();var numPoints=0;var _iteratorNormalCompletion140=true;var _didIteratorError140=false;var _iteratorError140=undefined;try{for(var _iterator140=this.pointclouds.entries()[Symbol.iterator](),_step140;!(_iteratorNormalCompletion140=(_step140=_iterator140.next()).done);_iteratorNormalCompletion140=true){var _step140$value=_slicedToArray(_step140.value,2),key=_step140$value[0],value=_step140$value[1];numPoints+=value.points.reduce(function(a,i){return a+i.numPoints;},0);}}catch(err){_didIteratorError140=true;_iteratorError140=err;}finally{try{if(!_iteratorNormalCompletion140&&_iterator140.return){_iterator140.return();}}finally{if(_didIteratorError140){throw _iteratorError140;}}}$('#profile_num_points').html(Potree.utils.addCommas(numPoints));}},{key:'reset',value:function reset(){this.lastReset=new Date().getTime();this.dispatchEvent({type:"on_reset_once"});this.removeEventListeners("on_reset_once");this.autoFit=true;this.projectedBox=new THREE.Box3();var _iteratorNormalCompletion141=true;var _didIteratorError141=false;var _iteratorError141=undefined;try{for(var _iterator141=this.pointclouds[Symbol.iterator](),_step141;!(_iteratorNormalCompletion141=(_step141=_iterator141.next()).done);_iteratorNormalCompletion141=true){var _step141$value=_slicedToArray(_step141.value,2),key=_step141$value[0],entry=_step141$value[1];entry.dispose();}}catch(err){_didIteratorError141=true;_iteratorError141=err;}finally{try{if(!_iteratorNormalCompletion141&&_iterator141.return){_iterator141.return();}}finally{if(_didIteratorError141){throw _iteratorError141;}}}this.pointclouds.clear();this.mouseIsDown=false;this.mouse.set(0,0);this.scale.set(1,1,1);this.pickSphere.visible=false;this.pointCloudRoot.children=[];this.elRoot.find('#profileSelectionProperties').hide();this.render();}},{key:'show',value:function show(){this.elRoot.fadeIn();this.enabled=true;}},{key:'hide',value:function hide(){this.elRoot.fadeOut();this.enabled=false;}},{key:'updateScales',value:function updateScales(){var width=this.renderArea[0].clientWidth;var height=this.renderArea[0].clientHeight;var left=-width/2/this.scale.x;var right=+width/2/this.scale.x;var top=+height/2/this.scale.y;var bottom=-height/2/this.scale.y;this.camera.left=left;this.camera.right=right;this.camera.top=top;this.camera.bottom=bottom;this.camera.updateProjectionMatrix();this.scaleX.domain([this.camera.left+this.camera.position.x,this.camera.right+this.camera.position.x]).range([0,width]);this.scaleY.domain([this.camera.bottom+this.camera.position.z,this.camera.top+this.camera.position.z]).range([height,0]);var marginLeft=this.renderArea[0].offsetLeft;this.xAxis.scale(this.scaleX).orient('bottom').innerTickSize(-height).outerTickSize(1).tickPadding(10).ticks(width/50);this.yAxis.scale(this.scaleY).orient('left').innerTickSize(-width).outerTickSize(1).tickPadding(10).ticks(height/20);this.elXAxis.attr('transform','translate('+marginLeft+', '+height+')').call(this.xAxis);this.elYAxis.attr('transform','translate('+marginLeft+', 0)').call(this.yAxis);}},{key:'requestScaleUpdate',value:function requestScaleUpdate(){var threshold=100;var allowUpdate=this.lastReset===undefined||this.lastScaleUpdate===undefined||new Date().getTime()-this.lastReset>threshold&&new Date().getTime()-this.lastScaleUpdate>threshold;if(allowUpdate){this.updateScales();this.lastScaleUpdate=new Date().getTime();this.scaleUpdatePending=false;}else if(!this.scaleUpdatePending){setTimeout(this.requestScaleUpdate.bind(this),100);this.scaleUpdatePending=true;}}},{key:'render',value:function render(){var width=this.renderArea[0].clientWidth;var height=this.renderArea[0].clientHeight;//this.updateScales();
        {// THREEJS
            var radius=Math.abs(this.scaleX.invert(0)-this.scaleX.invert(5));this.pickSphere.scale.set(radius,radius,radius);//this.pickSphere.position.z = this.camera.far - radius;
//this.pickSphere.position.y = 0;
            var _iteratorNormalCompletion142=true;var _didIteratorError142=false;var _iteratorError142=undefined;try{for(var _iterator142=this.pointclouds[Symbol.iterator](),_step142;!(_iteratorNormalCompletion142=(_step142=_iterator142.next()).done);_iteratorNormalCompletion142=true){var _step142$value=_slicedToArray(_step142.value,2),pointcloud=_step142$value[0],entry=_step142$value[1];var _material9=entry.material;_material9.pointColorType=pointcloud.material.pointColorType;_material9.uniforms.uColor=pointcloud.material.uniforms.uColor;_material9.uniforms.intensityRange.value=pointcloud.material.uniforms.intensityRange.value;_material9.elevationRange=pointcloud.material.elevationRange;_material9.rgbGamma=pointcloud.material.rgbGamma;_material9.rgbContrast=pointcloud.material.rgbContrast;_material9.rgbBrightness=pointcloud.material.rgbBrightness;_material9.intensityRange=pointcloud.material.intensityRange;_material9.intensityGamma=pointcloud.material.intensityGamma;_material9.intensityContrast=pointcloud.material.intensityContrast;_material9.intensityBrightness=pointcloud.material.intensityBrightness;_material9.uniforms.wRGB.value=pointcloud.material.uniforms.wRGB.value;_material9.uniforms.wIntensity.value=pointcloud.material.uniforms.wIntensity.value;_material9.uniforms.wElevation.value=pointcloud.material.uniforms.wElevation.value;_material9.uniforms.wClassification.value=pointcloud.material.uniforms.wClassification.value;_material9.uniforms.wReturnNumber.value=pointcloud.material.uniforms.wReturnNumber.value;_material9.uniforms.wSourceID.value=pointcloud.material.uniforms.wSourceID.value;}}catch(err){_didIteratorError142=true;_iteratorError142=err;}finally{try{if(!_iteratorNormalCompletion142&&_iterator142.return){_iterator142.return();}}finally{if(_didIteratorError142){throw _iteratorError142;}}}this.pickSphere.visible=true;this.renderer.setSize(width,height);this.renderer.render(this.scene,this.camera);}this.requestScaleUpdate();}}]);return ProfileWindow;}(THREE.EventDispatcher);Potree.ProfileWindowController=function(){function ProfileWindowController(viewer){var _this76=this;_classCallCheck(this,ProfileWindowController);this.viewer=viewer;this.profileWindow=viewer.profileWindow;this.profile=null;this.numPoints=0;this.threshold=60*1000;this.scheduledRecomputeTime=null;this.enabled=true;this.requests=[];this._recompute=function(){_this76.recompute();};this.viewer.addEventListener("scene_changed",function(e){e.oldScene.removeEventListener("pointcloud_added",_this76._recompute);e.scene.addEventListener("pointcloud_added",_this76._recompute);});this.viewer.scene.addEventListener("pointcloud_added",this._recompute);}_createClass(ProfileWindowController,[{key:'setProfile',value:function setProfile(profile){if(this.profile!==null&&this.profile!==profile){this.profile.removeEventListener('marker_moved',this._recompute);this.profile.removeEventListener('marker_added',this._recompute);this.profile.removeEventListener('marker_removed',this._recompute);this.profile.removeEventListener('width_changed',this._recompute);}this.profile=profile;{this.profile.addEventListener('marker_moved',this._recompute);this.profile.addEventListener('marker_added',this._recompute);this.profile.addEventListener('marker_removed',this._recompute);this.profile.addEventListener('width_changed',this._recompute);}this.recompute();}},{key:'reset',value:function reset(){this.profileWindow.reset();this.numPoints=0;if(this.profile){var _iteratorNormalCompletion143=true;var _didIteratorError143=false;var _iteratorError143=undefined;try{for(var _iterator143=this.requests[Symbol.iterator](),_step143;!(_iteratorNormalCompletion143=(_step143=_iterator143.next()).done);_iteratorNormalCompletion143=true){var request=_step143.value;request.cancel();}}catch(err){_didIteratorError143=true;_iteratorError143=err;}finally{try{if(!_iteratorNormalCompletion143&&_iterator143.return){_iterator143.return();}}finally{if(_didIteratorError143){throw _iteratorError143;}}}}}},{key:'progressHandler',value:function progressHandler(pointcloud,progress){var _iteratorNormalCompletion144=true;var _didIteratorError144=false;var _iteratorError144=undefined;try{for(var _iterator144=progress.segments[Symbol.iterator](),_step144;!(_iteratorNormalCompletion144=(_step144=_iterator144.next()).done);_iteratorNormalCompletion144=true){var segment=_step144.value;this.profileWindow.addPoints(pointcloud,segment.points);this.numPoints+=segment.points.numPoints;}}catch(err){_didIteratorError144=true;_iteratorError144=err;}finally{try{if(!_iteratorNormalCompletion144&&_iterator144.return){_iterator144.return();}}finally{if(_didIteratorError144){throw _iteratorError144;}}}}},{key:'cancel',value:function cancel(){var _iteratorNormalCompletion145=true;var _didIteratorError145=false;var _iteratorError145=undefined;try{for(var _iterator145=this.requests[Symbol.iterator](),_step145;!(_iteratorNormalCompletion145=(_step145=_iterator145.next()).done);_iteratorNormalCompletion145=true){var request=_step145.value;request.cancel();// request.finishLevelThenCancel();
    }}catch(err){_didIteratorError145=true;_iteratorError145=err;}finally{try{if(!_iteratorNormalCompletion145&&_iterator145.return){_iterator145.return();}}finally{if(_didIteratorError145){throw _iteratorError145;}}}this.requests=[];}},{key:'finishLevelThenCancel',value:function finishLevelThenCancel(){var _iteratorNormalCompletion146=true;var _didIteratorError146=false;var _iteratorError146=undefined;try{for(var _iterator146=this.requests[Symbol.iterator](),_step146;!(_iteratorNormalCompletion146=(_step146=_iterator146.next()).done);_iteratorNormalCompletion146=true){var request=_step146.value;request.finishLevelThenCancel();}}catch(err){_didIteratorError146=true;_iteratorError146=err;}finally{try{if(!_iteratorNormalCompletion146&&_iterator146.return){_iterator146.return();}}finally{if(_didIteratorError146){throw _iteratorError146;}}}this.requests=[];}},{key:'recompute',value:function recompute(){var _this77=this;if(!this.profile){return;}if(this.scheduledRecomputeTime!==null&&this.scheduledRecomputeTime>new Date().getTime()){return;}else{this.scheduledRecomputeTime=new Date().getTime()+100;}this.scheduledRecomputeTime=null;this.reset();var _iteratorNormalCompletion147=true;var _didIteratorError147=false;var _iteratorError147=undefined;try{var _loop8=function _loop8(){var pointcloud=_step147.value;var request=pointcloud.getPointsInProfile(_this77.profile,null,{'onProgress':function onProgress(event){if(!_this77.enabled){return;}_this77.progressHandler(pointcloud,event.points);if(_this77.numPoints>_this77.threshold){_this77.finishLevelThenCancel();}},'onFinish':function onFinish(event){if(!_this77.enabled){}},'onCancel':function onCancel(){if(!_this77.enabled){}}});_this77.requests.push(request);};for(var _iterator147=this.viewer.scene.pointclouds.filter(function(p){return p.visible;})[Symbol.iterator](),_step147;!(_iteratorNormalCompletion147=(_step147=_iterator147.next()).done);_iteratorNormalCompletion147=true){_loop8();}}catch(err){_didIteratorError147=true;_iteratorError147=err;}finally{try{if(!_iteratorNormalCompletion147&&_iterator147.return){_iterator147.return();}}finally{if(_didIteratorError147){throw _iteratorError147;}}}}}]);return ProfileWindowController;}();// http://epsg.io/
proj4.defs('WGS 84 (long/lat)','+proj=longlat +datum=WGS84 +no_defs');//proj4.defs('UTM10N', '+proj=utm +zone=10 +ellps=GRS80 +datum=NAD83 +units=m +no_defs');
Potree.MapView=function(){function _class14(viewer){_classCallCheck(this,_class14);this.viewer=viewer;this.webMapService='WMTS';this.mapProjectionName='EPSG:4326';this.mapProjection=proj4.defs(this.mapProjectionName);this.sceneProjection=null;this.extentsLayer=null;this.cameraLayer=null;this.toolLayer=null;this.sourcesLayer=null;this.sourcesLabelLayer=null;this.enabled=false;this.createAnnotationStyle=function(text){return[new ol.style.Style({image:new ol.style.Circle({radius:10,stroke:new ol.style.Stroke({color:[255,255,255,0.5],width:2}),fill:new ol.style.Fill({color:[0,0,0,0.5]})})})/*,
				new ol.style.Style({
					text: new ol.style.Text({
						font: '12px helvetica,sans-serif',
						text: text,
						fill: new ol.style.Fill({
							color: '#000'
						}),
						stroke: new ol.style.Stroke({
							color: '#fff',
							width: 2
						})
					})
				}) */];};this.createLabelStyle=function(text){var style=new ol.style.Style({image:new ol.style.Circle({radius:6,stroke:new ol.style.Stroke({color:'white',width:2}),fill:new ol.style.Fill({color:'green'})}),text:new ol.style.Text({font:'12px helvetica,sans-serif',text:text,fill:new ol.style.Fill({color:'#000'}),stroke:new ol.style.Stroke({color:'#fff',width:2})})});return style;};}_createClass(_class14,[{key:'showSources',value:function showSources(show){this.sourcesLayer.setVisible(show);this.sourcesLabelLayer.setVisible(show);}},{key:'init',value:function init(){var _this78=this;this.elMap=$('#potree_map');this.elMap.draggable({handle:$('#potree_map_header')});this.elMap.resizable();this.elTooltip=$('<div style="position: relative; z-index: 100"></div>');this.elMap.append(this.elTooltip);var extentsLayer=this.getExtentsLayer();var cameraLayer=this.getCameraLayer();this.getToolLayer();var sourcesLayer=this.getSourcesLayer();this.getSourcesLabelLayer();this.getAnnotationsLayer();var mousePositionControl=new ol.control.MousePosition({coordinateFormat:ol.coordinate.createStringXY(5),projection:'EPSG:4326',undefinedHTML:'&nbsp;'});var _this=this;var DownloadSelectionControl=function DownloadSelectionControl(optOptions){var options=optOptions||{};// TOGGLE TILES
        var btToggleTiles=document.createElement('button');btToggleTiles.innerHTML='T';btToggleTiles.addEventListener('click',function(){var visible=sourcesLayer.getVisible();_this.showSources(!visible);},false);btToggleTiles.style.float='left';btToggleTiles.title='show / hide tiles';// DOWNLOAD SELECTED TILES
        var link=document.createElement('a');link.href='#';link.download='list.txt';link.style.float='left';var button=document.createElement('button');button.innerHTML='D';link.appendChild(button);var handleDownload=function handleDownload(e){var features=selectedFeatures.getArray();var url=[document.location.protocol,'//',document.location.host,document.location.pathname].join('');if(features.length===0){alert('No tiles were selected. Select area with ctrl + left mouse button!');e.preventDefault();e.stopImmediatePropagation();return false;}else if(features.length===1){var feature=features[0];if(feature.source){var cloudjsurl=feature.pointcloud.pcoGeometry.url;var sourceurl=new URL(url+'/../'+cloudjsurl+'/../source/'+feature.source.name);link.href=sourceurl.href;link.download=feature.source.name;}}else{var content='';for(var _i91=0;_i91<features.length;_i91++){var _feature=features[_i91];if(_feature.source){var _cloudjsurl=_feature.pointcloud.pcoGeometry.url;var _sourceurl=new URL(url+'/../'+_cloudjsurl+'/../source/'+_feature.source.name);content+=_sourceurl.href+'\n';}}var uri='data:application/octet-stream;base64,'+btoa(content);link.href=uri;link.download='list_of_files.txt';}};button.addEventListener('click',handleDownload,false);// assemble container
        var element=document.createElement('div');element.className='ol-unselectable ol-control';element.appendChild(link);element.appendChild(btToggleTiles);element.style.bottom='0.5em';element.style.left='0.5em';element.title='Download file or list of selected tiles. Select tile with left mouse button or area using ctrl + left mouse.';ol.control.Control.call(this,{element:element,target:options.target});};ol.inherits(DownloadSelectionControl,ol.control.Control);this.map=new ol.Map({controls:ol.control.defaults({attributionOptions:{collapsible:false}}).extend([// this.controls.zoomToExtent,
            new DownloadSelectionControl(),mousePositionControl]),layers:[new ol.layer.Tile({source:new ol.source.OSM()}),this.toolLayer,this.annotationsLayer,this.sourcesLayer,this.sourcesLabelLayer,extentsLayer,cameraLayer],target:'potree_map_content',view:new ol.View({center:this.olCenter,zoom:9})});// DRAGBOX / SELECTION
        this.dragBoxLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({stroke:new ol.style.Stroke({color:'rgba(0, 0, 255, 1)',width:2})})});this.map.addLayer(this.dragBoxLayer);var select=new ol.interaction.Select();this.map.addInteraction(select);var selectedFeatures=select.getFeatures();var dragBox=new ol.interaction.DragBox({condition:ol.events.condition.platformModifierKeyOnly});this.map.addInteraction(dragBox);this.map.on('pointermove',function(evt){var pixel=evt.pixel;var feature=_this78.map.forEachFeatureAtPixel(pixel,function(feature){return feature;});// console.log(feature);
// this.elTooltip.css("display", feature ? '' : 'none');
            _this78.elTooltip.css('display','none');if(feature&&feature.onHover){feature.onHover(evt);// overlay.setPosition(evt.coordinate);
// tooltip.innerHTML = feature.get('name');
            }});this.map.on('click',function(evt){var pixel=evt.pixel;var feature=_this78.map.forEachFeatureAtPixel(pixel,function(feature){return feature;});if(feature&&feature.onHover){feature.onClick(evt);}});dragBox.on('boxend',function(e){// features that intersect the box are added to the collection of
// selected features, and their names are displayed in the "info"
// div
            var extent=dragBox.getGeometry().getExtent();_this78.getSourcesLayer().getSource().forEachFeatureIntersectingExtent(extent,function(feature){selectedFeatures.push(feature);});});// clear selection when drawing a new box and when clicking on the map
        dragBox.on('boxstart',function(e){selectedFeatures.clear();});this.map.on('click',function(){selectedFeatures.clear();});this.viewer.addEventListener('scene_changed',function(e){_this78.setScene(e.scene);});this.onPointcloudAdded=function(e){_this78.load(e.pointcloud);};this.onAnnotationAdded=function(e){if(!_this78.sceneProjection){return;}var annotation=e.annotation;var position=annotation.position;var mapPos=_this78.toMap.forward([position.x,position.y]);var feature=new ol.Feature({geometry:new ol.geom.Point(mapPos),name:annotation.title});feature.setStyle(_this78.createAnnotationStyle(annotation.title));feature.onHover=function(evt){var coordinates=feature.getGeometry().getCoordinates();var p=_this78.map.getPixelFromCoordinate(coordinates);_this78.elTooltip.html(annotation.title);_this78.elTooltip.css('display','');_this78.elTooltip.css('left',p[0]+'px');_this78.elTooltip.css('top',p[1]+'px');};feature.onClick=function(evt){annotation.clickTitle();};_this78.getAnnotationsLayer().getSource().addFeature(feature);};this.setScene(this.viewer.scene);}},{key:'setScene',value:function setScene(scene){var _this79=this;if(this.scene===scene){return;};if(this.scene){this.scene.removeEventListener('pointcloud_added',this.onPointcloudAdded);this.scene.annotations.removeEventListener('annotation_added',this.onAnnotationAdded);}this.scene=scene;this.scene.addEventListener('pointcloud_added',this.onPointcloudAdded);this.scene.annotations.addEventListener('annotation_added',this.onAnnotationAdded);var _iteratorNormalCompletion148=true;var _didIteratorError148=false;var _iteratorError148=undefined;try{for(var _iterator148=this.viewer.scene.pointclouds[Symbol.iterator](),_step148;!(_iteratorNormalCompletion148=(_step148=_iterator148.next()).done);_iteratorNormalCompletion148=true){var _pointcloud12=_step148.value;this.load(_pointcloud12);}}catch(err){_didIteratorError148=true;_iteratorError148=err;}finally{try{if(!_iteratorNormalCompletion148&&_iterator148.return){_iterator148.return();}}finally{if(_didIteratorError148){throw _iteratorError148;}}}this.viewer.scene.annotations.traverseDescendants(function(annotation){_this79.onAnnotationAdded({annotation:annotation});});}},{key:'getExtentsLayer',value:function getExtentsLayer(){if(this.extentsLayer){return this.extentsLayer;}this.gExtent=new ol.geom.LineString([[0,0],[0,0]]);var feature=new ol.Feature(this.gExtent);var featureVector=new ol.source.Vector({features:[feature]});this.extentsLayer=new ol.layer.Vector({source:featureVector,style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(255, 255, 255, 0.2)'}),stroke:new ol.style.Stroke({color:'#0000ff',width:2}),image:new ol.style.Circle({radius:3,fill:new ol.style.Fill({color:'#0000ff'})})})});return this.extentsLayer;}},{key:'getAnnotationsLayer',value:function getAnnotationsLayer(){if(this.annotationsLayer){return this.annotationsLayer;}this.annotationsLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(255, 0, 0, 1)'}),stroke:new ol.style.Stroke({color:'rgba(255, 0, 0, 1)',width:2})})});return this.annotationsLayer;}},{key:'getCameraLayer',value:function getCameraLayer(){if(this.cameraLayer){return this.cameraLayer;}// CAMERA LAYER
        this.gCamera=new ol.geom.LineString([[0,0],[0,0],[0,0],[0,0]]);var feature=new ol.Feature(this.gCamera);var featureVector=new ol.source.Vector({features:[feature]});this.cameraLayer=new ol.layer.Vector({source:featureVector,style:new ol.style.Style({stroke:new ol.style.Stroke({color:'#0000ff',width:2})})});return this.cameraLayer;}},{key:'getToolLayer',value:function getToolLayer(){if(this.toolLayer){return this.toolLayer;}this.toolLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(255, 0, 0, 1)'}),stroke:new ol.style.Stroke({color:'rgba(255, 0, 0, 1)',width:2})})});return this.toolLayer;}},{key:'getSourcesLayer',value:function getSourcesLayer(){if(this.sourcesLayer){return this.sourcesLayer;}this.sourcesLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(0, 0, 150, 0.1)'}),stroke:new ol.style.Stroke({color:'rgba(0, 0, 150, 1)',width:1})})});return this.sourcesLayer;}},{key:'getSourcesLabelLayer',value:function getSourcesLabelLayer(){if(this.sourcesLabelLayer){return this.sourcesLabelLayer;}this.sourcesLabelLayer=new ol.layer.Vector({source:new ol.source.Vector({}),style:new ol.style.Style({fill:new ol.style.Fill({color:'rgba(255, 0, 0, 0.1)'}),stroke:new ol.style.Stroke({color:'rgba(255, 0, 0, 1)',width:2})}),minResolution:0.01,maxResolution:20});return this.sourcesLabelLayer;}},{key:'setSceneProjection',value:function setSceneProjection(sceneProjection){this.sceneProjection=sceneProjection;this.toMap=proj4(this.sceneProjection,this.mapProjection);this.toScene=proj4(this.mapProjection,this.sceneProjection);}},{key:'getMapExtent',value:function getMapExtent(){var bb=this.viewer.getBoundingBox();var bottomLeft=this.toMap.forward([bb.min.x,bb.min.y]);var bottomRight=this.toMap.forward([bb.max.x,bb.min.y]);var topRight=this.toMap.forward([bb.max.x,bb.max.y]);var topLeft=this.toMap.forward([bb.min.x,bb.max.y]);var extent={bottomLeft:bottomLeft,bottomRight:bottomRight,topRight:topRight,topLeft:topLeft};return extent;}},{key:'getMapCenter',value:function getMapCenter(){var mapExtent=this.getMapExtent();var mapCenter=[(mapExtent.bottomLeft[0]+mapExtent.topRight[0])/2,(mapExtent.bottomLeft[1]+mapExtent.topRight[1])/2];return mapCenter;}},{key:'updateToolDrawings',value:function updateToolDrawings(){this.toolLayer.getSource().clear();var profiles=this.viewer.profileTool.profiles;for(var _i92=0;_i92<profiles.length;_i92++){var profile=profiles[_i92];var coordinates=[];for(var j=0;j<profile.points.length;j++){var point=profile.points[j];var pointMap=this.toMap.forward([point.x,point.y]);coordinates.push(pointMap);}var line=new ol.geom.LineString(coordinates);var feature=new ol.Feature(line);this.toolLayer.getSource().addFeature(feature);}var measurements=this.viewer.measuringTool.measurements;for(var _i93=0;_i93<measurements.length;_i93++){var measurement=measurements[_i93];var _coordinates=[];for(var _j3=0;_j3<measurement.points.length;_j3++){var _point6=measurement.points[_j3].position;var _pointMap=this.toMap.forward([_point6.x,_point6.y]);_coordinates.push(_pointMap);}if(measurement.closed&&measurement.points.length>0){_coordinates.push(_coordinates[0]);}var _line=new ol.geom.LineString(_coordinates);var _feature2=new ol.Feature(_line);this.toolLayer.getSource().addFeature(_feature2);}}},{key:'load',value:function load(pointcloud){var _this80=this;if(!pointcloud){return;}if(!pointcloud.projection){return;}if(!this.sceneProjection){this.setSceneProjection(pointcloud.projection);}var mapExtent=this.getMapExtent();var mapCenter=this.getMapCenter();var view=this.map.getView();view.setCenter(mapCenter);this.gExtent.setCoordinates([mapExtent.bottomLeft,mapExtent.bottomRight,mapExtent.topRight,mapExtent.topLeft,mapExtent.bottomLeft]);view.fit(this.gExtent,[300,300],{constrainResolution:false});var url=pointcloud.pcoGeometry.url+'/../sources.json';$.getJSON(url,function(data){var sources=data.sources;for(var _i94=0;_i94<sources.length;_i94++){var source=sources[_i94];var name=source.name;var bounds=source.bounds;var mapBounds={min:_this80.toMap.forward([bounds.min[0],bounds.min[1]]),max:_this80.toMap.forward([bounds.max[0],bounds.max[1]])};var _mapCenter=[(mapBounds.min[0]+mapBounds.max[0])/2,(mapBounds.min[1]+mapBounds.max[1])/2];var p1=_this80.toMap.forward([bounds.min[0],bounds.min[1]]);var p2=_this80.toMap.forward([bounds.max[0],bounds.min[1]]);var p3=_this80.toMap.forward([bounds.max[0],bounds.max[1]]);var p4=_this80.toMap.forward([bounds.min[0],bounds.max[1]]);// let feature = new ol.Feature({
//	'geometry': new ol.geom.LineString([p1, p2, p3, p4, p1])
// });
        var feature=new ol.Feature({'geometry':new ol.geom.Polygon([[p1,p2,p3,p4,p1]])});feature.source=source;feature.pointcloud=pointcloud;_this80.getSourcesLayer().getSource().addFeature(feature);feature=new ol.Feature({geometry:new ol.geom.Point(_mapCenter),name:name});feature.setStyle(_this80.createLabelStyle(name));_this80.sourcesLabelLayer.getSource().addFeature(feature);}});}},{key:'toggle',value:function toggle(){if(this.elMap.is(':visible')){this.elMap.css('display','none');this.enabled=false;}else{this.elMap.css('display','block');this.enabled=true;}}},{key:'update',value:function update(delta){if(!this.sceneProjection){return;}var pm=$('#potree_map');if(!this.enabled){return;}// resize
        var mapSize=this.map.getSize();var resized=pm.width()!==mapSize[0]||pm.height()!==mapSize[1];if(resized){this.map.updateSize();}//
        var camera=this.viewer.scene.getActiveCamera();var scale=this.map.getView().getResolution();var campos=camera.position;var camdir=camera.getWorldDirection();var sceneLookAt=camdir.clone().multiplyScalar(30*scale).add(campos);var geoPos=camera.position;var geoLookAt=sceneLookAt;var mapPos=new THREE.Vector2().fromArray(this.toMap.forward([geoPos.x,geoPos.y]));var mapLookAt=new THREE.Vector2().fromArray(this.toMap.forward([geoLookAt.x,geoLookAt.y]));var mapDir=new THREE.Vector2().subVectors(mapLookAt,mapPos).normalize();mapLookAt=mapPos.clone().add(mapDir.clone().multiplyScalar(30*scale));var mapLength=mapPos.distanceTo(mapLookAt);var mapSide=new THREE.Vector2(-mapDir.y,mapDir.x);var p1=mapPos.toArray();var p2=mapLookAt.clone().sub(mapSide.clone().multiplyScalar(0.3*mapLength)).toArray();var p3=mapLookAt.clone().add(mapSide.clone().multiplyScalar(0.3*mapLength)).toArray();this.gCamera.setCoordinates([p1,p2,p3,p1]);}},{key:'sourcesVisible',get:function get(){return this.getSourcesLayer().getVisible();},set:function set(value){this.getSourcesLayer().setVisible(value);}}]);return _class14;}();var initSidebar=function initSidebar(viewer){var createToolIcon=function createToolIcon(icon,title,callback){var element=$('\n\t\t\t<img src="'+icon+'"\n\t\t\t\tstyle="width: 32px; height: 32px"\n\t\t\t\tclass="button-icon"\n\t\t\t\tdata-i18n="'+title+'" />\n\t\t');element.click(callback);return element;};var measuringTool=new Potree.MeasuringTool(viewer);var profileTool=new Potree.ProfileTool(viewer);var volumeTool=new Potree.VolumeTool(viewer);function initToolbar(){// ANGLE
    var elToolbar=$('#tools');elToolbar.append(createToolIcon(Potree.resourcePath+'/icons/angle.png','[title]tt.angle_measurement',function(){$('#menu_measurements').next().slideDown();var measurement=measuringTool.startInsertion({showDistances:false,showAngles:true,showArea:false,closed:true,maxMarkers:3,name:'Angle'});var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===measurement.uuid;});$.jstree.reference(jsonNode.id).deselect_all();$.jstree.reference(jsonNode.id).select_node(jsonNode.id);}));// POINT
    elToolbar.append(createToolIcon(Potree.resourcePath+'/icons/point.svg','[title]tt.point_measurement',function(){$('#menu_measurements').next().slideDown();var measurement=measuringTool.startInsertion({showDistances:false,showAngles:false,showCoordinates:true,showArea:false,closed:true,maxMarkers:1,name:'Point'});var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===measurement.uuid;});$.jstree.reference(jsonNode.id).deselect_all();$.jstree.reference(jsonNode.id).select_node(jsonNode.id);}));// DISTANCE
    elToolbar.append(createToolIcon(Potree.resourcePath+'/icons/distance.svg','[title]tt.distance_measurement',function(){$('#menu_measurements').next().slideDown();var measurement=measuringTool.startInsertion({showDistances:true,showArea:false,closed:false,name:'Distance'});var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===measurement.uuid;});$.jstree.reference(jsonNode.id).deselect_all();$.jstree.reference(jsonNode.id).select_node(jsonNode.id);}));// HEIGHT
    elToolbar.append(createToolIcon(Potree.resourcePath+'/icons/height.svg','[title]tt.height_measurement',function(){$('#menu_measurements').next().slideDown();var measurement=measuringTool.startInsertion({showDistances:false,showHeight:true,showArea:false,closed:false,maxMarkers:2,name:'Height'});var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===measurement.uuid;});$.jstree.reference(jsonNode.id).deselect_all();$.jstree.reference(jsonNode.id).select_node(jsonNode.id);}));// AREA
    elToolbar.append(createToolIcon(Potree.resourcePath+'/icons/area.svg','[title]tt.area_measurement',function(){$('#menu_measurements').next().slideDown();var measurement=measuringTool.startInsertion({showDistances:true,showArea:true,closed:true,name:'Area'});var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===measurement.uuid;});$.jstree.reference(jsonNode.id).deselect_all();$.jstree.reference(jsonNode.id).select_node(jsonNode.id);}));// VOLUME
    elToolbar.append(createToolIcon(Potree.resourcePath+'/icons/volume.svg','[title]tt.volume_measurement',function(){var volume=volumeTool.startInsertion();var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===volume.uuid;});$.jstree.reference(jsonNode.id).deselect_all();$.jstree.reference(jsonNode.id).select_node(jsonNode.id);}));// PROFILE
    elToolbar.append(createToolIcon(Potree.resourcePath+'/icons/profile.svg','[title]tt.height_profile',function(){$('#menu_measurements').next().slideDown();;var profile=profileTool.startInsertion();var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===profile.uuid;});$.jstree.reference(jsonNode.id).deselect_all();$.jstree.reference(jsonNode.id).select_node(jsonNode.id);}));// REMOVE ALL
    elToolbar.append(createToolIcon(Potree.resourcePath+'/icons/reset_tools.svg','[title]tt.remove_all_measurement',function(){viewer.scene.removeAllMeasurements();}));}function initScene(){var _this81=this;var elScene=$("#menu_scene");var elObjects=elScene.next().find("#scene_objects");var elProperties=elScene.next().find("#scene_object_properties");{var elExport=elScene.next().find("#scene_export");var geoJSONIcon=Potree.resourcePath+'/icons/file_geojson.svg';var dxfIcon=Potree.resourcePath+'/icons/file_dxf.svg';elExport.append('\n\t\t\t\tExport: <br>\n\t\t\t\t<a href="#" download="measure.json"><img name="geojson_export_button" src="'+geoJSONIcon+'" class="button-icon" style="height: 24px" /></a>\n\t\t\t\t<a href="#" download="measure.dxf"><img name="dxf_export_button" src="'+dxfIcon+'" class="button-icon" style="height: 24px" /></a>\n\t\t\t');var elDownloadJSON=elExport.find("img[name=geojson_export_button]").parent();elDownloadJSON.click(function(){var scene=viewer.scene;var measurements=[].concat(_toConsumableArray(scene.measurements),_toConsumableArray(scene.profiles),_toConsumableArray(scene.volumes));var geoJson=Potree.GeoJSONExporter.toString(measurements);var url=window.URL.createObjectURL(new Blob([geoJson],{type:'data:application/octet-stream'}));elDownloadJSON.attr('href',url);});var elDownloadDXF=elExport.find("img[name=dxf_export_button]").parent();elDownloadDXF.click(function(){var scene=viewer.scene;var measurements=[].concat(_toConsumableArray(scene.measurements),_toConsumableArray(scene.profiles),_toConsumableArray(scene.volumes));var dxf=Potree.DXFExporter.toString(measurements);var url=window.URL.createObjectURL(new Blob([dxf],{type:'data:application/octet-stream'}));elDownloadDXF.attr('href',url);});}var propertiesPanel=new Potree.PropertiesPanel(elProperties,viewer);propertiesPanel.setScene(viewer.scene);localStorage.removeItem('jstree');var tree=$('<div id="jstree_scene"></div>');elObjects.append(tree);tree.jstree({'plugins':["checkbox","state"],'core':{"dblclick_toggle":false,"state":{"checked":true},'check_callback':true,"expand_selected_onload":true},"checkbox":{"keep_selected_style":true,"three_state":false,"whole_node":false,"tie_selection":false}});var createNode=function createNode(parent,text,icon,object){var nodeID=tree.jstree('create_node',parent,{"text":text,"icon":icon,"data":object},"last",false,false);if(object.visible){tree.jstree('check_node',nodeID);}else{tree.jstree('uncheck_node',nodeID);}return nodeID;};var pcID=tree.jstree('create_node',"#",{"text":"<b>Point Clouds</b>","id":"pointclouds"},"last",false,false);var measurementID=tree.jstree('create_node',"#",{"text":"<b>Measurements</b>","id":"measurements"},"last",false,false);var annotationsID=tree.jstree('create_node',"#",{"text":"<b>Annotations</b>","id":"annotations"},"last",false,false);var otherID=tree.jstree('create_node',"#",{"text":"<b>Other</b>","id":"other"},"last",false,false);tree.jstree("check_node",pcID);tree.jstree("check_node",measurementID);tree.jstree("check_node",annotationsID);tree.jstree("check_node",otherID);tree.on('create_node.jstree',function(e,data){tree.jstree("open_all");});tree.on("select_node.jstree",function(e,data){var object=data.node.data;propertiesPanel.set(object);viewer.inputHandler.deselectAll();if(object instanceof Potree.Volume){viewer.inputHandler.toggleSelection(object);}$(viewer.renderer.domElement).focus();});tree.on("deselect_node.jstree",function(e,data){propertiesPanel.set(null);});tree.on("delete_node.jstree",function(e,data){propertiesPanel.set(null);});tree.on('dblclick','.jstree-anchor',function(e){var instance=$.jstree.reference(this);var node=instance.get_node(this);var object=node.data;// ignore double click on checkbox
    if(e.target.classList.contains("jstree-checkbox")){return;}if(object instanceof Potree.PointCloudTree){var _box3=viewer.getBoundingBox([object]);var _node26=new THREE.Object3D();_node26.boundingBox=_box3;viewer.zoomTo(_node26,1,500);}else if(object instanceof Potree.Measure){var points=object.points.map(function(p){return p.position;});var _box4=new THREE.Box3().setFromPoints(points);if(_box4.getSize().length()>0){var _node27=new THREE.Object3D();_node27.boundingBox=_box4;viewer.zoomTo(_node27,2,500);}}else if(object instanceof Potree.Profile){var _points2=object.points;var _box5=new THREE.Box3().setFromPoints(_points2);if(_box5.getSize().length()>0){var _node28=new THREE.Object3D();_node28.boundingBox=_box5;viewer.zoomTo(_node28,1,500);}}else if(object instanceof Potree.Volume){var _box6=object.boundingBox.clone().applyMatrix4(object.matrixWorld);if(_box6.getSize().length()>0){var _node29=new THREE.Object3D();_node29.boundingBox=_box6;viewer.zoomTo(_node29,1,500);}}else if(object instanceof Potree.Annotation){object.moveHere(viewer.scene.getActiveCamera());}else if(object instanceof Potree.PolygonClipVolume){var dir=object.camera.getWorldDirection();var target=void 0;if(object.camera instanceof THREE.OrthographicCamera){dir.multiplyScalar(object.camera.right);target=new THREE.Vector3().addVectors(object.camera.position,dir);viewer.setCameraMode(Potree.CameraMode.ORTHOGRAPHIC);}else if(object.camera instanceof THREE.PerspectiveCamera){dir.multiplyScalar(viewer.scene.view.radius);target=new THREE.Vector3().addVectors(object.camera.position,dir);viewer.setCameraMode(Potree.CameraMode.PERSPECTIVE);}viewer.scene.view.position.copy(object.camera.position);viewer.scene.view.lookAt(target);}else if(object instanceof THREE.SpotLight){var distance=object.distance>0?object.distance/4:5*1000;var position=object.position;var _target3=new THREE.Vector3().addVectors(position,object.getWorldDirection().multiplyScalar(distance));viewer.scene.view.position.copy(object.position);viewer.scene.view.lookAt(_target3);}else if(object instanceof THREE.Object3D){var _box7=new THREE.Box3().setFromObject(object);if(_box7.getSize().length()>0){var _node30=new THREE.Object3D();_node30.boundingBox=_box7;viewer.zoomTo(_node30,1,500);}}});tree.on("uncheck_node.jstree",function(e,data){var object=data.node.data;if(object){object.visible=false;}});tree.on("check_node.jstree",function(e,data){var object=data.node.data;if(object){object.visible=true;}});var onPointCloudAdded=function onPointCloudAdded(e){var pointcloud=e.pointcloud;var cloudIcon=Potree.resourcePath+'/icons/cloud.svg';createNode(pcID,pointcloud.name,cloudIcon,pointcloud);};var onMeasurementAdded=function onMeasurementAdded(e){var measurement=e.measurement;var icon=Potree.getMeasurementIcon(measurement);createNode(measurementID,measurement.name,icon,measurement);};var onVolumeAdded=function onVolumeAdded(e){var volume=e.volume;var icon=Potree.getMeasurementIcon(volume);var node=createNode(measurementID,volume.name,icon,volume);volume.addEventListener("visibility_changed",function(){if(volume.visible){tree.jstree('check_node',node);}else{tree.jstree('uncheck_node',node);}});};var onProfileAdded=function onProfileAdded(e){var profile=e.profile;var icon=Potree.getMeasurementIcon(profile);createNode(measurementID,profile.name,icon,profile);};var onAnnotationAdded=function onAnnotationAdded(e){var annotation=e.annotation;var annotationIcon=Potree.resourcePath+'/icons/annotation.svg';var parentID=_this81.annotationMapping.get(annotation.parent);var annotationID=createNode(parentID,annotation.title,annotationIcon,annotation);_this81.annotationMapping.set(annotation,annotationID);//let node = createNode(annotationsID, annotation.name, icon, volume);
//oldScene.annotations.removeEventListener('annotation_added', this.onAnnotationAdded);
};viewer.scene.addEventListener("pointcloud_added",onPointCloudAdded);viewer.scene.addEventListener("measurement_added",onMeasurementAdded);viewer.scene.addEventListener("profile_added",onProfileAdded);viewer.scene.addEventListener("volume_added",onVolumeAdded);viewer.scene.addEventListener("polygon_clip_volume_added",onVolumeAdded);viewer.scene.annotations.addEventListener("annotation_added",onAnnotationAdded);var onMeasurementRemoved=function onMeasurementRemoved(e){var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===e.measurement.uuid;});tree.jstree("delete_node",jsonNode.id);};var onVolumeRemoved=function onVolumeRemoved(e){var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===e.volume.uuid;});tree.jstree("delete_node",jsonNode.id);};var onProfileRemoved=function onProfileRemoved(e){var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===e.profile.uuid;});tree.jstree("delete_node",jsonNode.id);};viewer.scene.addEventListener("measurement_removed",onMeasurementRemoved);viewer.scene.addEventListener("volume_removed",onVolumeRemoved);viewer.scene.addEventListener("profile_removed",onProfileRemoved);{var annotationIcon=Potree.resourcePath+'/icons/annotation.svg';this.annotationMapping=new Map();this.annotationMapping.set(viewer.scene.annotations,annotationsID);viewer.scene.annotations.traverseDescendants(function(annotation){var parentID=_this81.annotationMapping.get(annotation.parent);var annotationID=createNode(parentID,annotation.title,annotationIcon,annotation);_this81.annotationMapping.set(annotation,annotationID);});}var _iteratorNormalCompletion149=true;var _didIteratorError149=false;var _iteratorError149=undefined;try{for(var _iterator149=viewer.scene.pointclouds[Symbol.iterator](),_step149;!(_iteratorNormalCompletion149=(_step149=_iterator149.next()).done);_iteratorNormalCompletion149=true){var _pointcloud13=_step149.value;onPointCloudAdded({pointcloud:_pointcloud13});}}catch(err){_didIteratorError149=true;_iteratorError149=err;}finally{try{if(!_iteratorNormalCompletion149&&_iterator149.return){_iterator149.return();}}finally{if(_didIteratorError149){throw _iteratorError149;}}}var _iteratorNormalCompletion150=true;var _didIteratorError150=false;var _iteratorError150=undefined;try{for(var _iterator150=viewer.scene.measurements[Symbol.iterator](),_step150;!(_iteratorNormalCompletion150=(_step150=_iterator150.next()).done);_iteratorNormalCompletion150=true){var measurement=_step150.value;onMeasurementAdded({measurement:measurement});}}catch(err){_didIteratorError150=true;_iteratorError150=err;}finally{try{if(!_iteratorNormalCompletion150&&_iterator150.return){_iterator150.return();}}finally{if(_didIteratorError150){throw _iteratorError150;}}}var _arr=[].concat(_toConsumableArray(viewer.scene.volumes),_toConsumableArray(viewer.scene.polygonClipVolumes));for(var _i95=0;_i95<_arr.length;_i95++){var volume=_arr[_i95];onVolumeAdded({volume:volume});}var _iteratorNormalCompletion151=true;var _didIteratorError151=false;var _iteratorError151=undefined;try{for(var _iterator151=viewer.scene.profiles[Symbol.iterator](),_step151;!(_iteratorNormalCompletion151=(_step151=_iterator151.next()).done);_iteratorNormalCompletion151=true){var profile=_step151.value;onProfileAdded({profile:profile});}}catch(err){_didIteratorError151=true;_iteratorError151=err;}finally{try{if(!_iteratorNormalCompletion151&&_iterator151.return){_iterator151.return();}}finally{if(_didIteratorError151){throw _iteratorError151;}}}{createNode(otherID,"Camera",null,new THREE.Camera());}viewer.addEventListener("scene_changed",function(e){propertiesPanel.setScene(e.scene);e.oldScene.removeEventListener("pointcloud_added",onPointCloudAdded);e.oldScene.removeEventListener("measurement_added",onMeasurementAdded);e.oldScene.removeEventListener("profile_added",onProfileAdded);e.oldScene.removeEventListener("volume_added",onVolumeAdded);e.oldScene.removeEventListener("polygon_clip_volume_added",onVolumeAdded);e.oldScene.removeEventListener("measurement_removed",onMeasurementRemoved);e.scene.addEventListener("pointcloud_added",onPointCloudAdded);e.scene.addEventListener("measurement_added",onMeasurementAdded);e.scene.addEventListener("profile_added",onProfileAdded);e.scene.addEventListener("volume_added",onVolumeAdded);e.scene.addEventListener("polygon_clip_volume_added",onVolumeAdded);e.scene.addEventListener("measurement_removed",onMeasurementRemoved);});}function initClippingTool(){viewer.addEventListener("cliptask_changed",function(event){console.log("TODO");});viewer.addEventListener("clipmethod_changed",function(event){console.log("TODO");});{var elClipTask=$("#cliptask_options");elClipTask.selectgroup({title:"Clip Task"});elClipTask.find("input").click(function(e){viewer.setClipTask(Potree.ClipTask[e.target.value]);});var currentClipTask=Object.keys(Potree.ClipTask).filter(function(key){return Potree.ClipTask[key]===viewer.clipTask;});elClipTask.find('input[value='+currentClipTask+']').trigger("click");}{var elClipMethod=$("#clipmethod_options");elClipMethod.selectgroup({title:"Clip Method"});elClipMethod.find("input").click(function(e){viewer.setClipMethod(Potree.ClipMethod[e.target.value]);});var currentClipMethod=Object.keys(Potree.ClipMethod).filter(function(key){return Potree.ClipMethod[key]===viewer.clipMethod;});elClipMethod.find('input[value='+currentClipMethod+']').trigger("click");}var clippingToolBar=$("#clipping_tools");// CLIP VOLUME
    clippingToolBar.append(createToolIcon(Potree.resourcePath+'/icons/clip_volume.svg','[title]tt.clip_volume',function(){var item=volumeTool.startInsertion({clip:true});var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===item.uuid;});$.jstree.reference(jsonNode.id).deselect_all();$.jstree.reference(jsonNode.id).select_node(jsonNode.id);}));// CLIP POLYGON
    clippingToolBar.append(createToolIcon(Potree.resourcePath+"/icons/clip-polygon.svg","[title]tt.clip_polygon",function(){var item=viewer.clippingTool.startInsertion({type:"polygon"});var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===item.uuid;});$.jstree.reference(jsonNode.id).deselect_all();$.jstree.reference(jsonNode.id).select_node(jsonNode.id);}));{// SCREEN BOX SELECT
        var boxSelectTool=new Potree.ScreenBoxSelectTool(viewer);clippingToolBar.append(createToolIcon(Potree.resourcePath+"/icons/clip-screen.svg","[title]tt.screen_clip_box",function(){if(!(viewer.scene.getActiveCamera()instanceof THREE.OrthographicCamera)){viewer.postMessage('Switch to Orthographic Camera Mode before using the Screen-Box-Select tool.',{duration:2000});return;}var item=boxSelectTool.startInsertion();var measurementsRoot=$("#jstree_scene").jstree().get_json("measurements");var jsonNode=measurementsRoot.children.find(function(child){return child.data.uuid===item.uuid;});$.jstree.reference(jsonNode.id).deselect_all();$.jstree.reference(jsonNode.id).select_node(jsonNode.id);}));}{// REMOVE CLIPPING TOOLS
        clippingToolBar.append(createToolIcon(Potree.resourcePath+"/icons/remove.svg","[title]tt.remove_all_measurement",function(){viewer.scene.removeAllClipVolumes();}));}}function initClassificationList(){var elClassificationList=$('#classificationList');var addClassificationItem=function addClassificationItem(code,name){var inputID='chkClassification_'+code;var element=$('\n\t\t\t\t<li>\n\t\t\t\t\t<label style="whitespace: nowrap">\n\t\t\t\t\t\t<input id="'+inputID+'" type="checkbox" checked/>\n\t\t\t\t\t\t<span>'+name+'</span>\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\t\t\t');var elInput=element.find('input');elInput.click(function(event){viewer.setClassificationVisibility(code,event.target.checked);});elClassificationList.append(element);};addClassificationItem(0,'never classified');addClassificationItem(1,'unclassified');addClassificationItem(2,'ground');addClassificationItem(3,'low vegetation');addClassificationItem(4,'medium vegetation');addClassificationItem(5,'high vegetation');addClassificationItem(6,'building');addClassificationItem(7,'low point(noise)');addClassificationItem(8,'key-point');addClassificationItem(9,'water');addClassificationItem(12,'overlap');}function initAccordion(){$('.accordion > h3').each(function(){var header=$(this);var content=$(this).next();//header.addClass('accordion-header ui-widget');
//content.addClass('accordion-content ui-widget');
    content.hide();header.click(function(){content.slideToggle();});});var languages=[["EN","en"],["FR","fr"],["DE","de"],["JP","jp"]];var elLanguages=$('#potree_languages');var _loop9=function _loop9(_i96){var _languages$_i=_slicedToArray(languages[_i96],2),key=_languages$_i[0],value=_languages$_i[1];var element=$('<a>'+key+'</a>');element.click(function(){return viewer.setLanguage(value);});if(_i96===0){element.css("margin-left","30px");}elLanguages.append(element);if(_i96<languages.length-1){elLanguages.append($(document.createTextNode(' - ')));}};for(var _i96=0;_i96<languages.length;_i96++){_loop9(_i96);}// to close all, call
// $(".accordion > div").hide()
// to open the, for example, tool menu, call:
// $("#menu_tools").next().show()
}function initAppearance(){$('#sldPointBudget').slider({value:viewer.getPointBudget(),min:100*1000,max:10*1000*1000,step:1000,slide:function slide(event,ui){viewer.setPointBudget(ui.value);}});$('#sldFOV').slider({value:viewer.getFOV(),min:20,max:100,step:1,slide:function slide(event,ui){viewer.setFOV(ui.value);}});$('#sldEDLRadius').slider({value:viewer.getEDLRadius(),min:1,max:4,step:0.01,slide:function slide(event,ui){viewer.setEDLRadius(ui.value);}});$('#sldEDLStrength').slider({value:viewer.getEDLStrength(),min:0,max:5,step:0.01,slide:function slide(event,ui){viewer.setEDLStrength(ui.value);}});viewer.addEventListener('point_budget_changed',function(event){$('#lblPointBudget')[0].innerHTML=Potree.utils.addCommas(viewer.getPointBudget());$('#sldPointBudget').slider({value:viewer.getPointBudget()});});viewer.addEventListener('fov_changed',function(event){$('#lblFOV')[0].innerHTML=parseInt(viewer.getFOV());$('#sldFOV').slider({value:viewer.getFOV()});});viewer.addEventListener('edl_radius_changed',function(event){$('#lblEDLRadius')[0].innerHTML=viewer.getEDLRadius().toFixed(1);$('#sldEDLRadius').slider({value:viewer.getEDLRadius()});});viewer.addEventListener('edl_strength_changed',function(event){$('#lblEDLStrength')[0].innerHTML=viewer.getEDLStrength().toFixed(1);$('#sldEDLStrength').slider({value:viewer.getEDLStrength()});});viewer.addEventListener('background_changed',function(event){$("input[name=background][value='"+viewer.getBackground()+"']").prop('checked',true);});$('#lblPointBudget')[0].innerHTML=Potree.utils.addCommas(viewer.getPointBudget());$('#lblFOV')[0].innerHTML=parseInt(viewer.getFOV());$('#lblEDLRadius')[0].innerHTML=viewer.getEDLRadius().toFixed(1);$('#lblEDLStrength')[0].innerHTML=viewer.getEDLStrength().toFixed(1);$('#chkEDLEnabled')[0].checked=viewer.getEDLEnabled();{var elBackground=$('#background_options');elBackground.selectgroup();elBackground.find("input").click(function(e){viewer.setBackground(e.target.value);});var currentBackground=viewer.getBackground();$('input[name=background_options][value='+currentBackground+']').trigger("click");}$('#chkEDLEnabled').click(function(){viewer.setEDLEnabled($('#chkEDLEnabled').prop("checked"));});}function initNavigation(){var elNavigation=$('#navigation');var sldMoveSpeed=$('#sldMoveSpeed');var lblMoveSpeed=$('#lblMoveSpeed');elNavigation.append(createToolIcon(Potree.resourcePath+'/icons/earth_controls_1.png','[title]tt.earth_control',function(){viewer.setNavigationMode(Potree.EarthControls);}));elNavigation.append(createToolIcon(Potree.resourcePath+'/icons/fps_controls.svg','[title]tt.flight_control',function(){viewer.setNavigationMode(Potree.FirstPersonControls);viewer.fpControls.lockElevation=false;}));elNavigation.append(createToolIcon(Potree.resourcePath+'/icons/helicopter_controls.svg','[title]tt.heli_control',function(){viewer.setNavigationMode(Potree.FirstPersonControls);viewer.fpControls.lockElevation=true;}));elNavigation.append(createToolIcon(Potree.resourcePath+'/icons/orbit_controls.svg','[title]tt.orbit_control',function(){viewer.setNavigationMode(Potree.OrbitControls);}));elNavigation.append(createToolIcon(Potree.resourcePath+'/icons/focus.svg','[title]tt.focus_control',function(){viewer.fitToScreen();}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/navigation_cube.svg","[title]tt.navigation_cube_control",function(){viewer.toggleNavigationCube();}));elNavigation.append("<br>");elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/left.svg","[title]tt.left_view_control",function(){viewer.setLeftView();}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/right.svg","[title]tt.right_view_control",function(){viewer.setRightView();}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/front.svg","[title]tt.front_view_control",function(){viewer.setFrontView();}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/back.svg","[title]tt.back_view_control",function(){viewer.setBackView();}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/top.svg","[title]tt.top_view_control",function(){viewer.setTopView();}));elNavigation.append(createToolIcon(Potree.resourcePath+"/icons/bottom.svg","[title]tt.bottom_view_control",function(){viewer.setBottomView();}));var elCameraProjection=$('\n\t\t\t<selectgroup id="camera_projection_options">\n\t\t\t\t<option id="camera_projection_options_perspective" value="PERSPECTIVE">Perspective</option>\n\t\t\t\t<option id="camera_projection_options_orthigraphic" value="ORTHOGRAPHIC">Orthographic</option>\n\t\t\t</selectgroup>\n\t\t');elNavigation.append(elCameraProjection);elCameraProjection.selectgroup({title:"Camera Projection"});elCameraProjection.find("input").click(function(e){viewer.setCameraMode(Potree.CameraMode[e.target.value]);});var cameraMode=Object.keys(Potree.CameraMode).filter(function(key){return Potree.CameraMode[key]===viewer.scene.cameraMode;});elCameraProjection.find('input[value='+cameraMode+']').trigger("click");var speedRange=new THREE.Vector2(1,10*1000);var toLinearSpeed=function toLinearSpeed(value){return Math.pow(value,4)*speedRange.y+speedRange.x;};var toExpSpeed=function toExpSpeed(value){return Math.pow((value-speedRange.x)/speedRange.y,1/4);};sldMoveSpeed.slider({value:toExpSpeed(viewer.getMoveSpeed()),min:0,max:1,step:0.01,slide:function slide(event,ui){viewer.setMoveSpeed(toLinearSpeed(ui.value));}});viewer.addEventListener('move_speed_changed',function(event){lblMoveSpeed.html(viewer.getMoveSpeed().toFixed(1));sldMoveSpeed.slider({value:toExpSpeed(viewer.getMoveSpeed())});});lblMoveSpeed.html(viewer.getMoveSpeed().toFixed(1));}var initSettings=function initSettings(){{$('#sldMinNodeSize').slider({value:viewer.getMinNodeSize(),min:0,max:1000,step:0.01,slide:function slide(event,ui){viewer.setMinNodeSize(ui.value);}});viewer.addEventListener('minnodesize_changed',function(event){$('#lblMinNodeSize').html(parseInt(viewer.getMinNodeSize()));$('#sldMinNodeSize').slider({value:viewer.getMinNodeSize()});});$('#lblMinNodeSize').html(parseInt(viewer.getMinNodeSize()));}{var elSplatQuality=$("#splat_quality_options");elSplatQuality.selectgroup({title:"Splat Quality"});elSplatQuality.find("input").click(function(e){if(e.target.value==="standard"){viewer.useHQ=false;}else if(e.target.value==="hq"){viewer.useHQ=true;}});var currentQuality=viewer.useHQ?"hq":"standard";elSplatQuality.find('input[value='+currentQuality+']').trigger("click");}$('#show_bounding_box').click(function(){viewer.setShowBoundingBox($('#show_bounding_box').prop("checked"));});$('#set_freeze').click(function(){viewer.setFreeze($('#set_freeze').prop("checked"));});};initAccordion();initAppearance();initToolbar();initScene();initNavigation();initClassificationList();initClippingTool();initSettings();$('#potree_version_number').html(Potree.version.major+"."+Potree.version.minor+Potree.version.suffix);$('.perfect_scrollbar').perfectScrollbar();};var MeasurePanel=function(){function MeasurePanel(viewer,measurement,propertiesPanel){var _this82=this;_classCallCheck(this,MeasurePanel);this.viewer=viewer;this.measurement=measurement;this.propertiesPanel=propertiesPanel;this._update=function(){_this82.update();};}_createClass(MeasurePanel,[{key:'createCoordinatesTable',value:function createCoordinatesTable(points){var _this83=this;var table=$('\n\t\t\t<table class="measurement_value_table">\n\t\t\t\t<tr>\n\t\t\t\t\t<th>x</th>\n\t\t\t\t\t<th>y</th>\n\t\t\t\t\t<th>z</th>\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t');var copyIconPath=Potree.resourcePath+'/icons/copy.svg';var _iteratorNormalCompletion152=true;var _didIteratorError152=false;var _iteratorError152=undefined;try{var _loop10=function _loop10(){var point=_step152.value;var x=Potree.utils.addCommas(point.x.toFixed(3));var y=Potree.utils.addCommas(point.y.toFixed(3));var z=Potree.utils.addCommas(point.z.toFixed(3));var row=$('\n\t\t\t\t<tr>\n\t\t\t\t\t<td><span>'+x+'</span></td>\n\t\t\t\t\t<td><span>'+y+'</span></td>\n\t\t\t\t\t<td><span>'+z+'</span></td>\n\t\t\t\t\t<td align="right" style="width: 25%">\n\t\t\t\t\t\t<img name="copy" title="copy" class="button-icon" src="'+copyIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t');_this83.elCopy=row.find("img[name=copy]");_this83.elCopy.click(function(){var msg=point.toArray().map(function(c){return c.toFixed(3);}).join(", ");Potree.utils.clipboardCopy(msg);_this83.viewer.postMessage('Copied value to clipboard: <br>\''+msg+'\'',{duration:3000});});table.append(row);};for(var _iterator152=points[Symbol.iterator](),_step152;!(_iteratorNormalCompletion152=(_step152=_iterator152.next()).done);_iteratorNormalCompletion152=true){_loop10();}}catch(err){_didIteratorError152=true;_iteratorError152=err;}finally{try{if(!_iteratorNormalCompletion152&&_iterator152.return){_iterator152.return();}}finally{if(_didIteratorError152){throw _iteratorError152;}}}return table;}},{key:'createAttributesTable',value:function createAttributesTable(){var elTable=$('<table class="measurement_value_table"></table>');var point=this.measurement.points[0];if(point.color){var color=point.color;var text=color.join(', ');elTable.append($('\n\t\t\t\t<tr>\n\t\t\t\t\t<td>rgb</td>\n\t\t\t\t\t<td>'+text+'</td>\n\t\t\t\t</tr>\n\t\t\t'));}return elTable;}},{key:'update',value:function update(){}}]);return MeasurePanel;}();;var DistancePanel=function(_MeasurePanel){_inherits(DistancePanel,_MeasurePanel);function DistancePanel(viewer,measurement,propertiesPanel){_classCallCheck(this,DistancePanel);var _this84=_possibleConstructorReturn(this,(DistancePanel.__proto__||Object.getPrototypeOf(DistancePanel)).call(this,viewer,measurement,propertiesPanel));var removeIconPath=Potree.resourcePath+'/icons/remove.svg';_this84.elContent=$('\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<table id="distances_table" class="measurement_value_table"></table>\n\n\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="'+removeIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t');_this84.elRemove=_this84.elContent.find("img[name=remove]");_this84.elRemove.click(function(){_this84.viewer.scene.removeMeasurement(measurement);});_this84.propertiesPanel.addVolatileListener(measurement,"marker_added",_this84._update);_this84.propertiesPanel.addVolatileListener(measurement,"marker_removed",_this84._update);_this84.propertiesPanel.addVolatileListener(measurement,"marker_moved",_this84._update);_this84.update();return _this84;}_createClass(DistancePanel,[{key:'update',value:function update(){var elCoordiantesContainer=this.elContent.find('.coordinates_table_container');elCoordiantesContainer.empty();elCoordiantesContainer.append(this.createCoordinatesTable(this.measurement.points.map(function(p){return p.position;})));var positions=this.measurement.points.map(function(p){return p.position;});var distances=[];for(var _i97=0;_i97<positions.length-1;_i97++){var d=positions[_i97].distanceTo(positions[_i97+1]);distances.push(d.toFixed(3));}var totalDistance=this.measurement.getTotalDistance().toFixed(3);var elDistanceTable=this.elContent.find('#distances_table');elDistanceTable.empty();for(var _i98=0;_i98<distances.length;_i98++){var label=_i98===0?'Distances: ':'';var distance=distances[_i98];var elDistance=$('\n\t\t\t\t<tr>\n\t\t\t\t\t<th>'+label+'</th>\n\t\t\t\t\t<td style="width: 100%; padding-left: 10px">'+distance+'</td>\n\t\t\t\t</tr>');elDistanceTable.append(elDistance);}var elTotal=$('\n\t\t\t<tr>\n\t\t\t\t<th>Total: </td><td style="width: 100%; padding-left: 10px">'+totalDistance+'</th>\n\t\t\t</tr>');elDistanceTable.append(elTotal);}}]);return DistancePanel;}(MeasurePanel);var PointPanel=function(_MeasurePanel2){_inherits(PointPanel,_MeasurePanel2);function PointPanel(viewer,measurement,propertiesPanel){_classCallCheck(this,PointPanel);var _this85=_possibleConstructorReturn(this,(PointPanel.__proto__||Object.getPrototypeOf(PointPanel)).call(this,viewer,measurement,propertiesPanel));var removeIconPath=Potree.resourcePath+'/icons/remove.svg';_this85.elContent=$('\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<span class="attributes_table_container"></span>\n\n\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="'+removeIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t');_this85.elRemove=_this85.elContent.find("img[name=remove]");_this85.elRemove.click(function(){_this85.viewer.scene.removeMeasurement(measurement);});_this85.propertiesPanel.addVolatileListener(measurement,"marker_added",_this85._update);_this85.propertiesPanel.addVolatileListener(measurement,"marker_removed",_this85._update);_this85.propertiesPanel.addVolatileListener(measurement,"marker_moved",_this85._update);_this85.update();return _this85;}_createClass(PointPanel,[{key:'update',value:function update(){var elCoordiantesContainer=this.elContent.find('.coordinates_table_container');elCoordiantesContainer.empty();elCoordiantesContainer.append(this.createCoordinatesTable(this.measurement.points.map(function(p){return p.position;})));var elAttributesContainer=this.elContent.find('.attributes_table_container');elAttributesContainer.empty();elAttributesContainer.append(this.createAttributesTable());}}]);return PointPanel;}(MeasurePanel);var AreaPanel=function(_MeasurePanel3){_inherits(AreaPanel,_MeasurePanel3);function AreaPanel(viewer,measurement,propertiesPanel){_classCallCheck(this,AreaPanel);var _this86=_possibleConstructorReturn(this,(AreaPanel.__proto__||Object.getPrototypeOf(AreaPanel)).call(this,viewer,measurement,propertiesPanel));var removeIconPath=Potree.resourcePath+'/icons/remove.svg';_this86.elContent=$('\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<span style="font-weight: bold">Area: </span>\n\t\t\t\t<span id="measurement_area"></span>\n\n\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="'+removeIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t');_this86.elRemove=_this86.elContent.find("img[name=remove]");_this86.elRemove.click(function(){_this86.viewer.scene.removeMeasurement(measurement);});_this86.propertiesPanel.addVolatileListener(measurement,"marker_added",_this86._update);_this86.propertiesPanel.addVolatileListener(measurement,"marker_removed",_this86._update);_this86.propertiesPanel.addVolatileListener(measurement,"marker_moved",_this86._update);_this86.update();return _this86;}_createClass(AreaPanel,[{key:'update',value:function update(){var elCoordiantesContainer=this.elContent.find('.coordinates_table_container');elCoordiantesContainer.empty();elCoordiantesContainer.append(this.createCoordinatesTable(this.measurement.points.map(function(p){return p.position;})));var elArea=this.elContent.find('#measurement_area');elArea.html(this.measurement.getArea().toFixed(3));}}]);return AreaPanel;}(MeasurePanel);var AnglePanel=function(_MeasurePanel4){_inherits(AnglePanel,_MeasurePanel4);function AnglePanel(viewer,measurement,propertiesPanel){_classCallCheck(this,AnglePanel);var _this87=_possibleConstructorReturn(this,(AnglePanel.__proto__||Object.getPrototypeOf(AnglePanel)).call(this,viewer,measurement,propertiesPanel));var removeIconPath=Potree.resourcePath+'/icons/remove.svg';_this87.elContent=$('\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<table class="measurement_value_table">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\u03B1</th>\n\t\t\t\t\t\t<th>\u03B2</th>\n\t\t\t\t\t\t<th>\u03B3</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td align="center" id="angle_cell_alpha" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="angle_cell_betta" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="angle_cell_gamma" style="width: 33%"></td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\n\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="'+removeIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t');_this87.elRemove=_this87.elContent.find("img[name=remove]");_this87.elRemove.click(function(){_this87.viewer.scene.removeMeasurement(measurement);});_this87.propertiesPanel.addVolatileListener(measurement,"marker_added",_this87._update);_this87.propertiesPanel.addVolatileListener(measurement,"marker_removed",_this87._update);_this87.propertiesPanel.addVolatileListener(measurement,"marker_moved",_this87._update);_this87.update();return _this87;}_createClass(AnglePanel,[{key:'update',value:function update(){var elCoordiantesContainer=this.elContent.find('.coordinates_table_container');elCoordiantesContainer.empty();elCoordiantesContainer.append(this.createCoordinatesTable(this.measurement.points.map(function(p){return p.position;})));var angles=[];for(var _i99=0;_i99<this.measurement.points.length;_i99++){angles.push(this.measurement.getAngle(_i99)*(180.0/Math.PI));}angles=angles.map(function(a){return a.toFixed(1)+'\xB0';});var elAlpha=this.elContent.find('#angle_cell_alpha');var elBetta=this.elContent.find('#angle_cell_betta');var elGamma=this.elContent.find('#angle_cell_gamma');elAlpha.html(angles[0]);elBetta.html(angles[1]);elGamma.html(angles[2]);}}]);return AnglePanel;}(MeasurePanel);var HeightPanel=function(_MeasurePanel5){_inherits(HeightPanel,_MeasurePanel5);function HeightPanel(viewer,measurement,propertiesPanel){_classCallCheck(this,HeightPanel);var _this88=_possibleConstructorReturn(this,(HeightPanel.__proto__||Object.getPrototypeOf(HeightPanel)).call(this,viewer,measurement,propertiesPanel));var removeIconPath=Potree.resourcePath+'/icons/remove.svg';_this88.elContent=$('\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<span id="height_label">Height: </span><br>\n\n\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="'+removeIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t');_this88.elRemove=_this88.elContent.find("img[name=remove]");_this88.elRemove.click(function(){_this88.viewer.scene.removeMeasurement(measurement);});_this88.propertiesPanel.addVolatileListener(measurement,"marker_added",_this88._update);_this88.propertiesPanel.addVolatileListener(measurement,"marker_removed",_this88._update);_this88.propertiesPanel.addVolatileListener(measurement,"marker_moved",_this88._update);_this88.update();return _this88;}_createClass(HeightPanel,[{key:'update',value:function update(){var elCoordiantesContainer=this.elContent.find('.coordinates_table_container');elCoordiantesContainer.empty();elCoordiantesContainer.append(this.createCoordinatesTable(this.measurement.points.map(function(p){return p.position;})));{var points=this.measurement.points;var sorted=points.slice().sort(function(a,b){return a.position.z-b.position.z;});var lowPoint=sorted[0].position.clone();var highPoint=sorted[sorted.length-1].position.clone();var min=lowPoint.z;var max=highPoint.z;var height=max-min;height=height.toFixed(3);this.elHeightLabel=this.elContent.find('#height_label');this.elHeightLabel.html('<b>Height:</b> '+height);}}}]);return HeightPanel;}(MeasurePanel);var VolumePanel=function(_MeasurePanel6){_inherits(VolumePanel,_MeasurePanel6);function VolumePanel(viewer,measurement,propertiesPanel){_classCallCheck(this,VolumePanel);var _this89=_possibleConstructorReturn(this,(VolumePanel.__proto__||Object.getPrototypeOf(VolumePanel)).call(this,viewer,measurement,propertiesPanel));var copyIconPath=Potree.resourcePath+'/icons/copy.svg';var removeIconPath=Potree.resourcePath+'/icons/remove.svg';_this89.elContent=$('\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\n\t\t\t\t<table class="measurement_value_table">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\u03B1</th>\n\t\t\t\t\t\t<th>\u03B2</th>\n\t\t\t\t\t\t<th>\u03B3</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td align="center" id="angle_cell_alpha" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="angle_cell_betta" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="angle_cell_gamma" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="right" style="width: 25%">\n\t\t\t\t\t\t\t<img name="copyRotation" title="copy" class="button-icon" src="'+copyIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\n\t\t\t\t<table class="measurement_value_table">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>length</th>\n\t\t\t\t\t\t<th>width</th>\n\t\t\t\t\t\t<th>height</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td align="center" id="cell_length" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="cell_width" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="center" id="cell_height" style="width: 33%"></td>\n\t\t\t\t\t\t<td align="right" style="width: 25%">\n\t\t\t\t\t\t\t<img name="copyScale" title="copy" class="button-icon" src="'+copyIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\n\t\t\t\t<br>\n\t\t\t\t<span style="font-weight: bold">Volume: </span>\n\t\t\t\t<span id="measurement_volume"></span>\n\n\t\t\t\t<!--\n\t\t\t\t<li>\n\t\t\t\t\t<label style="whitespace: nowrap">\n\t\t\t\t\t\t<input id="volume_show" type="checkbox"/>\n\t\t\t\t\t\t<span>show volume</span>\n\t\t\t\t\t</label>\n\t\t\t\t</li>-->\n\n\t\t\t\t<li>\n\t\t\t\t\t<label style="whitespace: nowrap">\n\t\t\t\t\t\t<input id="volume_clip" type="checkbox"/>\n\t\t\t\t\t\t<span>make clip volume</span>\n\t\t\t\t\t</label>\n\t\t\t\t</li>\n\n\t\t\t\t<li>\n\t\t\t\t\t<input name="download_volume" type="button" value="download" style="display:hidden" />\n\t\t\t\t</li>\n\n\n\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t<input id="volume_reset_orientation" type="button" value="reset orientation"/>\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="'+removeIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t');{// download
    _this89.elDownloadButton=_this89.elContent.find("input[name=download_volume]");if(_this89.propertiesPanel.viewer.server){_this89.elDownloadButton.click(function(){return _this89.download();});}else{_this89.elDownloadButton.hide();}}_this89.elCopyRotation=_this89.elContent.find("img[name=copyRotation]");_this89.elCopyRotation.click(function(){var rotation=_this89.measurement.rotation.toArray().slice(0,3);var msg=rotation.map(function(c){return c.toFixed(3);}).join(", ");Potree.utils.clipboardCopy(msg);_this89.viewer.postMessage('Copied value to clipboard: <br>\''+msg+'\'',{duration:3000});});_this89.elCopyScale=_this89.elContent.find("img[name=copyScale]");_this89.elCopyScale.click(function(){var scale=_this89.measurement.scale.toArray();var msg=scale.map(function(c){return c.toFixed(3);}).join(", ");Potree.utils.clipboardCopy(msg);_this89.viewer.postMessage('Copied value to clipboard: <br>\''+msg+'\'',{duration:3000});});_this89.elRemove=_this89.elContent.find("img[name=remove]");_this89.elRemove.click(function(){_this89.viewer.scene.removeVolume(measurement);});_this89.elContent.find("#volume_reset_orientation").click(function(){measurement.rotation.set(0,0,0);});_this89.elCheckClip=_this89.elContent.find('#volume_clip');_this89.elCheckClip.click(function(event){_this89.measurement.clip=event.target.checked;});_this89.elCheckShow=_this89.elContent.find('#volume_show');_this89.elCheckShow.click(function(event){_this89.measurement.visible=event.target.checked;});_this89.propertiesPanel.addVolatileListener(measurement,"position_changed",_this89._update);_this89.propertiesPanel.addVolatileListener(measurement,"orientation_changed",_this89._update);_this89.propertiesPanel.addVolatileListener(measurement,"scale_changed",_this89._update);_this89.propertiesPanel.addVolatileListener(measurement,"clip_changed",_this89._update);_this89.update();return _this89;}_createClass(VolumePanel,[{key:'download',value:function download(){var boxes=[this.measurement.matrixWorld].map(function(m){return m.elements.join(',');}).join(',');var minLOD=0;var maxLOD=100;var pcs=[];var _iteratorNormalCompletion153=true;var _didIteratorError153=false;var _iteratorError153=undefined;try{for(var _iterator153=this.viewer.scene.pointclouds[Symbol.iterator](),_step153;!(_iteratorNormalCompletion153=(_step153=_iterator153.next()).done);_iteratorNormalCompletion153=true){var _pointcloud14=_step153.value;var urlIsAbsolute=new RegExp('^(?:[a-z]+:)?//','i').test(_pointcloud14.pcoGeometry.url);var _pc='';if(urlIsAbsolute){_pc=_pointcloud14.pcoGeometry.url;}else{_pc=window.location.href+'/../'+_pointcloud14.pcoGeometry.url;}pcs.push(_pc);}}catch(err){_didIteratorError153=true;_iteratorError153=err;}finally{try{if(!_iteratorNormalCompletion153&&_iterator153.return){_iterator153.return();}}finally{if(_didIteratorError153){throw _iteratorError153;}}}var pc=pcs.map(function(v){return'pointcloud[]='+v;}).join('&');var request=viewer.server+'/start_extract_region_worker?minLOD='+minLOD+'&maxLOD='+maxLOD+'&box='+boxes+'&'+pc;console.log(request);}},{key:'update',value:function update(){var elCoordiantesContainer=this.elContent.find('.coordinates_table_container');elCoordiantesContainer.empty();elCoordiantesContainer.append(this.createCoordinatesTable([this.measurement.position]));{var angles=this.measurement.rotation.toVector3();angles=angles.toArray();//angles = [angles.z, angles.x, angles.y];
        angles=angles.map(function(v){return 180*v/Math.PI;});angles=angles.map(function(a){return a.toFixed(1)+'\xB0';});var elAlpha=this.elContent.find('#angle_cell_alpha');var elBetta=this.elContent.find('#angle_cell_betta');var elGamma=this.elContent.find('#angle_cell_gamma');elAlpha.html(angles[0]);elBetta.html(angles[1]);elGamma.html(angles[2]);}{var dimensions=this.measurement.scale.toArray();dimensions=dimensions.map(function(v){return Potree.utils.addCommas(v.toFixed(2));});var elLength=this.elContent.find('#cell_length');var elWidth=this.elContent.find('#cell_width');var elHeight=this.elContent.find('#cell_height');elLength.html(dimensions[0]);elWidth.html(dimensions[1]);elHeight.html(dimensions[2]);}{var elVolume=this.elContent.find('#measurement_volume');var volume=this.measurement.getVolume();elVolume.html(Potree.utils.addCommas(volume.toFixed(2)));}this.elCheckClip.prop("checked",this.measurement.clip);this.elCheckShow.prop("checked",this.measurement.visible);}}]);return VolumePanel;}(MeasurePanel);var ProfilePanel=function(_MeasurePanel7){_inherits(ProfilePanel,_MeasurePanel7);function ProfilePanel(viewer,measurement,propertiesPanel){_classCallCheck(this,ProfilePanel);var _this90=_possibleConstructorReturn(this,(ProfilePanel.__proto__||Object.getPrototypeOf(ProfilePanel)).call(this,viewer,measurement,propertiesPanel));var removeIconPath=Potree.resourcePath+'/icons/remove.svg';_this90.elContent=$('\n\t\t\t<div class="measurement_content selectable">\n\t\t\t\t<span class="coordinates_table_container"></span>\n\t\t\t\t<br>\n\t\t\t\t<span style="display:flex">\n\t\t\t\t\t<span style="display:flex; align-items: center; padding-right: 10px">Width: </span>\n\t\t\t\t\t<input id="sldProfileWidth" name="sldProfileWidth" value="5.06" style="flex-grow: 1; width:100%">\n\t\t\t\t</span>\n\t\t\t\t<br>\n\n\t\t\t\t<input type="button" value="Prepare Download" id="download_profile"/>\n\t\t\t\t<span id="download_profile_status"></span>\n\t\t\t\t<br>\n\t\t\t\t<input type="button" id="show_2d_profile" value="show 2d profile" style="width: 100%"/>\n\n\t\t\t\t<!-- ACTIONS -->\n\t\t\t\t<div style="display: flex; margin-top: 12px">\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span style="flex-grow: 1"></span>\n\t\t\t\t\t<img name="remove" class="button-icon" src="'+removeIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t');_this90.elRemove=_this90.elContent.find("img[name=remove]");_this90.elRemove.click(function(){_this90.viewer.scene.removeProfile(measurement);});{// download
    _this90.elDownloadButton=_this90.elContent.find('#download_profile');if(_this90.propertiesPanel.viewer.server){_this90.elDownloadButton.click(function(){return _this90.download();});}else{_this90.elDownloadButton.hide();}}{// width spinner
    var elWidthSlider=_this90.elContent.find('#sldProfileWidth');elWidthSlider.spinner({min:0,max:10*1000*1000,step:0.01,numberFormat:'n',start:function start(){},spin:function spin(event,ui){var value=elWidthSlider.spinner('value');measurement.setWidth(value);},change:function change(event,ui){var value=elWidthSlider.spinner('value');measurement.setWidth(value);},stop:function stop(event,ui){var value=elWidthSlider.spinner('value');measurement.setWidth(value);},incremental:function incremental(count){var value=elWidthSlider.spinner('value');var step=elWidthSlider.spinner('option','step');var delta=value*0.05;var increments=Math.max(1,parseInt(delta/step));return increments;}});elWidthSlider.spinner('value',measurement.getWidth());elWidthSlider.spinner('widget').css('width','100%');var widthListener=function widthListener(event){var value=elWidthSlider.spinner('value');if(value!==measurement.getWidth()){elWidthSlider.spinner('value',measurement.getWidth());}};_this90.propertiesPanel.addVolatileListener(measurement,"width_changed",widthListener);}var elShow2DProfile=_this90.elContent.find('#show_2d_profile');elShow2DProfile.click(function(){_this90.propertiesPanel.viewer.profileWindow.show();_this90.propertiesPanel.viewer.profileWindowController.setProfile(measurement);});_this90.propertiesPanel.addVolatileListener(measurement,"marker_added",_this90._update);_this90.propertiesPanel.addVolatileListener(measurement,"marker_removed",_this90._update);_this90.propertiesPanel.addVolatileListener(measurement,"marker_moved",_this90._update);_this90.update();return _this90;}_createClass(ProfilePanel,[{key:'update',value:function update(){var elCoordiantesContainer=this.elContent.find('.coordinates_table_container');elCoordiantesContainer.empty();elCoordiantesContainer.append(this.createCoordinatesTable(this.measurement.points));}}]);return ProfilePanel;}(MeasurePanel);var CameraPanel=function(){function CameraPanel(viewer,propertiesPanel){var _this91=this;_classCallCheck(this,CameraPanel);this.viewer=viewer;this.propertiesPanel=propertiesPanel;this._update=function(){_this91.update();};var copyIconPath=Potree.resourcePath+'/icons/copy.svg';this.elContent=$('\n\t\t<div class="propertypanel_content">\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<th colspan="3">position</th>\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td align="center" id="camera_position_x" style="width: 25%"></td>\n\t\t\t\t\t<td align="center" id="camera_position_y" style="width: 25%"></td>\n\t\t\t\t\t<td align="center" id="camera_position_z" style="width: 25%"></td>\n\t\t\t\t\t<td align="right" id="copy_camera_position" style="width: 25%">\n\t\t\t\t\t\t<img name="copyPosition" title="copy" class="button-icon" src="'+copyIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th colspan="3">target</th>\n\t\t\t\t\t<th></th>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td align="center" id="camera_target_x" style="width: 25%"></td>\n\t\t\t\t\t<td align="center" id="camera_target_y" style="width: 25%"></td>\n\t\t\t\t\t<td align="center" id="camera_target_z" style="width: 25%"></td>\n\t\t\t\t\t<td align="right" id="copy_camera_target" style="width: 25%">\n\t\t\t\t\t\t<img name="copyTarget" title="copy" class="button-icon" src="'+copyIconPath+'" style="width: 16px; height: 16px"/>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t\t');this.elCopyPosition=this.elContent.find("img[name=copyPosition]");this.elCopyPosition.click(function(){var pos=_this91.viewer.scene.getActiveCamera().position.toArray();var msg=pos.map(function(c){return c.toFixed(3);}).join(", ");Potree.utils.clipboardCopy(msg);_this91.viewer.postMessage('Copied value to clipboard: <br>\''+msg+'\'',{duration:3000});});this.elCopyTarget=this.elContent.find("img[name=copyTarget]");this.elCopyTarget.click(function(){var pos=_this91.viewer.scene.view.getPivot().toArray();var msg=pos.map(function(c){return c.toFixed(3);}).join(", ");Potree.utils.clipboardCopy(msg);_this91.viewer.postMessage('Copied value to clipboard: <br>\''+msg+'\'',{duration:3000});});this.propertiesPanel.addVolatileListener(viewer,"camera_changed",this._update);this.update();}_createClass(CameraPanel,[{key:'update',value:function update(){console.log("updating camera panel");var camera=this.viewer.scene.getActiveCamera();var view=this.viewer.scene.view;var pos=camera.position.toArray().map(function(c){return Potree.utils.addCommas(c.toFixed(3));});this.elContent.find("#camera_position_x").html(pos[0]);this.elContent.find("#camera_position_y").html(pos[1]);this.elContent.find("#camera_position_z").html(pos[2]);var target=view.getPivot().toArray().map(function(c){return Potree.utils.addCommas(c.toFixed(3));});this.elContent.find("#camera_target_x").html(target[0]);this.elContent.find("#camera_target_y").html(target[1]);this.elContent.find("#camera_target_z").html(target[2]);}}]);return CameraPanel;}();Potree.PropertiesPanel=function(){function PropertriesPanel(container,viewer){_classCallCheck(this,PropertriesPanel);this.container=container;this.viewer=viewer;this.object=null;this.cleanupTasks=[];this.scene=null;}_createClass(PropertriesPanel,[{key:'setScene',value:function setScene(scene){this.scene=scene;}},{key:'set',value:function set(object){if(this.object===object){return;}this.object=object;var _iteratorNormalCompletion154=true;var _didIteratorError154=false;var _iteratorError154=undefined;try{for(var _iterator154=this.cleanupTasks[Symbol.iterator](),_step154;!(_iteratorNormalCompletion154=(_step154=_iterator154.next()).done);_iteratorNormalCompletion154=true){var task=_step154.value;task();}}catch(err){_didIteratorError154=true;_iteratorError154=err;}finally{try{if(!_iteratorNormalCompletion154&&_iterator154.return){_iterator154.return();}}finally{if(_didIteratorError154){throw _iteratorError154;}}}this.cleanupTasks=[];this.container.empty();if(object instanceof Potree.PointCloudTree){this.setPointCloud(object);}else if(object instanceof Potree.Measure||object instanceof Potree.Profile||object instanceof Potree.Volume){this.setMeasurement(object);}else if(object instanceof THREE.Camera){this.setCamera(object);}}//
// Used for events that should be removed when the property object changes.
// This is for listening to materials, scene, point clouds, etc.
// not required for DOM listeners, since they are automatically cleared by removing the DOM subtree.
//
},{key:'addVolatileListener',value:function addVolatileListener(target,type,callback){target.addEventListener(type,callback);this.cleanupTasks.push(function(){target.removeEventListener(type,callback);});}},{key:'setPointCloud',value:function setPointCloud(pointcloud){var material=pointcloud.material;var panel=$('\n\t\t\t<div class="scene_content selectable">\n\t\t\t\t<ul class="pv-menu-list">\n\n\t\t\t\t<li>\n\t\t\t\t<span data-i18n="appearance.point_size"></span>:<span id="lblPointSize"></span> <div id="sldPointSize"></div>\n\t\t\t\t</li>\n\n\t\t\t\t<!-- SIZE TYPE -->\n\t\t\t\t<li>\n\t\t\t\t\t<label for="optPointSizing" class="pv-select-label" data-i18n="appearance.point_size_type">Point Sizing </label>\n\t\t\t\t\t<select id="optPointSizing" name="optPointSizing">\n\t\t\t\t\t\t<option>FIXED</option>\n\t\t\t\t\t\t<option>ATTENUATED</option>\n\t\t\t\t\t\t<option>ADAPTIVE</option>\n\t\t\t\t\t</select>\n\t\t\t\t</li>\n\n\t\t\t\t<!-- SHAPE -->\n\t\t\t\t<li>\n\t\t\t\t\t<label for="optShape" class="pv-select-label" data-i18n="appearance.point_shape"></label><br>\n\t\t\t\t\t<select id="optShape" name="optShape">\n\t\t\t\t\t\t<option>SQUARE</option>\n\t\t\t\t\t\t<option>CIRCLE</option>\n\t\t\t\t\t\t<option>PARABOLOID</option>\n\t\t\t\t\t</select>\n\t\t\t\t</li>\n\n\t\t\t\t<!-- OPACITY -->\n\t\t\t\t<li><span data-i18n="appearance.point_opacity"></span>:<span id="lblOpacity"></span><div id="sldOpacity"></div></li>\n\n\t\t\t\t<div class="divider">\n\t\t\t\t\t<span>Attribute</span>\n\t\t\t\t</div>\n\n\t\t\t\t<li>\n\t\t\t\t\t<!--<label for="optMaterial" class="pv-select-label">Attributes:</label><br>-->\n\t\t\t\t\t<select id="optMaterial" name="optMaterial">\n\t\t\t\t\t</select>\n\t\t\t\t</li>\n\n\t\t\t\t<div id="materials.composite_weight_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Attribute Weights</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<li>RGB: <span id="lblWeightRGB"></span> <div id="sldWeightRGB"></div>\t</li>\n\t\t\t\t\t<li>Intensity: <span id="lblWeightIntensity"></span> <div id="sldWeightIntensity"></div>\t</li>\n\t\t\t\t\t<li>Elevation: <span id="lblWeightElevation"></span> <div id="sldWeightElevation"></div>\t</li>\n\t\t\t\t\t<li>Classification: <span id="lblWeightClassification"></span> <div id="sldWeightClassification"></div>\t</li>\n\t\t\t\t\t<li>Return Number: <span id="lblWeightReturnNumber"></span> <div id="sldWeightReturnNumber"></div>\t</li>\n\t\t\t\t\t<li>Source ID: <span id="lblWeightSourceID"></span> <div id="sldWeightSourceID"></div>\t</li>\n\t\t\t\t</div>\n\n\t\t\t\t<div id="materials.rgb_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>RGB</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<li>Gamma: <span id="lblRGBGamma"></span> <div id="sldRGBGamma"></div>\t</li>\n\t\t\t\t\t<li>Brightness: <span id="lblRGBBrightness"></span> <div id="sldRGBBrightness"></div>\t</li>\n\t\t\t\t\t<li>Contrast: <span id="lblRGBContrast"></span> <div id="sldRGBContrast"></div>\t</li>\n\t\t\t\t</div>\n\n\t\t\t\t<div id="materials.color_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Color</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<input id="materials.color.picker" />\n\t\t\t\t</div>\n\n\n\t\t\t\t<div id="materials.elevation_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Elevation</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<li><span data-i18n="appearance.elevation_range"></span>: <span id="lblHeightRange"></span> <div id="sldHeightRange"></div>\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span>Gradient Scheme:</span>\n\t\t\t\t\t\t<div id="elevation_gradient_scheme_selection" style="display: flex">\n\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t\t\t<img id="gradient_spectral" class="button-icon" style="max-width: 100%" src="'+Potree.resourcePath+'/icons/gradients_spectral.png" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t\t\t<img id="gradient_yellow_green" class="button-icon" style="max-width: 100%" src="'+Potree.resourcePath+'/icons/gradients_yellow_green.png" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t\t\t<img class="button-icon" style="max-width: 100%" src="'+Potree.resourcePath+'/icons/gradients_plasma.png" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t\t\t<img class="button-icon" style="max-width: 100%" src="'+Potree.resourcePath+'/icons/gradients_grayscale.png" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t\t\t<img class="button-icon" style="max-width: 100%" src="'+Potree.resourcePath+'/icons/gradients_rainbow.png" />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t-->\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t</div>\n\n\t\t\t\t<div id="materials.transition_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Transition</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<li>transition: <span id="lblTransition"></span> <div id="sldTransition"></div>\t</li>\n\t\t\t\t</div>\n\n\t\t\t\t<div id="materials.intensity_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Intensity</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<li>Range: <span id="lblIntensityRange"></span> <div id="sldIntensityRange"></div>\t</li>\n\t\t\t\t\t<li>Gamma: <span id="lblIntensityGamma"></span> <div id="sldIntensityGamma"></div>\t</li>\n\t\t\t\t\t<li>Brightness: <span id="lblIntensityBrightness"></span> <div id="sldIntensityBrightness"></div>\t</li>\n\t\t\t\t\t<li>Contrast: <span id="lblIntensityContrast"></span> <div id="sldIntensityContrast"></div>\t</li>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div id="materials.index_container">\n\t\t\t\t\t<div class="divider">\n\t\t\t\t\t\t<span>Indices</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t');panel.i18n();this.container.append(panel);{// POINT SIZE
        var sldPointSize=panel.find('#sldPointSize');var lblPointSize=panel.find('#lblPointSize');sldPointSize.slider({value:material.size,min:0,max:3,step:0.01,slide:function slide(event,ui){material.size=ui.value;}});var update=function update(e){lblPointSize.html(material.size.toFixed(2));sldPointSize.slider({value:material.size});};this.addVolatileListener(material,"point_size_changed",update);update();}{// POINT SIZING
        var strSizeType=Object.keys(Potree.PointSizeType)[material.pointSizeType];var opt=panel.find('#optPointSizing');opt.selectmenu();opt.val(strSizeType).selectmenu('refresh');opt.selectmenu({change:function change(event,ui){material.pointSizeType=Potree.PointSizeType[ui.item.value];}});}{// SHAPE
        var _opt=panel.find('#optShape');_opt.selectmenu({change:function change(event,ui){var value=ui.item.value;material.shape=Potree.PointShape[value];}});var _update=function _update(){var typename=Object.keys(Potree.PointShape)[material.shape];_opt.selectmenu().val(typename).selectmenu('refresh');};this.addVolatileListener(material,"point_shape_changed",_update);_update();}{// OPACITY
        var sldOpacity=panel.find('#sldOpacity');var lblOpacity=panel.find('#lblOpacity');sldOpacity.slider({value:material.opacity,min:0,max:1,step:0.001,slide:function slide(event,ui){material.opacity=ui.value;}});var _update2=function _update2(e){lblOpacity.html(material.opacity.toFixed(2));sldOpacity.slider({value:material.opacity});};this.addVolatileListener(material,"opacity_changed",_update2);_update2();}{var options=['RGB','RGB and Elevation','Color','Elevation','Intensity','Intensity Gradient','Classification','Return Number','Source','Index','Level of Detail','Composite'];var attributeSelection=panel.find('#optMaterial');var _iteratorNormalCompletion155=true;var _didIteratorError155=false;var _iteratorError155=undefined;try{for(var _iterator155=options[Symbol.iterator](),_step155;!(_iteratorNormalCompletion155=(_step155=_iterator155.next()).done);_iteratorNormalCompletion155=true){var option=_step155.value;var elOption=$('<option>'+option+'</option>');attributeSelection.append(elOption);}}catch(err){_didIteratorError155=true;_iteratorError155=err;}finally{try{if(!_iteratorNormalCompletion155&&_iterator155.return){_iterator155.return();}}finally{if(_didIteratorError155){throw _iteratorError155;}}}var updateMaterialPanel=function updateMaterialPanel(event,ui){var selectedValue=attributeSelection.selectmenu().val();material.pointColorType=Potree.toMaterialID(selectedValue);var blockWeights=$('#materials\\.composite_weight_container');var blockElevation=$('#materials\\.elevation_container');var blockRGB=$('#materials\\.rgb_container');var blockColor=$('#materials\\.color_container');var blockIntensity=$('#materials\\.intensity_container');var blockIndex=$('#materials\\.index_container');var blockTransition=$('#materials\\.transition_container');blockIndex.css('display','none');blockIntensity.css('display','none');blockElevation.css('display','none');blockRGB.css('display','none');blockColor.css('display','none');blockWeights.css('display','none');blockTransition.css('display','none');if(selectedValue==='Composite'){blockWeights.css('display','block');blockElevation.css('display','block');blockRGB.css('display','block');blockIntensity.css('display','block');}else if(selectedValue==='Elevation'){blockElevation.css('display','block');}else if(selectedValue==='RGB and Elevation'){blockRGB.css('display','block');blockElevation.css('display','block');}else if(selectedValue==='RGB'){blockRGB.css('display','block');}else if(selectedValue==='Color'){blockColor.css('display','block');}else if(selectedValue==='Intensity'){blockIntensity.css('display','block');}else if(selectedValue==='Intensity Gradient'){blockIntensity.css('display','block');}else if(selectedValue==="Index"){blockIndex.css('display','block');}};attributeSelection.selectmenu({change:updateMaterialPanel});var _update3=function _update3(){attributeSelection.val(Potree.toMaterialName(material.pointColorType)).selectmenu('refresh');};this.addVolatileListener(material,"point_color_type_changed",_update3);_update3();updateMaterialPanel();}{var schemes=[{name:"SPECTRAL",icon:Potree.resourcePath+'/icons/gradients_spectral.png'},{name:"YELLOW_GREEN",icon:Potree.resourcePath+'/icons/gradients_yellow_green.png'},{name:"PLASMA",icon:Potree.resourcePath+'/icons/gradients_plasma.png'},{name:"GRAYSCALE",icon:Potree.resourcePath+'/icons/gradients_grayscale.png'},{name:"RAINBOW",icon:Potree.resourcePath+'/icons/gradients_rainbow.png'}];var elSchemeContainer=panel.find("#elevation_gradient_scheme_selection");var _iteratorNormalCompletion156=true;var _didIteratorError156=false;var _iteratorError156=undefined;try{var _loop11=function _loop11(){var scheme=_step156.value;var elScheme=$('\n\t\t\t\t\t<span style="flex-grow: 1;">\n\t\t\t\t\t\t<img src="'+scheme.icon+'" class="button-icon" style="max-width: 100%" />\n\t\t\t\t\t</span>\n\t\t\t\t');elScheme.click(function(){material.gradient=Potree.Gradients[scheme.name];});elSchemeContainer.append(elScheme);};for(var _iterator156=schemes[Symbol.iterator](),_step156;!(_iteratorNormalCompletion156=(_step156=_iterator156.next()).done);_iteratorNormalCompletion156=true){_loop11();}//panel.find("#gradient_spectral").click( () => {
//	pointcloud.material.gradient = Potree.Gradients.SPECTRAL;
//});
//panel.find("#gradient_yellow_green").click( () => {
//	pointcloud.material.gradient = Potree.Gradients.YELLOW_GREEN;
//});
    }catch(err){_didIteratorError156=true;_iteratorError156=err;}finally{try{if(!_iteratorNormalCompletion156&&_iterator156.return){_iterator156.return();}}finally{if(_didIteratorError156){throw _iteratorError156;}}}}{panel.find('#sldRGBGamma').slider({value:material.rgbGamma,min:0,max:4,step:0.01,slide:function slide(event,ui){material.rgbGamma=ui.value;}});panel.find('#sldRGBContrast').slider({value:material.rgbContrast,min:-1,max:1,step:0.01,slide:function slide(event,ui){material.rgbContrast=ui.value;}});panel.find('#sldRGBBrightness').slider({value:material.rgbBrightness,min:-1,max:1,step:0.01,slide:function slide(event,ui){material.rgbBrightness=ui.value;}});panel.find('#sldHeightRange').slider({range:true,min:0,max:1000,step:0.01,values:[0,1000],slide:function slide(event,ui){material.heightMin=ui.values[0];material.heightMax=ui.values[1];}});panel.find('#sldIntensityRange').slider({range:true,min:0,max:1,step:0.01,values:[0,1],slide:function slide(event,ui){var min=Number(ui.values[0])===0?0:parseInt(Math.pow(2,16*ui.values[0]));var max=parseInt(Math.pow(2,16*ui.values[1]));material.intensityRange=[min,max];}});panel.find('#sldIntensityGamma').slider({value:material.intensityGamma,min:0,max:4,step:0.01,slide:function slide(event,ui){material.intensityGamma=ui.value;}});panel.find('#sldIntensityContrast').slider({value:material.intensityContrast,min:-1,max:1,step:0.01,slide:function slide(event,ui){material.intensityContrast=ui.value;}});panel.find('#sldIntensityBrightness').slider({value:material.intensityBrightness,min:-1,max:1,step:0.01,slide:function slide(event,ui){material.intensityBrightness=ui.value;}});panel.find('#sldWeightRGB').slider({value:material.weightRGB,min:0,max:1,step:0.01,slide:function slide(event,ui){material.weightRGB=ui.value;}});panel.find('#sldWeightIntensity').slider({value:material.weightIntensity,min:0,max:1,step:0.01,slide:function slide(event,ui){material.weightIntensity=ui.value;}});panel.find('#sldWeightElevation').slider({value:material.weightElevation,min:0,max:1,step:0.01,slide:function slide(event,ui){material.weightElevation=ui.value;}});panel.find('#sldWeightClassification').slider({value:material.weightClassification,min:0,max:1,step:0.01,slide:function slide(event,ui){material.weightClassification=ui.value;}});panel.find('#sldWeightReturnNumber').slider({value:material.weightReturnNumber,min:0,max:1,step:0.01,slide:function slide(event,ui){material.weightReturnNumber=ui.value;}});panel.find('#sldWeightSourceID').slider({value:material.weightSourceID,min:0,max:1,step:0.01,slide:function slide(event,ui){material.weightSourceID=ui.value;}});panel.find('#materials\\.color\\.picker').spectrum({flat:true,showInput:true,preferredFormat:'rgb',cancelText:'',chooseText:'Apply',color:'#'+material.color.getHexString(),move:function move(color){var cRGB=color.toRgb();var tc=new THREE.Color().setRGB(cRGB.r/255,cRGB.g/255,cRGB.b/255);material.color=tc;},change:function change(color){var cRGB=color.toRgb();var tc=new THREE.Color().setRGB(cRGB.r/255,cRGB.g/255,cRGB.b/255);material.color=tc;}});this.addVolatileListener(material,"color_changed",function(){panel.find('#materials\\.color\\.picker').spectrum('set','#'+material.color.getHexString());});var updateHeightRange=function updateHeightRange(){var box=[pointcloud.pcoGeometry.tightBoundingBox,pointcloud.getBoundingBoxWorld()].find(function(v){return v!==undefined;});pointcloud.updateMatrixWorld(true);box=Potree.utils.computeTransformedBoundingBox(box,pointcloud.matrixWorld);var bWidth=box.max.z-box.min.z;var bMin=box.min.z-0.2*bWidth;var bMax=box.max.z+0.2*bWidth;var range=material.elevationRange;panel.find('#lblHeightRange').html(range[0].toFixed(2)+' to '+range[1].toFixed(2));panel.find('#sldHeightRange').slider({min:bMin,max:bMax,values:range});};var updateIntensityRange=function updateIntensityRange(){var range=material.intensityRange;var _range$map=range.map(function(v){return Math.log2(v)/16;}),_range$map2=_slicedToArray(_range$map,2),min=_range$map2[0],max=_range$map2[1];panel.find('#lblIntensityRange').html(parseInt(range[0])+' to '+parseInt(range[1]));panel.find('#sldIntensityRange').slider({values:[min,max]});};{updateHeightRange();panel.find('#sldHeightRange').slider('option','min');panel.find('#sldHeightRange').slider('option','max');}var onIntensityChange=function onIntensityChange(){var gamma=material.intensityGamma;var contrast=material.intensityContrast;var brightness=material.intensityBrightness;updateIntensityRange();panel.find('#lblIntensityGamma').html(gamma.toFixed(2));panel.find('#lblIntensityContrast').html(contrast.toFixed(2));panel.find('#lblIntensityBrightness').html(brightness.toFixed(2));panel.find('#sldIntensityGamma').slider({value:gamma});panel.find('#sldIntensityContrast').slider({value:contrast});panel.find('#sldIntensityBrightness').slider({value:brightness});};var onRGBChange=function onRGBChange(){var gamma=material.rgbGamma;var contrast=material.rgbContrast;var brightness=material.rgbBrightness;panel.find('#lblRGBGamma').html(gamma.toFixed(2));panel.find('#lblRGBContrast').html(contrast.toFixed(2));panel.find('#lblRGBBrightness').html(brightness.toFixed(2));panel.find('#sldRGBGamma').slider({value:gamma});panel.find('#sldRGBContrast').slider({value:contrast});panel.find('#sldRGBBrightness').slider({value:brightness});};this.addVolatileListener(material,"material_property_changed",updateHeightRange);this.addVolatileListener(material,"material_property_changed",onIntensityChange);this.addVolatileListener(material,"material_property_changed",onRGBChange);updateHeightRange();onIntensityChange();onRGBChange();}}},{key:'setMeasurement',value:function setMeasurement(object){var TYPE={DISTANCE:{panel:DistancePanel},AREA:{panel:AreaPanel},POINT:{panel:PointPanel},ANGLE:{panel:AnglePanel},HEIGHT:{panel:HeightPanel},PROFILE:{panel:ProfilePanel},VOLUME:{panel:VolumePanel}};var getType=function getType(measurement){if(measurement instanceof Potree.Measure){if(measurement.showDistances&&!measurement.showArea&&!measurement.showAngles){return TYPE.DISTANCE;}else if(measurement.showDistances&&measurement.showArea&&!measurement.showAngles){return TYPE.AREA;}else if(measurement.maxMarkers===1){return TYPE.POINT;}else if(!measurement.showDistances&&!measurement.showArea&&measurement.showAngles){return TYPE.ANGLE;}else if(measurement.showHeight){return TYPE.HEIGHT;}else{return TYPE.OTHER;}}else if(measurement instanceof Potree.Profile){return TYPE.PROFILE;}else if(measurement instanceof Potree.Volume){return TYPE.VOLUME;}};//this.container.html("measurement");
        var type=getType(object);var Panel=type.panel;var panel=new Panel(this.viewer,object,this);this.container.append(panel.elContent);}},{key:'setCamera',value:function setCamera(camera){var panel=new CameraPanel(this.viewer,this);this.container.append(panel.elContent);}}]);return PropertriesPanel;}();Potree.NavigationCube=function(_THREE$Object3D9){_inherits(NavigationCube,_THREE$Object3D9);function NavigationCube(viewer){_classCallCheck(this,NavigationCube);var _this92=_possibleConstructorReturn(this,(NavigationCube.__proto__||Object.getPrototypeOf(NavigationCube)).call(this));_this92.viewer=viewer;var createPlaneMaterial=function createPlaneMaterial(img){var material=new THREE.MeshBasicMaterial({depthTest:true,depthWrite:true,side:THREE.DoubleSide});new THREE.TextureLoader().load(Potree.resourcePath+'/textures/navigation/'+img,function(texture){texture.anisotropy=viewer.renderer.getMaxAnisotropy();material.map=texture;material.needsUpdate=true;});return material;};var planeGeometry=new THREE.PlaneGeometry(1,1);_this92.front=new THREE.Mesh(planeGeometry,createPlaneMaterial('F.png'));_this92.front.position.y=-0.5;_this92.front.rotation.x=Math.PI/2.0;_this92.front.updateMatrixWorld();_this92.front.name="F";_this92.add(_this92.front);_this92.back=new THREE.Mesh(planeGeometry,createPlaneMaterial('B.png'));_this92.back.position.y=0.5;_this92.back.rotation.x=Math.PI/2.0;_this92.back.updateMatrixWorld();_this92.back.name="B";_this92.add(_this92.back);_this92.left=new THREE.Mesh(planeGeometry,createPlaneMaterial('L.png'));_this92.left.position.x=-0.5;_this92.left.rotation.y=Math.PI/2.0;_this92.left.updateMatrixWorld();_this92.left.name="L";_this92.add(_this92.left);_this92.right=new THREE.Mesh(planeGeometry,createPlaneMaterial('R.png'));_this92.right.position.x=0.5;_this92.right.rotation.y=Math.PI/2.0;_this92.right.updateMatrixWorld();_this92.right.name="R";_this92.add(_this92.right);_this92.bottom=new THREE.Mesh(planeGeometry,createPlaneMaterial('D.png'));_this92.bottom.position.z=-0.5;_this92.bottom.updateMatrixWorld();_this92.bottom.name="D";_this92.add(_this92.bottom);_this92.top=new THREE.Mesh(planeGeometry,createPlaneMaterial('U.png'));_this92.top.position.z=0.5;_this92.top.updateMatrixWorld();_this92.top.name="U";_this92.add(_this92.top);_this92.width=150;// in px
    _this92.camera=new THREE.OrthographicCamera(-1,1,1,-1,-1,1);_this92.camera.position.copy(new THREE.Vector3(0,0,0));_this92.camera.lookAt(new THREE.Vector3(0,1,0));_this92.camera.updateMatrixWorld();_this92.camera.rotation.order="ZXY";var onMouseDown=function onMouseDown(event){_this92.pickedFace=null;var mouse=new THREE.Vector2();mouse.x=event.clientX-(window.innerWidth-_this92.width);mouse.y=event.clientY;if(mouse.x<0||mouse.y>_this92.width)return;mouse.x=mouse.x/_this92.width*2-1;mouse.y=-(mouse.y/_this92.width)*2+1;var raycaster=new THREE.Raycaster();raycaster.setFromCamera(mouse,_this92.camera);raycaster.ray.origin.sub(_this92.camera.getWorldDirection());var intersects=raycaster.intersectObjects(_this92.children);var minDistance=1000;for(var _i100=0;_i100<intersects.length;_i100++){if(intersects[_i100].distance<minDistance){_this92.pickedFace=intersects[_i100].object.name;minDistance=intersects[_i100].distance;}}if(_this92.pickedFace){_this92.viewer.setView(_this92.pickedFace);}};_this92.viewer.renderer.domElement.addEventListener('mousedown',onMouseDown,false);return _this92;}_createClass(NavigationCube,[{key:'update',value:function update(rotation){this.camera.rotation.copy(rotation);this.camera.updateMatrixWorld();}}]);return NavigationCube;}(THREE.Object3D);Potree.GLProgram=function(){function GLProgram(gl,material){_classCallCheck(this,GLProgram);this.gl=gl;this.material=material;this.program=gl.createProgram();;this.recompile();}_createClass(GLProgram,[{key:'compileShader',value:function compileShader(type,source){var gl=this.gl;var vs=gl.createShader(type);gl.shaderSource(vs,source);gl.compileShader(vs);var success=gl.getShaderParameter(vs,gl.COMPILE_STATUS);if(!success){console.error('could not compile shader:');var log=gl.getShaderInfoLog(vs);console.error(log,source);return null;}return vs;}},{key:'recompile',value:function recompile(){var gl=this.gl;var vs=this.compileShader(gl.VERTEX_SHADER,this.material.vertexShader);var fs=this.compileShader(gl.FRAGMENT_SHADER,this.material.fragmentShader);if(vs===null||fs===null){return;}// PROGRAM
        var program=this.program;gl.attachShader(program,vs);gl.attachShader(program,fs);gl.linkProgram(program);var success=gl.getProgramParameter(program,gl.LINK_STATUS);if(!success){console.error('could not compile/link program:');console.error(this.material.vertexShader);console.error(this.material.fragmentShader);return;}gl.detachShader(program,vs);gl.detachShader(program,fs);gl.deleteShader(vs);gl.deleteShader(fs);gl.useProgram(program);{// UNIFORMS
            var uniforms={};var n=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS);for(var _i101=0;_i101<n;_i101++){var uniform=gl.getActiveUniform(program,_i101);var name=uniform.name;var loc=gl.getUniformLocation(program,name);uniforms[name]=loc;}this.uniforms=uniforms;}}}]);return GLProgram;}();Potree.InterleavedBufferAttribute=function InterleavedBufferAttribute(name,bytes,numElements,type,normalized){_classCallCheck(this,InterleavedBufferAttribute);this.name=name;this.bytes=bytes;this.numElements=numElements;this.normalized=normalized;this.type=type;// gl type without prefix, e.g. "FLOAT", "UNSIGNED_INT"
};Potree.InterleavedBuffer=function(){function InterleavedBuffer(data,attributes,numElements){_classCallCheck(this,InterleavedBuffer);this.data=data;this.attributes=attributes;this.stride=attributes.reduce(function(a,att){return a+att.bytes;},0);this.stride=Math.ceil(this.stride/4)*4;this.numElements=numElements;}_createClass(InterleavedBuffer,[{key:'offset',value:function offset(name){var offset=0;var _iteratorNormalCompletion157=true;var _didIteratorError157=false;var _iteratorError157=undefined;try{for(var _iterator157=this.attributes[Symbol.iterator](),_step157;!(_iteratorNormalCompletion157=(_step157=_iterator157.next()).done);_iteratorNormalCompletion157=true){var att=_step157.value;if(att.name===name){return offset;}offset+=att.bytes;}}catch(err){_didIteratorError157=true;_iteratorError157=err;}finally{try{if(!_iteratorNormalCompletion157&&_iterator157.return){_iterator157.return();}}finally{if(_didIteratorError157){throw _iteratorError157;}}}return null;}}]);return InterleavedBuffer;}();Potree.toInterleavedBufferAttribute=function toInterleavedBufferAttribute(pointAttribute){var att=null;if(pointAttribute.name===Potree.PointAttribute.POSITION_CARTESIAN.name){att=new Potree.InterleavedBufferAttribute("position",12,3,"FLOAT",false);}else if(pointAttribute.name===Potree.PointAttribute.COLOR_PACKED.name){att=new Potree.InterleavedBufferAttribute("color",4,4,"UNSIGNED_BYTE",true);}else if(pointAttribute.name===Potree.PointAttribute.INTENSITY.name){att=new Potree.InterleavedBufferAttribute("intensity",4,1,"FLOAT",false);}else if(pointAttribute.name===Potree.PointAttribute.CLASSIFICATION.name){att=new Potree.InterleavedBufferAttribute("classification",4,1,"FLOAT",false);}else if(pointAttribute.name===Potree.PointAttribute.RETURN_NUMBER.name){att=new Potree.InterleavedBufferAttribute("returnNumber",4,1,"FLOAT",false);}else if(pointAttribute.name===Potree.PointAttribute.NUMBER_OF_RETURNS.name){att=new Potree.InterleavedBufferAttribute("numberOfReturns",4,1,"FLOAT",false);}else if(pointAttribute.name===Potree.PointAttribute.SOURCE_ID.name){att=new Potree.InterleavedBufferAttribute("pointSourceID",4,1,"FLOAT",false);}else if(pointAttribute.name===Potree.PointAttribute.NORMAL_SPHEREMAPPED.name){att=new Potree.InterleavedBufferAttribute("normal",12,3,"FLOAT",false);}else if(pointAttribute.name===Potree.PointAttribute.NORMAL_OCT16.name){att=new Potree.InterleavedBufferAttribute("normal",12,3,"FLOAT",false);}else if(pointAttribute.name===Potree.PointAttribute.NORMAL.name){att=new Potree.InterleavedBufferAttribute("normal",12,3,"FLOAT",false);}return att;};var GeoTIFF=function(exports){'use strict';var EnumItem=function(){function EnumItem(object){_classCallCheck(this,EnumItem);var _iteratorNormalCompletion158=true;var _didIteratorError158=false;var _iteratorError158=undefined;try{for(var _iterator158=Object.keys(object)[Symbol.iterator](),_step158;!(_iteratorNormalCompletion158=(_step158=_iterator158.next()).done);_iteratorNormalCompletion158=true){var key=_step158.value;this[key]=object[key];}}catch(err){_didIteratorError158=true;_iteratorError158=err;}finally{try{if(!_iteratorNormalCompletion158&&_iterator158.return){_iterator158.return();}}finally{if(_didIteratorError158){throw _iteratorError158;}}}}_createClass(EnumItem,[{key:'inspect',value:function inspect(){return'Enum('+this.name+': '+this.value+')';}}]);return EnumItem;}();var Enum=function(){function Enum(object){_classCallCheck(this,Enum);this.object=object;var _iteratorNormalCompletion159=true;var _didIteratorError159=false;var _iteratorError159=undefined;try{for(var _iterator159=Object.keys(object)[Symbol.iterator](),_step159;!(_iteratorNormalCompletion159=(_step159=_iterator159.next()).done);_iteratorNormalCompletion159=true){var key=_step159.value;var _value4=object[key];if((typeof _value4==='undefined'?'undefined':_typeof(_value4))==="object"){_value4.name=key;}else{_value4={name:key,value:_value4};}this[key]=new EnumItem(_value4);}}catch(err){_didIteratorError159=true;_iteratorError159=err;}finally{try{if(!_iteratorNormalCompletion159&&_iterator159.return){_iterator159.return();}}finally{if(_didIteratorError159){throw _iteratorError159;}}}}_createClass(Enum,[{key:'fromValue',value:function fromValue(value){var _iteratorNormalCompletion160=true;var _didIteratorError160=false;var _iteratorError160=undefined;try{for(var _iterator160=Object.keys(this.object)[Symbol.iterator](),_step160;!(_iteratorNormalCompletion160=(_step160=_iterator160.next()).done);_iteratorNormalCompletion160=true){var key=_step160.value;if(this[key].value===value){return this[key];}}}catch(err){_didIteratorError160=true;_iteratorError160=err;}finally{try{if(!_iteratorNormalCompletion160&&_iterator160.return){_iterator160.return();}}finally{if(_didIteratorError160){throw _iteratorError160;}}}throw new Error('No enum for value: '+value);}}]);return Enum;}();var Endianness=new Enum({LITTLE:"II",BIG:"MM"});var Type=new Enum({BYTE:{value:1,bytes:1},ASCII:{value:2,bytes:1},SHORT:{value:3,bytes:2},LONG:{value:4,bytes:4},RATIONAL:{value:5,bytes:8},SBYTE:{value:6,bytes:1},UNDEFINED:{value:7,bytes:1},SSHORT:{value:8,bytes:2},SLONG:{value:9,bytes:4},SRATIONAL:{value:10,bytes:8},FLOAT:{value:11,bytes:4},DOUBLE:{value:12,bytes:8}});var Tag=new Enum({IMAGE_WIDTH:256,IMAGE_HEIGHT:257,BITS_PER_SAMPLE:258,COMPRESSION:259,PHOTOMETRIC_INTERPRETATION:262,STRIP_OFFSETS:273,ORIENTATION:274,SAMPLES_PER_PIXEL:277,ROWS_PER_STRIP:278,STRIP_BYTE_COUNTS:279,X_RESOLUTION:282,Y_RESOLUTION:283,PLANAR_CONFIGURATION:284,RESOLUTION_UNIT:296,SOFTWARE:305,COLOR_MAP:320,SAMPLE_FORMAT:339,MODEL_PIXEL_SCALE:33550,// [GeoTIFF] TYPE: double   N: 3
    MODEL_TIEPOINT:33922,// [GeoTIFF] TYPE: double   N: 6 * NUM_TIEPOINTS
    GEO_KEY_DIRECTORY:34735,// [GeoTIFF] TYPE: short    N: >= 4
    GEO_DOUBLE_PARAMS:34736,// [GeoTIFF] TYPE: short    N: variable
    GEO_ASCII_PARAMS:34737// [GeoTIFF] TYPE: ascii    N: variable
});var typeMapping=new Map([[Type.BYTE,Uint8Array],[Type.ASCII,Uint8Array],[Type.SHORT,Uint16Array],[Type.LONG,Uint32Array],[Type.RATIONAL,Uint32Array],[Type.SBYTE,Int8Array],[Type.UNDEFINED,Uint8Array],[Type.SSHORT,Int16Array],[Type.SLONG,Int32Array],[Type.SRATIONAL,Int32Array],[Type.FLOAT,Float32Array],[Type.DOUBLE,Float64Array]]);var IFDEntry=function IFDEntry(tag,type,count,offset,value){_classCallCheck(this,IFDEntry);this.tag=tag;this.type=type;this.count=count;this.offset=offset;this.value=value;};var Image=function Image(){_classCallCheck(this,Image);this.width=0;this.height=0;this.buffer=null;this.metadata=[];};var Reader=function(){function Reader(){_classCallCheck(this,Reader);}_createClass(Reader,null,[{key:'read',value:function read(data){var endiannessTag=String.fromCharCode.apply(String,_toConsumableArray(Array.from(data.slice(0,2))));var endianness=Endianness.fromValue(endiannessTag);var tiffCheckTag=data.readUInt8(2);if(tiffCheckTag!==42){throw new Error("not a valid tiff file");}var offsetToFirstIFD=data.readUInt32LE(4);console.log("offsetToFirstIFD",offsetToFirstIFD);var ifds=[];var IFDsRead=false;var currentIFDOffset=offsetToFirstIFD;var i=0;while(IFDsRead||i<100){console.log("currentIFDOffset",currentIFDOffset);var numEntries=data.readUInt16LE(currentIFDOffset);var nextIFDOffset=data.readUInt32LE(currentIFDOffset+2+numEntries*12);console.log("next offset: ",currentIFDOffset+2+numEntries*12);var entryBuffer=data.slice(currentIFDOffset+2,currentIFDOffset+2+12*numEntries);for(var _i102=0;_i102<numEntries;_i102++){var tag=Tag.fromValue(entryBuffer.readUInt16LE(_i102*12));var type=Type.fromValue(entryBuffer.readUInt16LE(_i102*12+2));var count=entryBuffer.readUInt32LE(_i102*12+4);var offsetOrValue=entryBuffer.readUInt32LE(_i102*12+8);var valueBytes=type.bytes*count;var _value5=void 0;if(valueBytes<=4){_value5=offsetOrValue;}else{var valueBuffer=new Uint8Array(valueBytes);valueBuffer.set(data.slice(offsetOrValue,offsetOrValue+valueBytes));var ArrayType=typeMapping.get(type);_value5=new ArrayType(valueBuffer.buffer);if(type===Type.ASCII){_value5=String.fromCharCode.apply(String,_toConsumableArray(_value5));}}var ifd=new IFDEntry(tag,type,count,offsetOrValue,_value5);ifds.push(ifd);}console.log("nextIFDOffset",nextIFDOffset);if(nextIFDOffset===0){break;}currentIFDOffset=nextIFDOffset;i++;}var ifdForTag=function ifdForTag(tag){var _iteratorNormalCompletion161=true;var _didIteratorError161=false;var _iteratorError161=undefined;try{for(var _iterator161=ifds[Symbol.iterator](),_step161;!(_iteratorNormalCompletion161=(_step161=_iterator161.next()).done);_iteratorNormalCompletion161=true){var entry=_step161.value;if(entry.tag===tag){return entry;}}}catch(err){_didIteratorError161=true;_iteratorError161=err;}finally{try{if(!_iteratorNormalCompletion161&&_iterator161.return){_iterator161.return();}}finally{if(_didIteratorError161){throw _iteratorError161;}}}return null;};var width=ifdForTag(Tag.IMAGE_WIDTH,ifds).value;var height=ifdForTag(Tag.IMAGE_HEIGHT,ifds).value;var compression=ifdForTag(Tag.COMPRESSION,ifds).value;var rowsPerStrip=ifdForTag(Tag.ROWS_PER_STRIP,ifds).value;var ifdStripOffsets=ifdForTag(Tag.STRIP_OFFSETS,ifds);var ifdStripByteCounts=ifdForTag(Tag.STRIP_BYTE_COUNTS,ifds);var numStrips=Math.ceil(height/rowsPerStrip);var stripByteCounts=[];for(var _i103=0;_i103<ifdStripByteCounts.count;_i103++){var _type=ifdStripByteCounts.type;var offset=ifdStripByteCounts.offset+_i103*_type.bytes;var _value6=void 0;if(_type===Type.SHORT){_value6=data.readUInt16LE(offset);}else if(_type===Type.LONG){_value6=data.readUInt32LE(offset);}stripByteCounts.push(_value6);}var stripOffsets=[];for(var _i104=0;_i104<ifdStripOffsets.count;_i104++){var _type2=ifdStripOffsets.type;var _offset=ifdStripOffsets.offset+_i104*_type2.bytes;var _value7=void 0;if(_type2===Type.SHORT){_value7=data.readUInt16LE(_offset);}else if(_type2===Type.LONG){_value7=data.readUInt32LE(_offset);}stripOffsets.push(_value7);}var imageBuffer=new Uint8Array(width*height*3);var linesProcessed=0;for(var _i105=0;_i105<numStrips;_i105++){var stripOffset=stripOffsets[_i105];var stripBytes=stripByteCounts[_i105];var stripData=data.slice(stripOffset,stripOffset+stripBytes);var lineBytes=width*3;for(var y=0;y<rowsPerStrip;y++){var line=stripData.slice(y*lineBytes,y*lineBytes+lineBytes);imageBuffer.set(line,linesProcessed*lineBytes);if(line.length===lineBytes){linesProcessed++;}else{break;}}}console.log('width: '+width);console.log('height: '+height);console.log('numStrips: '+numStrips);console.log("stripByteCounts",stripByteCounts.join(", "));console.log("stripOffsets",stripOffsets.join(", "));var image=new Image();image.width=width;image.height=height;image.buffer=imageBuffer;image.metadata=ifds;return image;}}]);return Reader;}();var Exporter=function(){function Exporter(){_classCallCheck(this,Exporter);}_createClass(Exporter,null,[{key:'toTiffBuffer',value:function toTiffBuffer(image){var params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var offsetToFirstIFD=8;var headerBuffer=new Uint8Array([0x49,0x49,42,0,offsetToFirstIFD,0,0,0]);var _ref14=[image.width,image.height],width=_ref14[0],height=_ref14[1];var ifds=[new IFDEntry(Tag.IMAGE_WIDTH,Type.SHORT,1,null,width),new IFDEntry(Tag.IMAGE_HEIGHT,Type.SHORT,1,null,height),new IFDEntry(Tag.BITS_PER_SAMPLE,Type.SHORT,4,null,new Uint16Array([8,8,8,8])),new IFDEntry(Tag.COMPRESSION,Type.SHORT,1,null,1),new IFDEntry(Tag.PHOTOMETRIC_INTERPRETATION,Type.SHORT,1,null,2),new IFDEntry(Tag.ORIENTATION,Type.SHORT,1,null,1),new IFDEntry(Tag.SAMPLES_PER_PIXEL,Type.SHORT,1,null,4),new IFDEntry(Tag.ROWS_PER_STRIP,Type.LONG,1,null,height),new IFDEntry(Tag.STRIP_BYTE_COUNTS,Type.LONG,1,null,width*height*3),new IFDEntry(Tag.PLANAR_CONFIGURATION,Type.SHORT,1,null,1),new IFDEntry(Tag.RESOLUTION_UNIT,Type.SHORT,1,null,1),new IFDEntry(Tag.SOFTWARE,Type.ASCII,6,null,"......"),new IFDEntry(Tag.STRIP_OFFSETS,Type.LONG,1,null,null),new IFDEntry(Tag.X_RESOLUTION,Type.RATIONAL,1,null,new Uint32Array([1,1])),new IFDEntry(Tag.Y_RESOLUTION,Type.RATIONAL,1,null,new Uint32Array([1,1]))];if(params.ifdEntries){ifds.push.apply(ifds,_toConsumableArray(params.ifdEntries));}var valueOffset=offsetToFirstIFD+2+ifds.length*12+4;// create 12 byte buffer for each ifd and variable length buffers for ifd values
        var ifdEntryBuffers=new Map();var ifdValueBuffers=new Map();var _iteratorNormalCompletion162=true;var _didIteratorError162=false;var _iteratorError162=undefined;try{for(var _iterator162=ifds[Symbol.iterator](),_step162;!(_iteratorNormalCompletion162=(_step162=_iterator162.next()).done);_iteratorNormalCompletion162=true){var ifd=_step162.value;var entryBuffer=new ArrayBuffer(12);var entryView=new DataView(entryBuffer);var valueBytes=ifd.type.bytes*ifd.count;entryView.setUint16(0,ifd.tag.value,true);entryView.setUint16(2,ifd.type.value,true);entryView.setUint32(4,ifd.count,true);if(ifd.count===1&&ifd.type.bytes<=4){entryView.setUint32(8,ifd.value,true);}else{entryView.setUint32(8,valueOffset,true);var valueBuffer=new Uint8Array(ifd.count*ifd.type.bytes);if(ifd.type===Type.ASCII){valueBuffer.set(new Uint8Array(ifd.value.split("").map(function(c){return c.charCodeAt(0);})));}else{valueBuffer.set(new Uint8Array(ifd.value.buffer));}ifdValueBuffers.set(ifd.tag,valueBuffer);valueOffset=valueOffset+valueBuffer.byteLength;}ifdEntryBuffers.set(ifd.tag,entryBuffer);}}catch(err){_didIteratorError162=true;_iteratorError162=err;}finally{try{if(!_iteratorNormalCompletion162&&_iterator162.return){_iterator162.return();}}finally{if(_didIteratorError162){throw _iteratorError162;}}}var imageBufferOffset=valueOffset;new DataView(ifdEntryBuffers.get(Tag.STRIP_OFFSETS)).setUint32(8,imageBufferOffset,true);var concatBuffers=function concatBuffers(buffers){var totalLength=buffers.reduce(function(sum,buffer){return sum+buffer.byteLength;},0);var merged=new Uint8Array(totalLength);var offset=0;var _iteratorNormalCompletion163=true;var _didIteratorError163=false;var _iteratorError163=undefined;try{for(var _iterator163=buffers[Symbol.iterator](),_step163;!(_iteratorNormalCompletion163=(_step163=_iterator163.next()).done);_iteratorNormalCompletion163=true){var buffer=_step163.value;merged.set(new Uint8Array(buffer),offset);offset+=buffer.byteLength;}}catch(err){_didIteratorError163=true;_iteratorError163=err;}finally{try{if(!_iteratorNormalCompletion163&&_iterator163.return){_iterator163.return();}}finally{if(_didIteratorError163){throw _iteratorError163;}}}return merged;};var ifdBuffer=concatBuffers([new Uint16Array([ifds.length])].concat(_toConsumableArray(ifdEntryBuffers.values()),[new Uint32Array([0])]));var ifdValueBuffer=concatBuffers([].concat(_toConsumableArray(ifdValueBuffers.values())));var tiffBuffer=concatBuffers([headerBuffer,ifdBuffer,ifdValueBuffer,image.buffer]);return{width:width,height:height,buffer:tiffBuffer};}}]);return Exporter;}();exports.Tag=Tag;exports.Type=Type;exports.IFDEntry=IFDEntry;exports.Image=Image;exports.Reader=Reader;exports.Exporter=Exporter;return exports;}({});